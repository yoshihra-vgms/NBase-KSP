//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferences.NBaseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NBaseService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiGetsujiShime_GetRecordByLastDate", ReplyAction="http://tempuri.org/IService/SiGetsujiShime_GetRecordByLastDateResponse")]
        NBaseData.DAC.SiGetsujiShime SiGetsujiShime_GetRecordByLastDate(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiGetsujiShime_GetRecordByLastDate", ReplyAction="http://tempuri.org/IService/SiGetsujiShime_GetRecordByLastDateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiGetsujiShime> SiGetsujiShime_GetRecordByLastDateAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiGetsujiShime_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiGetsujiShime_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiGetsujiShime> SiGetsujiShime_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiGetsujiShime_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiGetsujiShime_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiGetsujiShime>> SiGetsujiShime_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiNenjiShime_GetRecordByLastDate", ReplyAction="http://tempuri.org/IService/SiNenjiShime_GetRecordByLastDateResponse")]
        NBaseData.DAC.SiNenjiShime SiNenjiShime_GetRecordByLastDate(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiNenjiShime_GetRecordByLastDate", ReplyAction="http://tempuri.org/IService/SiNenjiShime_GetRecordByLastDateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiNenjiShime> SiNenjiShime_GetRecordByLastDateAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiNenjiShime_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiNenjiShime_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiNenjiShime> SiNenjiShime_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiNenjiShime_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiNenjiShime_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiNenjiShime>> SiNenjiShime_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_GetRecordsByKyori1Kyori2", ReplyAction="http://tempuri.org/IService/MsBashoKyori_GetRecordsByKyori1Kyori2Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori> MsBashoKyori_GetRecordsByKyori1Kyori2(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_GetRecordsByKyori1Kyori2", ReplyAction="http://tempuri.org/IService/MsBashoKyori_GetRecordsByKyori1Kyori2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori>> MsBashoKyori_GetRecordsByKyori1Kyori2Async(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_GetRecord", ReplyAction="http://tempuri.org/IService/MsBashoKyori_GetRecordResponse")]
        NBaseData.DAC.MsBashoKyori MsBashoKyori_GetRecord(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_GetRecord", ReplyAction="http://tempuri.org/IService/MsBashoKyori_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsBashoKyori> MsBashoKyori_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBashoKyori_InsertRecordResponse")]
        bool MsBashoKyori_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBashoKyori_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBashoKyori_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBashoKyori_UpdateRecordResponse")]
        bool MsBashoKyori_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBashoKyori_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBashoKyori_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_GetRecordsByMsBashoID", ReplyAction="http://tempuri.org/IService/MsBashoKyori_GetRecordsByMsBashoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori> MsBashoKyori_GetRecordsByMsBashoID(NBaseData.DAC.MsUser loginUser, string ms_basho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKyori_GetRecordsByMsBashoID", ReplyAction="http://tempuri.org/IService/MsBashoKyori_GetRecordsByMsBashoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori>> MsBashoKyori_GetRecordsByMsBashoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_basho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_GetRecords", ReplyAction="http://tempuri.org/IService/MsBashoKubun_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun> MsBashoKubun_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_GetRecords", ReplyAction="http://tempuri.org/IService/MsBashoKubun_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun>> MsBashoKubun_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsBashoKubun_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun> MsBashoKubun_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string bashoKubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsBashoKubun_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun>> MsBashoKubun_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string bashoKubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBashoKubun_InsertRecordResponse")]
        bool MsBashoKubun_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBashoKubun_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBashoKubun_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBashoKubun_UpdateRecordResponse")]
        bool MsBashoKubun_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBashoKubun_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBashoKubun_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBashoKubun_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrGassanHead_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrGassanHead_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrGassanHead> OdShrGassanHead_GetRecords(NBaseData.DAC.MsUser loginUser, string msCustomerId, string msThiIraiSbtId, string msThiIraiShousaiId, int msVesselId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrGassanHead_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrGassanHead_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrGassanHead>> OdShrGassanHead_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string msCustomerId, string msThiIraiSbtId, string msThiIraiShousaiId, int msVesselId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrGassanHead_GetRecord", ReplyAction="http://tempuri.org/IService/OdShrGassanHead_GetRecordResponse")]
        NBaseData.DAC.OdShrGassanHead OdShrGassanHead_GetRecord(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrGassanHead_GetRecord", ReplyAction="http://tempuri.org/IService/OdShrGassanHead_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdShrGassanHead> OdShrGassanHead_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrGassanItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrGassanItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem> OdShrGassanItem_GetRecords(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrGassanItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrGassanItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem>> OdShrGassanItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCargoYusoItem> MsCargoYusoItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargoYusoItem>> MsCargoYusoItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_GetRecord", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_GetRecordResponse")]
        NBaseData.DAC.MsCargoYusoItem MsCargoYusoItem_GetRecord(NBaseData.DAC.MsUser loginUser, int MsCargoYusoItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_GetRecord", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsCargoYusoItem> MsCargoYusoItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int MsCargoYusoItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_GetRecordByMsCargoID", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_GetRecordByMsCargoIDResponse")]
        NBaseData.DAC.MsCargoYusoItem MsCargoYusoItem_GetRecordByMsCargoID(NBaseData.DAC.MsUser loginUser, int MsCargoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_GetRecordByMsCargoID", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_GetRecordByMsCargoIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsCargoYusoItem> MsCargoYusoItem_GetRecordByMsCargoIDAsync(NBaseData.DAC.MsUser loginUser, int MsCargoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_InsertRecord", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_InsertRecordResponse")]
        bool MsCargoYusoItem_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargoYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoYusoItem_InsertRecord", ReplyAction="http://tempuri.org/IService/MsCargoYusoItem_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCargoYusoItem_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargoYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_GetRecords", ReplyAction="http://tempuri.org/IService/SnSyncInfo_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SnSyncInfo> SnSyncInfo_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_GetRecords", ReplyAction="http://tempuri.org/IService/SnSyncInfo_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SnSyncInfo>> SnSyncInfo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_GetRecord", ReplyAction="http://tempuri.org/IService/SnSyncInfo_GetRecordResponse")]
        NBaseData.DAC.SnSyncInfo SnSyncInfo_GetRecord(NBaseData.DAC.MsUser loginUser, string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_GetRecord", ReplyAction="http://tempuri.org/IService/SnSyncInfo_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SnSyncInfo> SnSyncInfo_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_InsertRecord", ReplyAction="http://tempuri.org/IService/SnSyncInfo_InsertRecordResponse")]
        bool SnSyncInfo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_InsertRecord", ReplyAction="http://tempuri.org/IService/SnSyncInfo_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> SnSyncInfo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/SnSyncInfo_UpdateRecordResponse")]
        bool SnSyncInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnSyncInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/SnSyncInfo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> SnSyncInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryGaisan_GetRecordByOdJryId", ReplyAction="http://tempuri.org/IService/OdJryGaisan_GetRecordByOdJryIdResponse")]
        NBaseData.DAC.OdJryGaisan OdJryGaisan_GetRecordByOdJryId(NBaseData.DAC.MsUser loginUser, string odJryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryGaisan_GetRecordByOdJryId", ReplyAction="http://tempuri.org/IService/OdJryGaisan_GetRecordByOdJryIdResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdJryGaisan> OdJryGaisan_GetRecordByOdJryIdAsync(NBaseData.DAC.MsUser loginUser, string odJryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryGaisan_Insert", ReplyAction="http://tempuri.org/IService/OdJryGaisan_InsertResponse")]
        bool OdJryGaisan_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryGaisan info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryGaisan_Insert", ReplyAction="http://tempuri.org/IService/OdJryGaisan_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdJryGaisan_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryGaisan info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraceLogging", ReplyAction="http://tempuri.org/IService/TraceLoggingResponse")]
        bool TraceLogging(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string function, string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraceLogging", ReplyAction="http://tempuri.org/IService/TraceLoggingResponse")]
        System.Threading.Tasks.Task<bool> TraceLoggingAsync(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string function, string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraceStart", ReplyAction="http://tempuri.org/IService/TraceStartResponse")]
        bool TraceStart(string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraceStart", ReplyAction="http://tempuri.org/IService/TraceStartResponse")]
        System.Threading.Tasks.Task<bool> TraceStartAsync(string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraceEnd", ReplyAction="http://tempuri.org/IService/TraceEndResponse")]
        bool TraceEnd(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TraceEnd", ReplyAction="http://tempuri.org/IService/TraceEndResponse")]
        System.Threading.Tasks.Task<bool> TraceEndAsync(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserSettings_GetRecords", ReplyAction="http://tempuri.org/IService/MsUserSettings_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsUserSettings> MsUserSettings_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserSettings_GetRecords", ReplyAction="http://tempuri.org/IService/MsUserSettings_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUserSettings>> MsUserSettings_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserSettings_InsertOrUpdateRecords", ReplyAction="http://tempuri.org/IService/MsUserSettings_InsertOrUpdateRecordsResponse")]
        bool MsUserSettings_InsertOrUpdateRecords(NBaseData.DAC.MsUser loginUser, string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserSettings_InsertOrUpdateRecords", ReplyAction="http://tempuri.org/IService/MsUserSettings_InsertOrUpdateRecordsResponse")]
        System.Threading.Tasks.Task<bool> MsUserSettings_InsertOrUpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WingMessage_GetRecords", ReplyAction="http://tempuri.org/IService/WingMessage_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.WingMessage> WingMessage_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WingMessage_GetRecords", ReplyAction="http://tempuri.org/IService/WingMessage_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.WingMessage>> WingMessage_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WingMessage_InsertRecord", ReplyAction="http://tempuri.org/IService/WingMessage_InsertRecordResponse")]
        bool WingMessage_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WingMessage_InsertRecord", ReplyAction="http://tempuri.org/IService/WingMessage_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> WingMessage_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WingMessage_UpdateRecord", ReplyAction="http://tempuri.org/IService/WingMessage_UpdateRecordResponse")]
        bool WingMessage_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WingMessage_UpdateRecord", ReplyAction="http://tempuri.org/IService/WingMessage_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> WingMessage_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdAttachFile_GetRecord", ReplyAction="http://tempuri.org/IService/OdAttachFile_GetRecordResponse")]
        NBaseData.DAC.OdAttachFile OdAttachFile_GetRecord(NBaseData.DAC.MsUser loginUser, string odAttachFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdAttachFile_GetRecord", ReplyAction="http://tempuri.org/IService/OdAttachFile_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdAttachFile> OdAttachFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odAttachFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdAttachFile_GetRecordNoData", ReplyAction="http://tempuri.org/IService/OdAttachFile_GetRecordNoDataResponse")]
        NBaseData.DAC.OdAttachFile OdAttachFile_GetRecordNoData(NBaseData.DAC.MsUser loginUser, string odAttachFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdAttachFile_GetRecordNoData", ReplyAction="http://tempuri.org/IService/OdAttachFile_GetRecordNoDataResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdAttachFile> OdAttachFile_GetRecordNoDataAsync(NBaseData.DAC.MsUser loginUser, string odAttachFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdAttachFile_GetRecordsByOdThiID", ReplyAction="http://tempuri.org/IService/OdAttachFile_GetRecordsByOdThiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> OdAttachFile_GetRecordsByOdThiID(NBaseData.DAC.MsUser loginUser, string odThiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdAttachFile_GetRecordsByOdThiID", ReplyAction="http://tempuri.org/IService/OdAttachFile_GetRecordsByOdThiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdAttachFile>> OdAttachFile_GetRecordsByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string odThiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKoushu_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKoushu_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu> MsSiKoushu_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKoushu_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKoushu_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu>> MsSiKoushu_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKoushu_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiKoushu_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu> MsSiKoushu_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKoushu_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiKoushu_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu>> MsSiKoushu_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKoushu_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiKoushu_InsertOrUpdateResponse")]
        bool MsSiKoushu_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKoushu k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKoushu_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiKoushu_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiKoushu_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKoushu k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKoushu_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/SiKoushu_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKoushu> SiKoushu_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKoushu_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/SiKoushu_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKoushu>> SiKoushu_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKoushu_GetRecordsBashoOnly", ReplyAction="http://tempuri.org/IService/SiKoushu_GetRecordsBashoOnlyResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKoushu> SiKoushu_GetRecordsBashoOnly(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKoushu_GetRecordsBashoOnly", ReplyAction="http://tempuri.org/IService/SiKoushu_GetRecordsBashoOnlyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKoushu>> SiKoushu_GetRecordsBashoOnlyAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKoushu_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKoushu_InsertOrUpdateResponse")]
        NBaseData.DAC.SiKoushu SiKoushu_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKoushu s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKoushu_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKoushu_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiKoushu> SiKoushu_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKoushu s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAnzenHyouji_GetRecord", ReplyAction="http://tempuri.org/IService/PtAnzenHyouji_GetRecordResponse")]
        NBaseData.DAC.PtAnzenHyouji PtAnzenHyouji_GetRecord(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAnzenHyouji_GetRecord", ReplyAction="http://tempuri.org/IService/PtAnzenHyouji_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.PtAnzenHyouji> PtAnzenHyouji_GetRecordAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuka_GetRecordsByNendo", ReplyAction="http://tempuri.org/IService/SiKyuka_GetRecordsByNendoResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKyuka> SiKyuka_GetRecordsByNendo(NBaseData.DAC.MsUser loginUser, string nendo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuka_GetRecordsByNendo", ReplyAction="http://tempuri.org/IService/SiKyuka_GetRecordsByNendoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKyuka>> SiKyuka_GetRecordsByNendoAsync(NBaseData.DAC.MsUser loginUser, string nendo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuka_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKyuka_InsertOrUpdateResponse")]
        bool SiKyuka_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKyuka> kyukaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuka_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKyuka_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> SiKyuka_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKyuka> kyukaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WorkPattern_GetRecords", ReplyAction="http://tempuri.org/IService/WorkPattern_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.WorkPattern> WorkPattern_GetRecords(NBaseData.DAC.MsUser loginUser, int eventKind, int msVesselID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WorkPattern_GetRecords", ReplyAction="http://tempuri.org/IService/WorkPattern_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.WorkPattern>> WorkPattern_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, int eventKind, int msVesselID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WorkPattern_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/WorkPattern_InsertOrUpdateResponse")]
        bool WorkPattern_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.WorkPattern> workPatternList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WorkPattern_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/WorkPattern_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> WorkPattern_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.WorkPattern> workPatternList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Test", ReplyAction="http://tempuri.org/IService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Test", ReplyAction="http://tempuri.org/IService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_GetRecordsByOdJryID", ReplyAction="http://tempuri.org/IService/OdJryItem_GetRecordsByOdJryIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItem_GetRecordsByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_GetRecordsByOdJryID", ReplyAction="http://tempuri.org/IService/OdJryItem_GetRecordsByOdJryIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryItem>> OdJryItem_GetRecordsByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_Insert", ReplyAction="http://tempuri.org/IService/OdJryItem_InsertResponse")]
        bool OdJryItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_Insert", ReplyAction="http://tempuri.org/IService/OdJryItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdJryItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_Update", ReplyAction="http://tempuri.org/IService/OdJryItem_UpdateResponse")]
        bool OdJryItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_Update", ReplyAction="http://tempuri.org/IService/OdJryItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdJryItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecords", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecords", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecordsByOdMkId", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsByOdMkIdResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecordsByOdMkId(NBaseData.DAC.MsUser loginUser, string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecordsByOdMkId", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsByOdMkIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsByOdMkIdAsync(NBaseData.DAC.MsUser loginUser, string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecordsByOdThiFilter", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsByOdThiFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecordsByOdThiFilter(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecordsByOdThiFilter", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsByOdThiFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsByOdThiFilterAsync(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecordsByOdJryFilter", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsByOdJryFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecordsByOdJryFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecordsByOdJryFilter", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordsByOdJryFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsByOdJryFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecord", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordResponse")]
        NBaseData.DAC.OdJry OdJry_GetRecord(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_GetRecord", ReplyAction="http://tempuri.org/IService/OdJry_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdJry> OdJry_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_Insert", ReplyAction="http://tempuri.org/IService/OdJry_InsertResponse")]
        bool OdJry_Insert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_Insert", ReplyAction="http://tempuri.org/IService/OdJry_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdJry_InsertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_Update", ReplyAction="http://tempuri.org/IService/OdJry_UpdateResponse")]
        bool OdJry_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJry_Update", ReplyAction="http://tempuri.org/IService/OdJry_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdJry_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecords", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecords", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecord", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordResponse")]
        NBaseData.DAC.OdShr OdShr_GetRecord(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecord", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdShr> OdShr_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecordByOdJryID", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordByOdJryIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecordByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecordByOdJryID", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordByOdJryIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecordsByOdThiFilter", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordsByOdThiFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecordsByOdThiFilter(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecordsByOdThiFilter", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordsByOdThiFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordsByOdThiFilterAsync(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecords落成済み未払い", ReplyAction="http://tempuri.org/IService/OdShr_GetRecords落成済み未払いResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecords落成済み未払い(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecords落成済み未払い", ReplyAction="http://tempuri.org/IService/OdShr_GetRecords落成済み未払いResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecords落成済み未払いAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecords未払い", ReplyAction="http://tempuri.org/IService/OdShr_GetRecords未払いResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecords未払い(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecords未払い", ReplyAction="http://tempuri.org/IService/OdShr_GetRecords未払いResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecords未払いAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecordByGassanItem", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordByGassanItemResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecordByGassanItem(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_GetRecordByGassanItem", ReplyAction="http://tempuri.org/IService/OdShr_GetRecordByGassanItemResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordByGassanItemAsync(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_Insert", ReplyAction="http://tempuri.org/IService/OdShr_InsertResponse")]
        bool OdShr_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_Insert", ReplyAction="http://tempuri.org/IService/OdShr_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdShr_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_Update", ReplyAction="http://tempuri.org/IService/OdShr_UpdateResponse")]
        bool OdShr_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShr_Update", ReplyAction="http://tempuri.org/IService/OdShr_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdShr_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrItem>> OdShrItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_GetRecordsByOdShrID", ReplyAction="http://tempuri.org/IService/OdShrItem_GetRecordsByOdShrIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItem_GetRecordsByOdShrID(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_GetRecordsByOdShrID", ReplyAction="http://tempuri.org/IService/OdShrItem_GetRecordsByOdShrIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrItem>> OdShrItem_GetRecordsByOdShrIDAsync(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_Insert", ReplyAction="http://tempuri.org/IService/OdShrItem_InsertResponse")]
        bool OdShrItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_Insert", ReplyAction="http://tempuri.org/IService/OdShrItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdShrItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_Update", ReplyAction="http://tempuri.org/IService/OdShrItem_UpdateResponse")]
        bool OdShrItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrItem_Update", ReplyAction="http://tempuri.org/IService/OdShrItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdShrItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecordByOdShrID", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordByOdShrIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecordByOdShrID(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecordByOdShrID", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordByOdShrIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordByOdShrIDAsync(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_InsertResponse")]
        bool OdShrShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdShrShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_UpdateResponse")]
        bool OdShrShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdShrShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdShrShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesse" +
            "lId", ReplyAction="http://tempuri.org/IService/BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesse" +
            "lIdResponse")]
        NBaseData.DAC.BgVesselYosan BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesselId(NBaseData.DAC.MsUser loginUser, int year, int yosanHeadId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesse" +
            "lId", ReplyAction="http://tempuri.org/IService/BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesse" +
            "lIdResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgVesselYosan> BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesselIdAsync(NBaseData.DAC.MsUser loginUser, int year, int yosanHeadId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgVesselYosan_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgVesselYosan_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgVesselYosan> BgVesselYosan_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgVesselYosan_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgVesselYosan_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgVesselYosan>> BgVesselYosan_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_船", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_船Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_年単位_船(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_船", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_船Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_年単位_船Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_月単位(NBaseData.DAC.MsUser msUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_月単位Async(NBaseData.DAC.MsUser msUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_全社", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_全社Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_年単位_全社(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_全社", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_全社Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_年単位_全社Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_グループ", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_グループResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_年単位_グループ(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_グループ", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_年単位_グループResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_年単位_グループAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecordByYearHimokuIDMsVesselID", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecordByYearHimokuIDMsVesselIDResponse" +
            "")]
        NBaseData.DAC.BgYosanItem BgYosanItem_GetRecordByYearHimokuIDMsVesselID(NBaseData.DAC.MsUser loginUser, int yosanheadid, int year, int himokuid, int vesselid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecordByYearHimokuIDMsVesselID", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecordByYearHimokuIDMsVesselIDResponse" +
            "")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecordByYearHimokuIDMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int yosanheadid, int year, int himokuid, int vesselid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumon" +
            "IDHimokus", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumon" +
            "IDHimokusResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumonIDHimokus(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype, int bumonid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumon" +
            "IDHimokus", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumon" +
            "IDHimokusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumonIDHimokusAsync(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype, int bumonid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimok" +
            "us", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimok" +
            "usResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimokus(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimok" +
            "us", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimok" +
            "usResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimokusAsync(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_グループ", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_グループResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_月単位_グループ(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_グループ", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_グループResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_月単位_グループAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_全社", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_全社Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_月単位_全社(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_全社", ReplyAction="http://tempuri.org/IService/BgYosanItem_GetRecords_月単位_全社Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_月単位_全社Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_UpdateRecords", ReplyAction="http://tempuri.org/IService/BgYosanItem_UpdateRecordsResponse")]
        bool BgYosanItem_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanItem_UpdateRecords", ReplyAction="http://tempuri.org/IService/BgYosanItem_UpdateRecordsResponse")]
        System.Threading.Tasks.Task<bool> BgYosanItem_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsKamoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKamoku> MsKamoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsKamoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKamoku>> MsKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKamoku_GetRecordByHachuKamoku", ReplyAction="http://tempuri.org/IService/MsKamoku_GetRecordByHachuKamokuResponse")]
        NBaseData.DAC.MsKamoku MsKamoku_GetRecordByHachuKamoku(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, string thiIraiShousaiId, string nyukyoKamokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKamoku_GetRecordByHachuKamoku", ReplyAction="http://tempuri.org/IService/MsKamoku_GetRecordByHachuKamokuResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsKamoku> MsKamoku_GetRecordByHachuKamokuAsync(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, string thiIraiShousaiId, string nyukyoKamokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinseiTantou_GetShinseiTantou", ReplyAction="http://tempuri.org/IService/MsShinseiTantou_GetShinseiTantouResponse")]
        NBaseData.DAC.MsUser MsShinseiTantou_GetShinseiTantou(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinseiTantou_GetShinseiTantou", ReplyAction="http://tempuri.org/IService/MsShinseiTantou_GetShinseiTantouResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsShinseiTantou_GetShinseiTantouAsync(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_GetRecords", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo> PtAlarmInfo_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_GetRecords", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo>> PtAlarmInfo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_GetRecordByCondition", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_GetRecordByConditionResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo> PtAlarmInfo_GetRecordByCondition(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfoCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_GetRecordByCondition", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_GetRecordByConditionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo>> PtAlarmInfo_GetRecordByConditionAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfoCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_GetRecordsBySanshoumotoId", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_GetRecordsBySanshoumotoIdResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo> PtAlarmInfo_GetRecordsBySanshoumotoId(NBaseData.DAC.MsUser loginUser, string sanshoumotoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_GetRecordsBySanshoumotoId", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_GetRecordsBySanshoumotoIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo>> PtAlarmInfo_GetRecordsBySanshoumotoIdAsync(NBaseData.DAC.MsUser loginUser, string sanshoumotoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_UpdateRecordResponse")]
        bool PtAlarmInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfo alarmInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtAlarmInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/PtAlarmInfo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> PtAlarmInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfo alarmInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtHonsenkoushinInfo_GetRecordsByCondition", ReplyAction="http://tempuri.org/IService/PtHonsenkoushinInfo_GetRecordsByConditionResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtHonsenkoushinInfo> PtHonsenkoushinInfo_GetRecordsByCondition(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtHonsenkoushinInfoCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtHonsenkoushinInfo_GetRecordsByCondition", ReplyAction="http://tempuri.org/IService/PtHonsenkoushinInfo_GetRecordsByConditionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtHonsenkoushinInfo>> PtHonsenkoushinInfo_GetRecordsByConditionAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtHonsenkoushinInfoCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByPtKanidouseiInfoId", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByPtKanidouseiInfoIdRespons" +
            "e")]
        NBaseData.DAC.PtKanidouseiInfo PtKanidouseiInfo_GetRecordByPtKanidouseiInfoId(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByPtKanidouseiInfoId", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByPtKanidouseiInfoIdRespons" +
            "e")]
        System.Threading.Tasks.Task<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordByPtKanidouseiInfoIdAsync(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByEventDate", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByEventDateResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordByEventDate(NBaseData.DAC.MsUser loginUser, System.DateTime fromDatetime, System.DateTime toDatetime, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByEventDate", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordByEventDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordByEventDateAsync(NBaseData.DAC.MsUser loginUser, System.DateTime fromDatetime, System.DateTime toDatetime, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_InsertRecord", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_InsertRecordResponse")]
        bool PtKanidouseiInfo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_InsertRecord", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> PtKanidouseiInfo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_UpdateRecordResponse")]
        bool PtKanidouseiInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> PtKanidouseiInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_DeleteRecord", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_DeleteRecordResponse")]
        bool PtKanidouseiInfo_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_DeleteRecord", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> PtKanidouseiInfo_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_重複チェック", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_重複チェックResponse")]
        bool PtKanidouseiInfo_重複チェック(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId, int msVesselId, System.DateTime eventDate, int Koma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_重複チェック", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_重複チェックResponse")]
        System.Threading.Tasks.Task<bool> PtKanidouseiInfo_重複チェックAsync(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId, int msVesselId, System.DateTime eventDate, int Koma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsKichiID", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsKichiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordsByMsKichiID(NBaseData.DAC.MsUser loginUser, string ms_kichi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsKichiID", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsKichiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordsByMsKichiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kichi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsBashoID", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsBashoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordsByMsBashoID(NBaseData.DAC.MsUser loginUser, string ms_basho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsBashoID", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsBashoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordsByMsBashoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_basho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/PtKanidouseiInfo_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShubetsu_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShubetsu_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsu> MsSiShubetsu_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShubetsu_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShubetsu_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsu>> MsSiShubetsu_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjou_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjou_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou> MsSiMenjou_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjou_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjou_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou>> MsSiMenjou_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjou_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjou_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou> MsSiMenjou_SearchRecords(NBaseData.DAC.MsUser loginUser, string name, string nameAbbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjou_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjou_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou>> MsSiMenjou_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name, string nameAbbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjou_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiMenjou_InsertOrUpdateResponse")]
        bool MsSiMenjou_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjou m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjou_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiMenjou_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiMenjou_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjou m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecords", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSenin> MsSenin_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecords", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> MsSenin_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSenin> MsSenin_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> MsSenin_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecord", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordResponse")]
        NBaseData.DAC.MsSenin MsSenin_GetRecord(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecord", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSenin> MsSenin_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSenin_InsertOrUpdateResponse")]
        bool MsSenin_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSenin_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSenin_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSenin> MsSenin_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSenin_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/MsSenin_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> MsSenin_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecord", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordResponse")]
        NBaseData.DAC.SiCard SiCard_GetRecord(NBaseData.DAC.MsUser loginUser, string siCardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecord", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiCard> SiCard_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siCardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecords", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecords", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_Get_期間重複", ReplyAction="http://tempuri.org/IService/SiCard_Get_期間重複Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_Get_期間重複(NBaseData.DAC.MsUser loginUser, int msSeninId, string siCardId, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_Get_期間重複", ReplyAction="http://tempuri.org/IService/SiCard_Get_期間重複Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_Get_期間重複Async(NBaseData.DAC.MsUser loginUser, int msSeninId, string siCardId, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_Get_船長", ReplyAction="http://tempuri.org/IService/SiCard_Get_船長Response")]
        NBaseData.DAC.SiCard SiCard_Get_船長(NBaseData.DAC.MsUser loginUser, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_Get_船長", ReplyAction="http://tempuri.org/IService/SiCard_Get_船長Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiCard> SiCard_Get_船長Async(NBaseData.DAC.MsUser loginUser, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCard_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiCard_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiHaijouItem_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiHaijouItem_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiHaijouItem> SiHaijouItem_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiHaijouItem_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiHaijouItem_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiHaijouItem>> SiHaijouItem_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> SiMenjou_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecord", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordResponse")]
        NBaseData.DAC.SiMenjou SiMenjou_GetRecord(NBaseData.DAC.MsUser loginUser, string siMenjouId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecord", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siMenjouId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouKindID", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouKindIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordsByMsSiMenjouKindID(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_kind_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouKindID", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouKindIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> SiMenjou_GetRecordsByMsSiMenjouKindIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_kind_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouID", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordsByMsSiMenjouID(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouID", ReplyAction="http://tempuri.org/IService/SiMenjou_GetRecordsByMsSiMenjouIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> SiMenjou_GetRecordsByMsSiMenjouIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiHiyouKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiHiyouKamoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku> MsSiHiyouKamoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiHiyouKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiHiyouKamoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku>> MsSiHiyouKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiHiyouKamoku_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiHiyouKamoku_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku> MsSiHiyouKamoku_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiHiyouKamoku_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiHiyouKamoku_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku>> MsSiHiyouKamoku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiHiyouKamoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiHiyouKamoku_InsertOrUpdateResponse")]
        bool MsSiHiyouKamoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiHiyouKamoku m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiHiyouKamoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiHiyouKamoku_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiHiyouKamoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiHiyouKamoku m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecords削除を含む", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecords削除を含むResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecords削除を含む(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecords削除を含む", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecords削除を含むResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecords削除を含むAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecord", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordResponse")]
        NBaseData.DAC.MsSiMeisai MsSiMeisai_GetRecord(NBaseData.DAC.MsUser loginUser, int meisaiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecord", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int meisaiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiMeisai_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_SearchRecords(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku himo, NBaseData.DAC.MsSiDaikoumoku kou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiMeisai_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku himo, NBaseData.DAC.MsSiDaikoumoku kou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiDaikoumokuID", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiDaikoumokuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecordsByMsSiDaikoumokuID(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiDaikoumokuID", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiDaikoumokuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecordsByMsSiDaikoumokuIDAsync(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiMeisai_InsertOrUpdateResponse")]
        bool MsSiMeisai_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMeisai m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiMeisai_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiMeisai_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMeisai m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiKamokuID", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiKamokuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecordsByMsSiKamokuID(NBaseData.DAC.MsUser loginUser, int ms_sikamoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiKamokuID", ReplyAction="http://tempuri.org/IService/MsSiMeisai_GetRecordsByMsSiKamokuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecordsByMsSiKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int ms_sikamoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku> MsSiDaikoumoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku>> MsSiDaikoumoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku> MsSiDaikoumoku_SearchRecords(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku ms_sihi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku>> MsSiDaikoumoku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku ms_sihi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_InsertOrUpdateResponse")]
        bool MsSiDaikoumoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiDaikoumoku m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiDaikoumoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiDaikoumoku m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuID", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku> MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuID(NBaseData.DAC.MsUser loginUser, int ms_sihi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuID", ReplyAction="http://tempuri.org/IService/MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku>> MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int ms_sihi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecords", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecords", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecord", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordResponse")]
        NBaseData.DAC.SiJunbikin SiJunbikin_GetRecord(NBaseData.DAC.MsUser loginUser, string siJunbikinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecord", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siJunbikinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiJunbikin_InsertOrUpdateResponse")]
        bool SiJunbikin_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiJunbikin s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiJunbikin_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> SiJunbikin_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiJunbikin s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByDateAndMsVesselID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByDateAndMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByDateAndMsVesselID(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByDateAndMsVesselID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByDateAndMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByDateAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_Get_先月末残高", ReplyAction="http://tempuri.org/IService/SiJunbikin_Get_先月末残高Response")]
        decimal SiJunbikin_Get_先月末残高(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_Get_先月末残高", ReplyAction="http://tempuri.org/IService/SiJunbikin_Get_先月末残高Response")]
        System.Threading.Tasks.Task<decimal> SiJunbikin_Get_先月末残高Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiHiyouKamokuID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiHiyouKamokuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsSiHiyouKamokuID(NBaseData.DAC.MsUser loginUser, int sikamokuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiHiyouKamokuID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiHiyouKamokuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsSiHiyouKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int sikamokuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiDaikoumokuID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiDaikoumokuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsSiDaikoumokuID(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiDaikoumokuID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSiDaikoumokuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsSiDaikoumokuIDAsync(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSIKamokuID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSIKamokuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsSIKamokuID(NBaseData.DAC.MsUser loginUser, int ms_si_kamoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSIKamokuID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsSIKamokuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsSIKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_kamoku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiJunbikin_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecords", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecords", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiSoukin_InsertOrUpdateResponse")]
        bool SiSoukin_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiSoukin_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> SiSoukin_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordsByDateAndMsVesselID", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsByDateAndMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordsByDateAndMsVesselID(NBaseData.DAC.MsUser loginUser, System.DateTime start, System.DateTime end, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordsByDateAndMsVesselID", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsByDateAndMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsByDateAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, System.DateTime start, System.DateTime end, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordByJunbikinId", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordByJunbikinIdResponse")]
        NBaseData.DAC.SiSoukin SiSoukin_GetRecordByJunbikinId(NBaseData.DAC.MsUser loginUser, string siJunbikinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordByJunbikinId", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordByJunbikinIdResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordByJunbikinIdAsync(NBaseData.DAC.MsUser loginUser, string siJunbikinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSoukin_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiSoukin_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKazoku_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiKazoku_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKazoku> SiKazoku_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKazoku_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiKazoku_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKazoku>> SiKazoku_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKazoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKazoku_InsertOrUpdateResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKazoku> SiKazoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, int msSeninId, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKazoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKazoku_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKazoku>> SiKazoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiRireki_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiRireki_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiRireki> SiRireki_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiRireki_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiRireki_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiRireki>> SiRireki_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiHaijou_GetRecord_前回配信", ReplyAction="http://tempuri.org/IService/SiHaijou_GetRecord_前回配信Response")]
        NBaseData.DAC.SiHaijou SiHaijou_GetRecord_前回配信(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiHaijou_GetRecord_前回配信", ReplyAction="http://tempuri.org/IService/SiHaijou_GetRecord_前回配信Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiHaijou> SiHaijou_GetRecord_前回配信Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiHaijou_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiHaijou_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiHaijou> SiHaijou_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiHaijou_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/SiHaijou_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiHaijou>> SiHaijou_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgUnkouhi_GetRecord", ReplyAction="http://tempuri.org/IService/BgUnkouhi_GetRecordResponse")]
        NBaseData.DAC.BgUnkouhi BgUnkouhi_GetRecord(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgUnkouhi_GetRecord", ReplyAction="http://tempuri.org/IService/BgUnkouhi_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgUnkouhi> BgUnkouhi_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgUnkouhi_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgUnkouhi_UpdateRecordResponse")]
        bool BgUnkouhi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgUnkouhi unkouhi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgUnkouhi_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgUnkouhi_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> BgUnkouhi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgUnkouhi unkouhi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgUchiwakeYosanItem_GetRecords_入渠", ReplyAction="http://tempuri.org/IService/BgUchiwakeYosanItem_GetRecords_入渠Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem> BgUchiwakeYosanItem_GetRecords_入渠(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgUchiwakeYosanItem_GetRecords_入渠", ReplyAction="http://tempuri.org/IService/BgUchiwakeYosanItem_GetRecords_入渠Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem>> BgUchiwakeYosanItem_GetRecords_入渠Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselID", ReplyAction="http://tempuri.org/IService/BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselIDRespo" +
            "nse")]
        NBaseData.DAC.BgYosanBikou BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselID(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselID", ReplyAction="http://tempuri.org/IService/BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgYosanBikou> BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanBikou_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgYosanBikou_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanBikou> BgYosanBikou_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanBikou_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgYosanBikou_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanBikou>> BgYosanBikou_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndSh" +
            "ubetsu", ReplyAction="http://tempuri.org/IService/BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndSh" +
            "ubetsuResponse")]
        NBaseData.DAC.BgYosanExcel BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndShubetsu(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int shubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndSh" +
            "ubetsu", ReplyAction="http://tempuri.org/IService/BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndSh" +
            "ubetsuResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgYosanExcel> BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndShubetsuAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int shubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanExcel_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BgYosanExcel_InsertOrUpdateResponse")]
        bool BgYosanExcel_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanExcel yosanExcel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanExcel_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BgYosanExcel_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> BgYosanExcel_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanExcel yosanExcel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKamoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku> MsSiKamoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKamoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku>> MsSiKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKamoku_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiKamoku_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku> MsSiKamoku_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKamoku_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiKamoku_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku>> MsSiKamoku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKamoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiKamoku_InsertOrUpdateResponse")]
        bool MsSiKamoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKamoku m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKamoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiKamoku_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiKamoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKamoku m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind> MsSiMenjouKind_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind>> MsSiMenjouKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind> MsSiMenjouKind_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiMenjouId, string name, string nameAbbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind>> MsSiMenjouKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiMenjouId, string name, string nameAbbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_InsertOrUpdateResponse")]
        bool MsSiMenjouKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjouKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiMenjouKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjouKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_GetRecordsByMsSiMenjouID", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_GetRecordsByMsSiMenjouIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind> MsSiMenjouKind_GetRecordsByMsSiMenjouID(NBaseData.DAC.MsUser loginUser, int ms_si_menjou_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiMenjouKind_GetRecordsByMsSiMenjouID", ReplyAction="http://tempuri.org/IService/MsSiMenjouKind_GetRecordsByMsSiMenjouIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind>> MsSiMenjouKind_GetRecordsByMsSiMenjouIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_menjou_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtPortalInfoFormat_GetRecordByShubet_Koumoku_Kubun", ReplyAction="http://tempuri.org/IService/PtPortalInfoFormat_GetRecordByShubet_Koumoku_KubunRes" +
            "ponse")]
        NBaseData.DAC.PtPortalInfoFormat PtPortalInfoFormat_GetRecordByShubet_Koumoku_Kubun(NBaseData.DAC.MsUser loginUser, string msPortalInfoShubetuId, string msPortalInfoKoumokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtPortalInfoFormat_GetRecordByShubet_Koumoku_Kubun", ReplyAction="http://tempuri.org/IService/PtPortalInfoFormat_GetRecordByShubet_Koumoku_KubunRes" +
            "ponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.PtPortalInfoFormat> PtPortalInfoFormat_GetRecordByShubet_Koumoku_KubunAsync(NBaseData.DAC.MsUser loginUser, string msPortalInfoShubetuId, string msPortalInfoKoumokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_SearchRecords", ReplyAction="http://tempuri.org/IService/MsVesselItem_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItem> MsVesselItem_SearchRecords(NBaseData.DAC.MsUser loginUser, string msVesselItemId, string vesselItem, int CategoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_SearchRecords", ReplyAction="http://tempuri.org/IService/MsVesselItem_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItem>> MsVesselItem_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string msVesselItemId, string vesselItem, int CategoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselItemCategory_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItemCategory> MsVesselItemCategory_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselItemCategory_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemCategory>> MsVesselItemCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselType_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselType_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselType> MsVesselType_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselType_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselType_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselType>> MsVesselType_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselType_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselType_GetRecordResponse")]
        NBaseData.DAC.MsVesselType MsVesselType_GetRecord(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselType_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselType_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVesselType> MsVesselType_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_GetRecords", ReplyAction="http://tempuri.org/IService/MsCargo_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCargo> MsCargo_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_GetRecords", ReplyAction="http://tempuri.org/IService/MsCargo_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargo>> MsCargo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_GetRecordsByCargoNoAndCargoName", ReplyAction="http://tempuri.org/IService/MsCargo_GetRecordsByCargoNoAndCargoNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCargo> MsCargo_GetRecordsByCargoNoAndCargoName(NBaseData.DAC.MsUser loginUser, string CargoNo, string CargoName, int MsYusoItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_GetRecordsByCargoNoAndCargoName", ReplyAction="http://tempuri.org/IService/MsCargo_GetRecordsByCargoNoAndCargoNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargo>> MsCargo_GetRecordsByCargoNoAndCargoNameAsync(NBaseData.DAC.MsUser loginUser, string CargoNo, string CargoName, int MsYusoItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_ExistCargo", ReplyAction="http://tempuri.org/IService/MsCargo_ExistCargoResponse")]
        bool MsCargo_ExistCargo(NBaseData.DAC.MsUser loginUser, string CargoNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_ExistCargo", ReplyAction="http://tempuri.org/IService/MsCargo_ExistCargoResponse")]
        System.Threading.Tasks.Task<bool> MsCargo_ExistCargoAsync(NBaseData.DAC.MsUser loginUser, string CargoNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_InsertRecord", ReplyAction="http://tempuri.org/IService/MsCargo_InsertRecordResponse")]
        bool MsCargo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_InsertRecord", ReplyAction="http://tempuri.org/IService/MsCargo_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCargo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsCargo_UpdateRecordResponse")]
        bool MsCargo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsCargo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCargo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsCargo_DeleteRecordResponse")]
        bool MsCargo_DeleteRecord(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsCargo cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargo_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsCargo_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCargo_DeleteRecordAsync(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsCargo cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozo_GetRecordsByShubetsu", ReplyAction="http://tempuri.org/IService/OdChozo_GetRecordsByShubetsuResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozo> OdChozo_GetRecordsByShubetsu(NBaseData.DAC.MsUser loginUser, int shubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozo_GetRecordsByShubetsu", ReplyAction="http://tempuri.org/IService/OdChozo_GetRecordsByShubetsuResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozo>> OdChozo_GetRecordsByShubetsuAsync(NBaseData.DAC.MsUser loginUser, int shubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozo_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/OdChozo_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozo> OdChozo_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozo_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/OdChozo_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozo>> OdChozo_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecord", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordResponse")]
        NBaseData.DAC.OdChozoShousai OdChozoShousai_GetRecord(NBaseData.DAC.MsUser loginUser, string OdChozoShousaiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecord", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string OdChozoShousaiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Date", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_DateResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Date(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Date", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_DateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_DateAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Date_Shubetsu", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Date_ShubetsuResp" +
            "onse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Date_Shubetsu(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate, int syubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Date_Shubetsu", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Date_ShubetsuResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Date_ShubetsuAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate, int syubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_Shubetsu", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_ShubetsuRe" +
            "sponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Period_Shubetsu(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, int syubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_Shubetsu", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_ShubetsuRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Period_ShubetsuAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, int syubetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsLoID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsLoIDResp" +
            "onse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Period_MsLoID(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsLoID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsLoIDResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Period_MsLoIDAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsVesselIt" +
            "emID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsVesselIt" +
            "emIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Period_MsVesselItemID(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_item_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsVesselIt" +
            "emID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByVesselID_Period_MsVesselIt" +
            "emIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Period_MsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_item_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_UpdateRecord", ReplyAction="http://tempuri.org/IService/OdChozoShousai_UpdateRecordResponse")]
        bool OdChozoShousai_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdChozoShousai data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_UpdateRecord", ReplyAction="http://tempuri.org/IService/OdChozoShousai_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> OdChozoShousai_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdChozoShousai data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdChozoShousai_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdFurikaeToritate> OdFurikaeToritate_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdFurikaeToritateFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdFurikaeToritate>> OdFurikaeToritate_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdFurikaeToritateFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_GetRecord", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_GetRecordResponse")]
        NBaseData.DAC.OdFurikaeToritate OdFurikaeToritate_GetRecord(NBaseData.DAC.MsUser loginUser, string odFurikaeToritateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_GetRecord", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdFurikaeToritate> OdFurikaeToritate_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odFurikaeToritateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_Insert", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_InsertResponse")]
        bool OdFurikaeToritate_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_Insert", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdFurikaeToritate_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_Update", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_UpdateResponse")]
        bool OdFurikaeToritate_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdFurikaeToritate_Update", ReplyAction="http://tempuri.org/IService/OdFurikaeToritate_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdFurikaeToritate_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGaisanKeijo_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdGaisanKeijo_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo> OdGaisanKeijo_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGaisanKeijo_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdGaisanKeijo_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo>> OdGaisanKeijo_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGaisanKeijo_GetLatestNengetsu", ReplyAction="http://tempuri.org/IService/OdGaisanKeijo_GetLatestNengetsuResponse")]
        string OdGaisanKeijo_GetLatestNengetsu(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGaisanKeijo_GetLatestNengetsu", ReplyAction="http://tempuri.org/IService/OdGaisanKeijo_GetLatestNengetsuResponse")]
        System.Threading.Tasks.Task<string> OdGaisanKeijo_GetLatestNengetsuAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGetsujiShime_GetRecordByLastDate", ReplyAction="http://tempuri.org/IService/OdGetsujiShime_GetRecordByLastDateResponse")]
        NBaseData.DAC.OdGetsujiShime OdGetsujiShime_GetRecordByLastDate(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGetsujiShime_GetRecordByLastDate", ReplyAction="http://tempuri.org/IService/OdGetsujiShime_GetRecordByLastDateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdGetsujiShime> OdGetsujiShime_GetRecordByLastDateAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGetsujiShime_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdGetsujiShime_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdGetsujiShime> OdGetsujiShime_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdGetsujiShime_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdGetsujiShime_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdGetsujiShime>> OdGetsujiShime_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_GetRecord", ReplyAction="http://tempuri.org/IService/OdHachuMail_GetRecordResponse")]
        NBaseData.DAC.OdHachuMail OdHachuMail_GetRecord(NBaseData.DAC.MsUser loginUser, string odMkId, string tantousha, string mailAdress, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_GetRecord", ReplyAction="http://tempuri.org/IService/OdHachuMail_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdHachuMail> OdHachuMail_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odMkId, string tantousha, string mailAdress, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_GetRecords", ReplyAction="http://tempuri.org/IService/OdHachuMail_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdHachuMail> OdHachuMail_GetRecords(NBaseData.DAC.MsUser loginUser, string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_GetRecords", ReplyAction="http://tempuri.org/IService/OdHachuMail_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuMail>> OdHachuMail_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_Insert", ReplyAction="http://tempuri.org/IService/OdHachuMail_InsertResponse")]
        bool OdHachuMail_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_Insert", ReplyAction="http://tempuri.org/IService/OdHachuMail_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdHachuMail_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_Update", ReplyAction="http://tempuri.org/IService/OdHachuMail_UpdateResponse")]
        bool OdHachuMail_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuMail_Update", ReplyAction="http://tempuri.org/IService/OdHachuMail_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdHachuMail_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_Date", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_DateRes" +
            "ponse")]
        NBaseData.DAC.OdHachuTanka OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_Date(NBaseData.DAC.MsUser loginUser, string mslovesselid, string msvesselitemid, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_Date", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_DateRes" +
            "ponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_DateAsync(NBaseData.DAC.MsUser loginUser, string mslovesselid, string msvesselitemid, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_LO", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_LORespon" +
            "se")]
        System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMsVesselItemID_Date_LO(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_LO", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_LORespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMsVesselItemID_Date_LOAsync(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselIt" +
            "em", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselIt" +
            "emResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselItem(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselIt" +
            "em", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselIt" +
            "emResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselItemAsync(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMaLoID", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMaLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMaLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMaLoID", ReplyAction="http://tempuri.org/IService/OdHachuTanka_GetRecordsByMaLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMaLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_DateResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_DateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_DateAsync(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordByOdJryID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordByOdJryIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordByOdJryID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordByOdJryIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_InsertResponse")]
        bool OdJryShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdJryShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_UpdateResponse")]
        bool OdJryShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdJryShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsLoID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsLoID(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsLoID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsLoIDAsync(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsVesselItemID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsVesselItemID(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_ves_item_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsVesselItemID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_Sho" +
            "usaiID_Date_MsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_ves_item_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdJryShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecords", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecords", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecord", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordResponse")]
        NBaseData.DAC.OdThi OdThi_GetRecord(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecord", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordByOdMkID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordByOdMkIDResponse")]
        NBaseData.DAC.OdThi OdThi_GetRecordByOdMkID(NBaseData.DAC.MsUser loginUser, string odOkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordByOdMkID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordByOdMkIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odOkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordByOdJryID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordByOdJryIDResponse")]
        NBaseData.DAC.OdThi OdThi_GetRecordByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordByOdJryID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordByOdJryIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordByOdShrID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordByOdShrIDResponse")]
        NBaseData.DAC.OdThi OdThi_GetRecordByOdShrID(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordByOdShrID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordByOdShrIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordByOdShrIDAsync(NBaseData.DAC.MsUser loginUser, string odShrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_Insert", ReplyAction="http://tempuri.org/IService/OdThi_InsertResponse")]
        bool OdThi_Insert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_Insert", ReplyAction="http://tempuri.org/IService/OdThi_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdThi_InsertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_Update", ReplyAction="http://tempuri.org/IService/OdThi_UpdateResponse")]
        bool OdThi_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_Update", ReplyAction="http://tempuri.org/IService/OdThi_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdThi_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordsByVesselId", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsByVesselIdResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecordsByVesselId(NBaseData.DAC.MsUser loginUser, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordsByVesselId", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsByVesselIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsByVesselIdAsync(NBaseData.DAC.MsUser loginUser, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThi_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdThi_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemSbt_GetRecords", ReplyAction="http://tempuri.org/IService/MsItemSbt_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsItemSbt> MsItemSbt_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemSbt_GetRecords", ReplyAction="http://tempuri.org/IService/MsItemSbt_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsItemSbt>> MsItemSbt_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsTani_GetRecords", ReplyAction="http://tempuri.org/IService/MsTani_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsTani> MsTani_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsTani_GetRecords", ReplyAction="http://tempuri.org/IService/MsTani_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsTani>> MsTani_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdThiItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdThiItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiItem>> OdThiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_GetRecordByOdThiID", ReplyAction="http://tempuri.org/IService/OdThiItem_GetRecordByOdThiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItem_GetRecordByOdThiID(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_GetRecordByOdThiID", ReplyAction="http://tempuri.org/IService/OdThiItem_GetRecordByOdThiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiItem>> OdThiItem_GetRecordByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_Insert", ReplyAction="http://tempuri.org/IService/OdThiItem_InsertResponse")]
        bool OdThiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_Insert", ReplyAction="http://tempuri.org/IService/OdThiItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdThiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_Update", ReplyAction="http://tempuri.org/IService/OdThiItem_UpdateResponse")]
        bool OdThiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiItem_Update", ReplyAction="http://tempuri.org/IService/OdThiItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdThiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByOdThiID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByOdThiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordByOdThiID(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByOdThiID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByOdThiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_InsertResponse")]
        bool OdThiShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdThiShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_UpdateResponse")]
        bool OdThiShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdThiShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByThiIraiSbtID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByThiIraiSbtIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordByThiIraiSbtID(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByThiIraiSbtID", ReplyAction="http://tempuri.org/IService/OdThiShousaiItem_GetRecordByThiIraiSbtIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordByThiIraiSbtIDAsync(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselID", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordByMsVesselID(NBaseData.DAC.MsUser loginUser, int MsVesslID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselID", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "e", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "eResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "e", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "eResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNameAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "e2", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "e2Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName2(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "e2", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNam" +
            "e2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName2Async(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_Insert", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_InsertResponse")]
        bool MsVesselItemVessel_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_Insert", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsVesselItemVessel_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_Update", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_UpdateResponse")]
        bool MsVesselItemVessel_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_Update", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_UpdateResponse")]
        System.Threading.Tasks.Task<bool> MsVesselItemVessel_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_DeleteRecordResponse")]
        bool MsVesselItemVessel_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsVesselItemVessel_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordsByMsVesselItemIDResponse" +
            "")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string msvesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItemVessel_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/MsVesselItemVessel_GetRecordsByMsVesselItemIDResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string msvesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNyukyoKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsNyukyoKamoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsNyukyoKamoku> MsNyukyoKamoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNyukyoKamoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsNyukyoKamoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsNyukyoKamoku>> MsNyukyoKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShrJouken_GetRecords", ReplyAction="http://tempuri.org/IService/MsShrJouken_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShrJouken> MsShrJouken_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShrJouken_GetRecords", ReplyAction="http://tempuri.org/IService/MsShrJouken_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShrJouken>> MsShrJouken_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecords", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecords", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecords削除を含む", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecords削除を含むResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_GetRecords削除を含む(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecords削除を含む", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecords削除を含むResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_GetRecords削除を含むAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecordResponse")]
        NBaseData.DAC.MsCustomer MsCustomer_GetRecord(NBaseData.DAC.MsUser loginUser, string MsCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsCustomer> MsCustomer_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string MsCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_SearchRecords", ReplyAction="http://tempuri.org/IService/MsCustomer_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_SearchRecords(NBaseData.DAC.MsUser loginUser, string customerID, string customerName, bool isClient, bool isAgency, bool isConsignor, bool isComapny, bool isSchool, bool isAppointed, bool isInspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_SearchRecords", ReplyAction="http://tempuri.org/IService/MsCustomer_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string customerID, string customerName, bool isClient, bool isAgency, bool isConsignor, bool isComapny, bool isSchool, bool isAppointed, bool isInspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_InsertRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_InsertRecordResponse")]
        bool MsCustomer_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_InsertRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCustomer_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_UpdateRecordResponse")]
        bool MsCustomer_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCustomer_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_DeleteFlagRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_DeleteFlagRecordResponse")]
        bool MsCustomer_DeleteFlagRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_DeleteFlagRecord", ReplyAction="http://tempuri.org/IService/MsCustomer_DeleteFlagRecordResponse")]
        System.Threading.Tasks.Task<bool> MsCustomer_DeleteFlagRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecordByLoginId", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecordByLoginIdResponse")]
        NBaseData.DAC.MsCustomer MsCustomer_GetRecordByLoginId(NBaseData.DAC.MsUser loginUser, string LoginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecordByLoginId", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecordByLoginIdResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsCustomer> MsCustomer_GetRecordByLoginIdAsync(NBaseData.DAC.MsUser loginUser, string LoginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecords_代理店", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecords_代理店Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_GetRecords_代理店(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomer_GetRecords_代理店", ReplyAction="http://tempuri.org/IService/MsCustomer_GetRecords_代理店Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_GetRecords_代理店Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomerTantou_GetRecords", ReplyAction="http://tempuri.org/IService/MsCustomerTantou_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou> MsCustomerTantou_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomerTantou_GetRecords", ReplyAction="http://tempuri.org/IService/MsCustomerTantou_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou>> MsCustomerTantou_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomerTantou_GetRecordsByCustomerID", ReplyAction="http://tempuri.org/IService/MsCustomerTantou_GetRecordsByCustomerIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou> MsCustomerTantou_GetRecordsByCustomerID(NBaseData.DAC.MsUser loginUser, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCustomerTantou_GetRecordsByCustomerID", ReplyAction="http://tempuri.org/IService/MsCustomerTantou_GetRecordsByCustomerIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou>> MsCustomerTantou_GetRecordsByCustomerIDAsync(NBaseData.DAC.MsUser loginUser, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecords", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMm> OdMm_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecords", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMm>> OdMm_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMm> OdMm_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMm>> OdMm_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecord", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordResponse")]
        NBaseData.DAC.OdMm OdMm_GetRecord(NBaseData.DAC.MsUser loginUser, string odMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecord", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdMm> OdMm_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_Insert", ReplyAction="http://tempuri.org/IService/OdMm_InsertResponse")]
        bool OdMm_Insert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_Insert", ReplyAction="http://tempuri.org/IService/OdMm_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdMm_InsertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_Update", ReplyAction="http://tempuri.org/IService/OdMm_UpdateResponse")]
        bool OdMm_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_Update", ReplyAction="http://tempuri.org/IService/OdMm_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdMm_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMm> OdMm_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMm_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/OdMm_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMm>> OdMm_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMmItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMmItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmItem>> OdMmItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMmID", ReplyAction="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMmIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItem_GetRecordsByOdMmID(NBaseData.DAC.MsUser loginUser, string odMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMmID", ReplyAction="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMmIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmItem>> OdMmItem_GetRecordsByOdMmIDAsync(NBaseData.DAC.MsUser loginUser, string odMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMkID", ReplyAction="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMkIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItem_GetRecordsByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMkID", ReplyAction="http://tempuri.org/IService/OdMmItem_GetRecordsByOdMkIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmItem>> OdMmItem_GetRecordsByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMmID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMmIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordByOdMmID(NBaseData.DAC.MsUser loginUser, string odMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMmID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMmIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordByOdMmIDAsync(NBaseData.DAC.MsUser loginUser, string odMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMkID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMkIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMkID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordByOdMkIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdMmShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecords", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMk> OdMk_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecords", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMk>> OdMk_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordByOdThiID", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordByOdThiIDResponse")]
        NBaseData.DAC.OdMk OdMk_GetRecordByOdThiID(NBaseData.DAC.MsUser loginUser, string OdThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordByOdThiID", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordByOdThiIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdMk> OdMk_GetRecordByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string OdThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordsByOdMmID", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordsByOdMmIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMk> OdMk_GetRecordsByOdMmID(NBaseData.DAC.MsUser loginUser, string OdMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordsByOdMmID", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordsByOdMmIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMk>> OdMk_GetRecordsByOdMmIDAsync(NBaseData.DAC.MsUser loginUser, string OdMmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordByWebKey", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordByWebKeyResponse")]
        NBaseData.DAC.OdMk OdMk_GetRecordByWebKey(NBaseData.DAC.MsUser loginUser, string WebKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordByWebKey", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordByWebKeyResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdMk> OdMk_GetRecordByWebKeyAsync(NBaseData.DAC.MsUser loginUser, string WebKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMk> OdMk_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMk>> OdMk_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecord", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordResponse")]
        NBaseData.DAC.OdMk OdMk_GetRecord(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_GetRecord", ReplyAction="http://tempuri.org/IService/OdMk_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdMk> OdMk_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_Insert", ReplyAction="http://tempuri.org/IService/OdMk_InsertResponse")]
        bool OdMk_Insert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_Insert", ReplyAction="http://tempuri.org/IService/OdMk_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdMk_InsertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_Update", ReplyAction="http://tempuri.org/IService/OdMk_UpdateResponse")]
        bool OdMk_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMk_Update", ReplyAction="http://tempuri.org/IService/OdMk_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdMk_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMkItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMkItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkItem>> OdMkItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_GetRecordsByOdMkID", ReplyAction="http://tempuri.org/IService/OdMkItem_GetRecordsByOdMkIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItem_GetRecordsByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_GetRecordsByOdMkID", ReplyAction="http://tempuri.org/IService/OdMkItem_GetRecordsByOdMkIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkItem>> OdMkItem_GetRecordsByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_GetRecord", ReplyAction="http://tempuri.org/IService/OdMkItem_GetRecordResponse")]
        NBaseData.DAC.OdMkItem OdMkItem_GetRecord(NBaseData.DAC.MsUser loginUser, string OdMkItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_GetRecord", ReplyAction="http://tempuri.org/IService/OdMkItem_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdMkItem> OdMkItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string OdMkItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_Insert", ReplyAction="http://tempuri.org/IService/OdMkItem_InsertResponse")]
        bool OdMkItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_Insert", ReplyAction="http://tempuri.org/IService/OdMkItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdMkItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_Update", ReplyAction="http://tempuri.org/IService/OdMkItem_UpdateResponse")]
        bool OdMkItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_Update", ReplyAction="http://tempuri.org/IService/OdMkItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdMkItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_Delete", ReplyAction="http://tempuri.org/IService/OdMkItem_DeleteResponse")]
        bool OdMkItem_Delete(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkItem_Delete", ReplyAction="http://tempuri.org/IService/OdMkItem_DeleteResponse")]
        System.Threading.Tasks.Task<bool> OdMkItem_DeleteAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecordByOdMkID", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordByOdMkIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecordByOdMkID", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordByOdMkIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecord", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordResponse")]
        NBaseData.DAC.OdMkShousaiItem OdMkShousaiItem_GetRecord(NBaseData.DAC.MsUser loginUser, string OdMkShousaiItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecord", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string OdMkShousaiItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_InsertResponse")]
        bool OdMkShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> OdMkShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_UpdateResponse")]
        bool OdMkShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_Update", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> OdMkShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_Delete", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_DeleteResponse")]
        bool OdMkShousaiItem_Delete(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_Delete", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_DeleteResponse")]
        System.Threading.Tasks.Task<bool> OdMkShousaiItem_DeleteAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string msvesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string msvesselitem_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/OdMkShousaiItem_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdJryItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OdJryItem_GetRecords", ReplyAction="http://tempuri.org/IService/OdJryItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryItem>> OdJryItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書ID", ReplyAction="http://tempuri.org/IService/KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書IDResponse" +
            "")]
        bool KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書ID(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書ID", ReplyAction="http://tempuri.org/IService/KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書IDResponse" +
            "")]
        System.Threading.Tasks.Task<bool> KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書IDAsync(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoShinsaLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShoushoShinsaLink_InsertRecordResponse")]
        bool KsShoushoShinsaLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoShinsaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoShinsaLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShoushoShinsaLink_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShoushoShinsaLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoShinsaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_GetRecords", ReplyAction="http://tempuri.org/IService/MsAlarmDate_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate> MsAlarmDate_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_GetRecords", ReplyAction="http://tempuri.org/IService/MsAlarmDate_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate>> MsAlarmDate_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_GetRecord", ReplyAction="http://tempuri.org/IService/MsAlarmDate_GetRecordResponse")]
        NBaseData.DAC.MsAlarmDate MsAlarmDate_GetRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate.MsAlarmDateIDNo id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_GetRecord", ReplyAction="http://tempuri.org/IService/MsAlarmDate_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsAlarmDate> MsAlarmDate_GetRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate.MsAlarmDateIDNo id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_InsertRecord", ReplyAction="http://tempuri.org/IService/MsAlarmDate_InsertRecordResponse")]
        bool MsAlarmDate_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_InsertRecord", ReplyAction="http://tempuri.org/IService/MsAlarmDate_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsAlarmDate_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsAlarmDate_UpdateRecordResponse")]
        bool MsAlarmDate_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsAlarmDate_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsAlarmDate_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_UpdateRecords", ReplyAction="http://tempuri.org/IService/MsAlarmDate_UpdateRecordsResponse")]
        bool MsAlarmDate_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate> datas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAlarmDate_UpdateRecords", ReplyAction="http://tempuri.org/IService/MsAlarmDate_UpdateRecordsResponse")]
        System.Threading.Tasks.Task<bool> MsAlarmDate_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate> datas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecords", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecords", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordsBy港", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsBy港Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordsBy港(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordsBy港", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsBy港Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsBy港Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordLikeBashoName", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordLikeBashoNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordLikeBashoName(NBaseData.DAC.MsUser loginUser, string bashoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordLikeBashoName", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordLikeBashoNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordLikeBashoNameAsync(NBaseData.DAC.MsUser loginUser, string bashoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordsByBashoNoBashoNameBashoKubun", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsByBashoNoBashoNameBashoKubunRespons" +
            "e")]
        System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordsByBashoNoBashoNameBashoKubun(NBaseData.DAC.MsUser loginUser, string bashoNo, string bashoName, string bashoKubunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordsByBashoNoBashoNameBashoKubun", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsByBashoNoBashoNameBashoKubunRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsByBashoNoBashoNameBashoKubunAsync(NBaseData.DAC.MsUser loginUser, string bashoNo, string bashoName, string bashoKubunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBasho_InsertRecordResponse")]
        bool MsBasho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBasho_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBasho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBasho_UpdateRecordResponse")]
        bool MsBasho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBasho_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBasho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordsByBashoKubun", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsByBashoKubunResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordsByBashoKubun(NBaseData.DAC.MsUser loginUser, string bashoKubunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBasho_GetRecordsByBashoKubun", ReplyAction="http://tempuri.org/IService/MsBasho_GetRecordsByBashoKubunResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsByBashoKubunAsync(NBaseData.DAC.MsUser loginUser, string bashoKubunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecords", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBerth> MsBerth_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecords", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBerth>> MsBerth_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecordByBerthCodeBerthName", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordByBerthCodeBerthNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBerth> MsBerth_GetRecordByBerthCodeBerthName(NBaseData.DAC.MsUser loginUser, string berthCode, string berthName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecordByBerthCodeBerthName", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordByBerthCodeBerthNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBerth>> MsBerth_GetRecordByBerthCodeBerthNameAsync(NBaseData.DAC.MsUser loginUser, string berthCode, string berthName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecordByBerthCode", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordByBerthCodeResponse")]
        NBaseData.DAC.MsBerth MsBerth_GetRecordByBerthCode(NBaseData.DAC.MsUser loginUser, string berthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecordByBerthCode", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordByBerthCodeResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsBerth> MsBerth_GetRecordByBerthCodeAsync(NBaseData.DAC.MsUser loginUser, string berthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBerth_InsertRecordResponse")]
        bool MsBerth_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_InsertRecord", ReplyAction="http://tempuri.org/IService/MsBerth_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBerth_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBerth_UpdateRecordResponse")]
        bool MsBerth_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsBerth_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsBerth_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecordByMsKichiID", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordByMsKichiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBerth> MsBerth_GetRecordByMsKichiID(NBaseData.DAC.MsUser loginUser, string ms_kichi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBerth_GetRecordByMsKichiID", ReplyAction="http://tempuri.org/IService/MsBerth_GetRecordByMsKichiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBerth>> MsBerth_GetRecordByMsKichiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kichi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_GetRecords", ReplyAction="http://tempuri.org/IService/MsBumon_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBumon> MsBumon_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_GetRecords", ReplyAction="http://tempuri.org/IService/MsBumon_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBumon>> MsBumon_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_GetRecordsByBumonID", ReplyAction="http://tempuri.org/IService/MsBumon_GetRecordsByBumonIDResponse")]
        NBaseData.DAC.MsBumon MsBumon_GetRecordsByBumonID(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_GetRecordsByBumonID", ReplyAction="http://tempuri.org/IService/MsBumon_GetRecordsByBumonIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsBumon> MsBumon_GetRecordsByBumonIDAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_Insert", ReplyAction="http://tempuri.org/IService/MsBumon_InsertResponse")]
        bool MsBumon_Insert(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_Insert", ReplyAction="http://tempuri.org/IService/MsBumon_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsBumon_InsertAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_Update", ReplyAction="http://tempuri.org/IService/MsBumon_UpdateResponse")]
        bool MsBumon_Update(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBumon_Update", ReplyAction="http://tempuri.org/IService/MsBumon_UpdateResponse")]
        System.Threading.Tasks.Task<bool> MsBumon_UpdateAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsYusoItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsYusoItem> MsYusoItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsYusoItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsYusoItem>> MsYusoItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_GetRecordsByYusoItemName", ReplyAction="http://tempuri.org/IService/MsYusoItem_GetRecordsByYusoItemNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsYusoItem> MsYusoItem_GetRecordsByYusoItemName(NBaseData.DAC.MsUser loginUser, string yusoItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_GetRecordsByYusoItemName", ReplyAction="http://tempuri.org/IService/MsYusoItem_GetRecordsByYusoItemNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsYusoItem>> MsYusoItem_GetRecordsByYusoItemNameAsync(NBaseData.DAC.MsUser loginUser, string yusoItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_GetRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_GetRecordResponse")]
        NBaseData.DAC.MsYusoItem MsYusoItem_GetRecord(NBaseData.DAC.MsUser loginUser, int MsYusoItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_GetRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsYusoItem> MsYusoItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int MsYusoItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_InsertRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_InsertRecordResponse")]
        bool MsYusoItem_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_InsertRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsYusoItem_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_UpdateRecordResponse")]
        bool MsYusoItem_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsYusoItem_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_DeleteRecordResponse")]
        bool MsYusoItem_DeleteRecord(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsYusoItem_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsYusoItem_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsYusoItem_DeleteRecordAsync(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsYusoItem yusoItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsHimoku> MsHimoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecords", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsHimoku>> MsHimoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecord", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordResponse")]
        NBaseData.DAC.MsHimoku MsHimoku_GetRecord(NBaseData.DAC.MsUser loginUser, int msHimokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecord", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsHimoku> MsHimoku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int msHimokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecordsWithMsKamoku", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordsWithMsKamokuResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsHimoku> MsHimoku_GetRecordsWithMsKamoku(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecordsWithMsKamoku", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordsWithMsKamokuResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsHimoku>> MsHimoku_GetRecordsWithMsKamokuAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecordsByMsBumonID", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordsByMsBumonIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsHimoku> MsHimoku_GetRecordsByMsBumonID(NBaseData.DAC.MsUser loginUser, int bumonid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsHimoku_GetRecordsByMsBumonID", ReplyAction="http://tempuri.org/IService/MsHimoku_GetRecordsByMsBumonIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsHimoku>> MsHimoku_GetRecordsByMsBumonIDAsync(NBaseData.DAC.MsUser loginUser, int bumonid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecords", ReplyAction="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu> MsKanidouseiInfoShubetu_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecords", ReplyAction="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu>> MsKanidouseiInfoShubetu_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabled", ReplyAction="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabledResp" +
            "onse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu> MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabled", ReplyAction="http://tempuri.org/IService/MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabledResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu>> MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecords", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecords", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecordsBy証書リンクデータ", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsBy証書リンクデータResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecordsBy証書リンクデータ(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecordsBy証書リンクデータ", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsBy証書リンクデータResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsBy証書リンクデータAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecordsBy荷役リンクデータ", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsBy荷役リンクデータResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecordsBy荷役リンクデータ(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecordsBy荷役リンクデータ", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsBy荷役リンクデータResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsBy荷役リンクデータAsync(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecordsBy検査名", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsBy検査名Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecordsBy検査名(NBaseData.DAC.MsUser loginUser, string kensa_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecordsBy検査名", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordsBy検査名Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsBy検査名Async(NBaseData.DAC.MsUser loginUser, string kensa_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecord", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordResponse")]
        NBaseData.DAC.MsKensa MsKensa_GetRecord(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_GetRecord", ReplyAction="http://tempuri.org/IService/MsKensa_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsKensa> MsKensa_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKensa_InsertRecordResponse")]
        bool MsKensa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKensa_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKensa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKensa_UpdateRecordResponse")]
        bool MsKensa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensa_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKensa_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKensa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_GetRecords", ReplyAction="http://tempuri.org/IService/MsKensen_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensen> MsKensen_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_GetRecords", ReplyAction="http://tempuri.org/IService/MsKensen_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensen>> MsKensen_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_GetRecordsBy証書リンク", ReplyAction="http://tempuri.org/IService/MsKensen_GetRecordsBy証書リンクResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensen> MsKensen_GetRecordsBy証書リンク(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_GetRecordsBy証書リンク", ReplyAction="http://tempuri.org/IService/MsKensen_GetRecordsBy証書リンクResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensen>> MsKensen_GetRecordsBy証書リンクAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsKensen_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKensen> MsKensen_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsKensen_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensen>> MsKensen_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKensen_InsertRecordResponse")]
        bool MsKensen_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKensen_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKensen_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKensen_UpdateRecordResponse")]
        bool MsKensen_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKensen_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKensen_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKensen_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_GetRecordByKichiNo", ReplyAction="http://tempuri.org/IService/MsKichi_GetRecordByKichiNoResponse")]
        NBaseData.DAC.MsKichi MsKichi_GetRecordByKichiNo(NBaseData.DAC.MsUser loginUser, string kichiNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_GetRecordByKichiNo", ReplyAction="http://tempuri.org/IService/MsKichi_GetRecordByKichiNoResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsKichi> MsKichi_GetRecordByKichiNoAsync(NBaseData.DAC.MsUser loginUser, string kichiNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_GetRecordsByKichiNoKichiName", ReplyAction="http://tempuri.org/IService/MsKichi_GetRecordsByKichiNoKichiNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKichi> MsKichi_GetRecordsByKichiNoKichiName(NBaseData.DAC.MsUser loginUser, string kichiNo, string kichiName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_GetRecordsByKichiNoKichiName", ReplyAction="http://tempuri.org/IService/MsKichi_GetRecordsByKichiNoKichiNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKichi>> MsKichi_GetRecordsByKichiNoKichiNameAsync(NBaseData.DAC.MsUser loginUser, string kichiNo, string kichiName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_GetRecords", ReplyAction="http://tempuri.org/IService/MsKichi_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKichi> MsKichi_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_GetRecords", ReplyAction="http://tempuri.org/IService/MsKichi_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKichi>> MsKichi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKichi_InsertRecordResponse")]
        bool MsKichi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKichi_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKichi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKichi_UpdateRecordResponse")]
        bool MsKichi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKichi_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKichi_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKichi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKiti_GetRecords", ReplyAction="http://tempuri.org/IService/MsKiti_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKichi> MsKiti_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKiti_GetRecords", ReplyAction="http://tempuri.org/IService/MsKiti_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKichi>> MsKiti_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_GetRecords", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi> MsKyumeisetsubi_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_GetRecords", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi>> MsKyumeisetsubi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi> MsKyumeisetsubi_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi>> MsKyumeisetsubi_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_InsertRecordResponse")]
        bool MsKyumeisetsubi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_InsertRecord", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKyumeisetsubi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_UpdateRecordResponse")]
        bool MsKyumeisetsubi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKyumeisetsubi_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsKyumeisetsubi_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsKyumeisetsubi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_GetRecords", ReplyAction="http://tempuri.org/IService/MsLo_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsLo> MsLo_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_GetRecords", ReplyAction="http://tempuri.org/IService/MsLo_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLo>> MsLo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/MsLo_GetRecordsByMsLoIDResponse")]
        NBaseData.DAC.MsLo MsLo_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string msLoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/MsLo_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsLo> MsLo_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string msLoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_Insert", ReplyAction="http://tempuri.org/IService/MsLo_InsertResponse")]
        bool MsLo_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_Insert", ReplyAction="http://tempuri.org/IService/MsLo_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsLo_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_Update", ReplyAction="http://tempuri.org/IService/MsLo_UpdateResponse")]
        bool MsLo_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_Update", ReplyAction="http://tempuri.org/IService/MsLo_UpdateResponse")]
        System.Threading.Tasks.Task<bool> MsLo_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsLo_DeleteRecordResponse")]
        bool MsLo_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsLo_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsLo_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_SearchRecords", ReplyAction="http://tempuri.org/IService/MsLo_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsLo> MsLo_SearchRecords(NBaseData.DAC.MsUser loginUser, string msLoId, string loName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLo_SearchRecords", ReplyAction="http://tempuri.org/IService/MsLo_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLo>> MsLo_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string msLoId, string loName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsLoVessel> MsLoVessel_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int vesselid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLoVessel>> MsLoVessel_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int vesselid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_Insert", ReplyAction="http://tempuri.org/IService/MsLoVessel_InsertResponse")]
        bool MsLoVessel_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_Insert", ReplyAction="http://tempuri.org/IService/MsLoVessel_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsLoVessel_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsLoVessel_DeleteRecordResponse")]
        bool MsLoVessel_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsLoVessel_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsLoVessel_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselIDAndLoName", ReplyAction="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselIDAndLoNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsLoVessel> MsLoVessel_GetRecordsByMsVesselIDAndLoName(NBaseData.DAC.MsUser loginUser, int MsVesslID, string loName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselIDAndLoName", ReplyAction="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsVesselIDAndLoNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLoVessel>> MsLoVessel_GetRecordsByMsVesselIDAndLoNameAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID, string loName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsLoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsLoVessel> MsLoVessel_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsLoID", ReplyAction="http://tempuri.org/IService/MsLoVessel_GetRecordsByMsLoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLoVessel>> MsLoVessel_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_GetRecords", ReplyAction="http://tempuri.org/IService/MsNiyaku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsNiyaku> MsNiyaku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_GetRecords", ReplyAction="http://tempuri.org/IService/MsNiyaku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsNiyaku>> MsNiyaku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsNiyaku_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsNiyaku> MsNiyaku_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsNiyaku_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsNiyaku>> MsNiyaku_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_InsertRecord", ReplyAction="http://tempuri.org/IService/MsNiyaku_InsertRecordResponse")]
        bool MsNiyaku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_InsertRecord", ReplyAction="http://tempuri.org/IService/MsNiyaku_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsNiyaku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsNiyaku_UpdateRecordResponse")]
        bool MsNiyaku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsNiyaku_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsNiyaku_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsNiyaku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRole_GetRecords", ReplyAction="http://tempuri.org/IService/MsRole_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsRole> MsRole_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRole_GetRecords", ReplyAction="http://tempuri.org/IService/MsRole_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRole>> MsRole_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRole_SearchRecords", ReplyAction="http://tempuri.org/IService/MsRole_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsRole> MsRole_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRole_SearchRecords", ReplyAction="http://tempuri.org/IService/MsRole_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRole>> MsRole_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRole_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsRole_InsertOrUpdateResponse")]
        bool MsRole_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsRole> roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRole_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsRole_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsRole_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsRole> roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_GetRecords", ReplyAction="http://tempuri.org/IService/MsShinsa_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShinsa> MsShinsa_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_GetRecords", ReplyAction="http://tempuri.org/IService/MsShinsa_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShinsa>> MsShinsa_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_GetRecordsBy証書リンク", ReplyAction="http://tempuri.org/IService/MsShinsa_GetRecordsBy証書リンクResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShinsa> MsShinsa_GetRecordsBy証書リンク(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_GetRecordsBy証書リンク", ReplyAction="http://tempuri.org/IService/MsShinsa_GetRecordsBy証書リンクResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShinsa>> MsShinsa_GetRecordsBy証書リンクAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsShinsa_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShinsa> MsShinsa_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsShinsa_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShinsa>> MsShinsa_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_InsertRecord", ReplyAction="http://tempuri.org/IService/MsShinsa_InsertRecordResponse")]
        bool MsShinsa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_InsertRecord", ReplyAction="http://tempuri.org/IService/MsShinsa_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsShinsa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsShinsa_UpdateRecordResponse")]
        bool MsShinsa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShinsa_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsShinsa_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsShinsa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecordsByMsShinsaID", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordsByMsShinsaIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordsByMsShinsaID(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecordsByMsShinsaID", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordsByMsShinsaIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShinsa>> KsShinsa_GetRecordsByMsShinsaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_GetRecords", ReplyAction="http://tempuri.org/IService/MsShousho_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShousho> MsShousho_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_GetRecords", ReplyAction="http://tempuri.org/IService/MsShousho_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShousho>> MsShousho_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsShousho_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShousho> MsShousho_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsShousho_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShousho>> MsShousho_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_InsertRecord", ReplyAction="http://tempuri.org/IService/MsShousho_InsertRecordResponse")]
        bool MsShousho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_InsertRecord", ReplyAction="http://tempuri.org/IService/MsShousho_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsShousho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsShousho_UpdateRecordResponse")]
        bool MsShousho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShousho_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsShousho_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsShousho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShoushuriItem_GetRecordByMsVesselID", ReplyAction="http://tempuri.org/IService/MsShoushuriItem_GetRecordByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsShoushuriItem> MsShoushuriItem_GetRecordByMsVesselID(NBaseData.DAC.MsUser loginUser, int MsVesslID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShoushuriItem_GetRecordByMsVesselID", ReplyAction="http://tempuri.org/IService/MsShoushuriItem_GetRecordByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShoushuriItem>> MsShoushuriItem_GetRecordByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShoushuriItem_Insert", ReplyAction="http://tempuri.org/IService/MsShoushuriItem_InsertResponse")]
        bool MsShoushuriItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShoushuriItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsShoushuriItem_Insert", ReplyAction="http://tempuri.org/IService/MsShoushuriItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsShoushuriItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShoushuriItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiGetsujiShimeBi_ToFrom_船員_月次締日", ReplyAction="http://tempuri.org/IService/SiGetsujiShimeBi_ToFrom_船員_月次締日Response")]
        System.DateTime SiGetsujiShimeBi_ToFrom_船員_月次締日(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiGetsujiShimeBi_ToFrom_船員_月次締日", ReplyAction="http://tempuri.org/IService/SiGetsujiShimeBi_ToFrom_船員_月次締日Response")]
        System.Threading.Tasks.Task<System.DateTime> SiGetsujiShimeBi_ToFrom_船員_月次締日Async(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShokumei_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShokumei_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiShokumei> MsSiShokumei_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShokumei_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShokumei_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShokumei>> MsSiShokumei_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSsShousaiItem_GetRecordByMsVesselID", ReplyAction="http://tempuri.org/IService/MsSsShousaiItem_GetRecordByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSsShousaiItem> MsSsShousaiItem_GetRecordByMsVesselID(NBaseData.DAC.MsUser loginUser, int MsVesslID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSsShousaiItem_GetRecordByMsVesselID", ReplyAction="http://tempuri.org/IService/MsSsShousaiItem_GetRecordByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSsShousaiItem>> MsSsShousaiItem_GetRecordByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSsShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/MsSsShousaiItem_InsertResponse")]
        bool MsSsShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSsShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSsShousaiItem_Insert", ReplyAction="http://tempuri.org/IService/MsSsShousaiItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsSsShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSsShousaiItem info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecords", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecords", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn事務所", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn事務所Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_GetRecordsByUserKbn事務所(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn事務所", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn事務所Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_GetRecordsByUserKbn事務所Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn船員", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn船員Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_GetRecordsByUserKbn船員(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn船員", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByUserKbn船員Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_GetRecordsByUserKbn船員Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByUserID", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByUserIDResponse")]
        NBaseData.DAC.MsUser MsUser_GetRecordsByUserID(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByUserID", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByUserIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsUser_GetRecordsByUserIDAsync(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByLoginIDPassword", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByLoginIDPasswordResponse")]
        NBaseData.DAC.MsUser MsUser_GetRecordsByLoginIDPassword(string loginID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByLoginIDPassword", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByLoginIDPasswordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsUser_GetRecordsByLoginIDPasswordAsync(string loginID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByLoginID", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByLoginIDResponse")]
        NBaseData.DAC.MsUser MsUser_GetRecordsByLoginID(NBaseData.DAC.MsUser loginUser, string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_GetRecordsByLoginID", ReplyAction="http://tempuri.org/IService/MsUser_GetRecordsByLoginIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsUser_GetRecordsByLoginIDAsync(NBaseData.DAC.MsUser loginUser, string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_SearchRecords", ReplyAction="http://tempuri.org/IService/MsUser_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_SearchRecords(NBaseData.DAC.MsUser loginUser, string loginID, int kbnID, int adminFlag, string bumonID, string sei, string mei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_SearchRecords", ReplyAction="http://tempuri.org/IService/MsUser_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string loginID, int kbnID, int adminFlag, string bumonID, string sei, string mei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_SearchRecords2", ReplyAction="http://tempuri.org/IService/MsUser_SearchRecords2Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_SearchRecords2(NBaseData.DAC.MsUser loginUser, string seiKana, string meiKana);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUser_SearchRecords2", ReplyAction="http://tempuri.org/IService/MsUser_SearchRecords2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_SearchRecords2Async(NBaseData.DAC.MsUser loginUser, string seiKana, string meiKana);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserID", ReplyAction="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserIDResponse")]
        NBaseData.DAC.MsUserBumon MsUserBumon_GetRecordsByUserID(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserID", ReplyAction="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsUserBumon> MsUserBumon_GetRecordsByUserIDAsync(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_InsertRecord", ReplyAction="http://tempuri.org/IService/MsUserBumon_InsertRecordResponse")]
        bool MsUserBumon_InsertRecord(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_InsertRecord", ReplyAction="http://tempuri.org/IService/MsUserBumon_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsUserBumon_InsertRecordAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsUserBumon_UpdateRecordResponse")]
        bool MsUserBumon_UpdateRecord(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsUserBumon_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsUserBumon_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsUserBumon_DeleteRecordResponse")]
        bool MsUserBumon_DeleteRecord(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsUserBumon_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsUserBumon_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, string msUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserIDList", ReplyAction="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserIDListResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsUserBumon> MsUserBumon_GetRecordsByUserIDList(NBaseData.DAC.MsUser loginUser, string MsUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserIDList", ReplyAction="http://tempuri.org/IService/MsUserBumon_GetRecordsByUserIDListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUserBumon>> MsUserBumon_GetRecordsByUserIDListAsync(NBaseData.DAC.MsUser loginUser, string MsUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserPassHis_GetRecords", ReplyAction="http://tempuri.org/IService/MsUserPassHis_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsUserPassHis> MsUserPassHis_GetRecords(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsUserPassHis_GetRecords", ReplyAction="http://tempuri.org/IService/MsUserPassHis_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUserPassHis>> MsUserPassHis_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecords", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecords", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByHachuEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByHachuEnabledResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByHachuEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByHachuEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByHachuEnabledResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByHachuEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByYojitsuEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByYojitsuEnabledResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByYojitsuEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByYojitsuEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByYojitsuEnabledResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByYojitsuEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByMsVesselIDResponse")]
        NBaseData.DAC.MsVessel MsVessel_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int msVesselID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int msVesselID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_Insert", ReplyAction="http://tempuri.org/IService/MsVessel_InsertResponse")]
        bool MsVessel_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_Insert", ReplyAction="http://tempuri.org/IService/MsVessel_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsVessel_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_Update", ReplyAction="http://tempuri.org/IService/MsVessel_UpdateResponse")]
        bool MsVessel_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_Update", ReplyAction="http://tempuri.org/IService/MsVessel_UpdateResponse")]
        System.Threading.Tasks.Task<bool> MsVessel_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_DeleteFlagRecord", ReplyAction="http://tempuri.org/IService/MsVessel_DeleteFlagRecordResponse")]
        bool MsVessel_DeleteFlagRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_DeleteFlagRecord", ReplyAction="http://tempuri.org/IService/MsVessel_DeleteFlagRecordResponse")]
        System.Threading.Tasks.Task<bool> MsVessel_DeleteFlagRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByVesselNo", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByVesselNoResponse")]
        NBaseData.DAC.MsVessel MsVessel_GetRecordsByVesselNo(NBaseData.DAC.MsUser loginUser, string vesselNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByVesselNo", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByVesselNoResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByVesselNoAsync(NBaseData.DAC.MsUser loginUser, string vesselNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_SearchRecords", ReplyAction="http://tempuri.org/IService/MsVessel_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_SearchRecords(NBaseData.DAC.MsUser loginUser, string vesselNo, string vesselName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_SearchRecords", ReplyAction="http://tempuri.org/IService/MsVessel_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string vesselNo, string vesselName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByKanidouseiEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByKanidouseiEnabledResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByKanidouseiEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByKanidouseiEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByKanidouseiEnabledResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByKanidouseiEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByDocumentEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByDocumentEnabledResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByDocumentEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByDocumentEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByDocumentEnabledResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByDocumentEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsBySeninEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsBySeninEnabledResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsBySeninEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsBySeninEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsBySeninEnabledResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsBySeninEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByKensaEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByKensaEnabledResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByKensaEnabled(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVessel_GetRecordsByKensaEnabled", ReplyAction="http://tempuri.org/IService/MsVessel_GetRecordsByKensaEnabledResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByKensaEnabledAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiStatus_GetRecords", ReplyAction="http://tempuri.org/IService/MsThiIraiStatus_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsThiIraiStatus> MsThiIraiStatus_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiStatus_GetRecords", ReplyAction="http://tempuri.org/IService/MsThiIraiStatus_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsThiIraiStatus>> MsThiIraiStatus_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiStatus_GetRecord", ReplyAction="http://tempuri.org/IService/MsThiIraiStatus_GetRecordResponse")]
        NBaseData.DAC.MsThiIraiStatus MsThiIraiStatus_GetRecord(NBaseData.DAC.MsUser loginUser, string MsThiIraiStatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiStatus_GetRecord", ReplyAction="http://tempuri.org/IService/MsThiIraiStatus_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsThiIraiStatus> MsThiIraiStatus_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string MsThiIraiStatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiSbt_GetRecords", ReplyAction="http://tempuri.org/IService/MsThiIraiSbt_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsThiIraiSbt> MsThiIraiSbt_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiSbt_GetRecords", ReplyAction="http://tempuri.org/IService/MsThiIraiSbt_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsThiIraiSbt>> MsThiIraiSbt_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiShousai_GetRecords", ReplyAction="http://tempuri.org/IService/MsThiIraiShousai_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsThiIraiShousai> MsThiIraiShousai_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsThiIraiShousai_GetRecords", ReplyAction="http://tempuri.org/IService/MsThiIraiShousai_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsThiIraiShousai>> MsThiIraiShousai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselItem> MsVesselItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItem>> MsVesselItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/MsVesselItem_GetRecordsByMsVesselItemIDResponse")]
        NBaseData.DAC.MsVesselItem MsVesselItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string MsVesselItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_GetRecordsByMsVesselItemID", ReplyAction="http://tempuri.org/IService/MsVesselItem_GetRecordsByMsVesselItemIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVesselItem> MsVesselItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string MsVesselItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_Insert", ReplyAction="http://tempuri.org/IService/MsVesselItem_InsertResponse")]
        bool MsVesselItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_Insert", ReplyAction="http://tempuri.org/IService/MsVesselItem_InsertResponse")]
        System.Threading.Tasks.Task<bool> MsVesselItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_Update", ReplyAction="http://tempuri.org/IService/MsVesselItem_UpdateResponse")]
        bool MsVesselItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_Update", ReplyAction="http://tempuri.org/IService/MsVesselItem_UpdateResponse")]
        System.Threading.Tasks.Task<bool> MsVesselItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsVesselItem_DeleteRecordResponse")]
        bool MsVesselItem_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselItem_DeleteRecord", ReplyAction="http://tempuri.org/IService/MsVesselItem_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> MsVesselItem_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninAddress_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/MsSeninAddress_GetRecordsByMsSeninIDResponse")]
        NBaseData.DAC.MsSeninAddress MsSeninAddress_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninAddress_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/MsSeninAddress_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSeninAddress> MsSeninAddress_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninCompany_GetRecords", ReplyAction="http://tempuri.org/IService/MsSeninCompany_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSeninCompany> MsSeninCompany_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninCompany_GetRecords", ReplyAction="http://tempuri.org/IService/MsSeninCompany_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSeninCompany>> MsSeninCompany_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAdvancedSearchCondition_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiAdvancedSearchCondition_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiAdvancedSearchCondition> MsSiAdvancedSearchCondition_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAdvancedSearchCondition_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiAdvancedSearchCondition_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiAdvancedSearchCondition>> MsSiAdvancedSearchCondition_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiSalary_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiSalary_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiSalary> MsSiSalary_SearchRecords(NBaseData.DAC.MsUser loginUser, bool kind0, bool kind1, bool kind2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiSalary_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiSalary_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiSalary>> MsSiSalary_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, bool kind0, bool kind1, bool kind2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAllowance_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiAllowance_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance> MsSiAllowance_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAllowance_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiAllowance_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance>> MsSiAllowance_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAllowance_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiAllowance_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance> MsSiAllowance_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAllowance_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiAllowance_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance>> MsSiAllowance_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAllowance_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiAllowance_InsertOrUpdateResponse")]
        bool MsSiAllowance_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiAllowance m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiAllowance_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiAllowance_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiAllowance_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiAllowance m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindID", ReplyAction="http://tempuri.org/IService/MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindIDRes" +
            "ponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiExcludeMenjouKind> MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindID(NBaseData.DAC.MsUser loginUser, int msSiMenjouKindId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindID", ReplyAction="http://tempuri.org/IService/MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiExcludeMenjouKind>> MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindIDAsync(NBaseData.DAC.MsUser loginUser, int msSiMenjouKindId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsItemKind_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsItemKind> MsItemKind_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsItemKind_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsItemKind>> MsItemKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsItemKind_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsItemKind> MsItemKind_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsItemKind_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsItemKind>> MsItemKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsItemKind_InsertOrUpdateResponse")]
        bool MsItemKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsItemKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsItemKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsItemKind_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsItemKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsItemKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiOptions_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiOptions_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiOptions> MsSiOptions_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiOptions_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiOptions_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiOptions>> MsSiOptions_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiPresentationItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiPresentationItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiPresentationItem> MsSiPresentationItem_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiPresentationItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiPresentationItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiPresentationItem>> MsSiPresentationItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsListItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsListItem_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsListItem> MsListItem_GetRecords(NBaseData.DAC.MsUser loginUser, int kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsListItem_GetRecords", ReplyAction="http://tempuri.org/IService/MsListItem_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsListItem>> MsListItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, int kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShokumeiShousai_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShokumeiShousai_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiShokumeiShousai> MsSiShokumeiShousai_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShokumeiShousai_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShokumeiShousai_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShokumeiShousai>> MsSiShokumeiShousai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShubetsuShousai_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShubetsuShousai_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsuShousai> MsSiShubetsuShousai_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiShubetsuShousai_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiShubetsuShousai_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsuShousai>> MsSiShubetsuShousai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselCategory_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselCategory> MsVesselCategory_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselCategory_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselCategory>> MsVesselCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselCategory_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselCategory_GetRecordResponse")]
        NBaseData.DAC.MsVesselCategory MsVesselCategory_GetRecord(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselCategory_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselCategory_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVesselCategory> MsVesselCategory_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselSection_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselSection_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselSection> MsVesselSection_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselSection_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselSection_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselSection>> MsVesselSection_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselSection_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselSection_GetRecordResponse")]
        NBaseData.DAC.MsVesselSection MsVesselSection_GetRecord(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselSection_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselSection_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVesselSection> MsVesselSection_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselKind_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselKind> MsVesselKind_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselKind_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselKind>> MsVesselKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselKind_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselKind_GetRecordResponse")]
        NBaseData.DAC.MsVesselKind MsVesselKind_GetRecord(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselKind_GetRecord", ReplyAction="http://tempuri.org/IService/MsVesselKind_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsVesselKind> MsVesselKind_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> MsVesselScheduleKindDetailEnable_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_GetRecords", ReplyAction="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable>> MsVesselScheduleKindDetailEnable_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_InsertOrUpdateRespon" +
            "se")]
        bool MsVesselScheduleKindDetailEnable_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselScheduleKindDetailEnable m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsVesselScheduleKindDetailEnable_InsertOrUpdateRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> MsVesselScheduleKindDetailEnable_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselScheduleKindDetailEnable m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCode_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqCode_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqCode> MsViqCode_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCode_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqCode_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCode>> MsViqCode_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCode_SearchRecords", ReplyAction="http://tempuri.org/IService/MsViqCode_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqCode> MsViqCode_SearchRecords(NBaseData.DAC.MsUser loginUser, int nameId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCode_SearchRecords", ReplyAction="http://tempuri.org/IService/MsViqCode_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCode>> MsViqCode_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int nameId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCode_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqCode_InsertOrUpdateResponse")]
        bool MsViqCode_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCode m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCode_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqCode_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsViqCode_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCode m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCodeName_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqCodeName_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName> MsViqCodeName_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCodeName_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqCodeName_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName>> MsViqCodeName_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCodeName_SearchRecords", ReplyAction="http://tempuri.org/IService/MsViqCodeName_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName> MsViqCodeName_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCodeName_SearchRecords", ReplyAction="http://tempuri.org/IService/MsViqCodeName_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName>> MsViqCodeName_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCodeName_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqCodeName_InsertOrUpdateResponse")]
        bool MsViqCodeName_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCodeName m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqCodeName_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqCodeName_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsViqCodeName_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCodeName m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqVersion_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqVersion_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqVersion> MsViqVersion_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqVersion_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqVersion_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqVersion>> MsViqVersion_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqVersion_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqVersion_InsertOrUpdateResponse")]
        bool MsViqVersion_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqVersion m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqVersion_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqVersion_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsViqVersion_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqVersion m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqNo_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqNo_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqNo> MsViqNo_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqNo_GetRecords", ReplyAction="http://tempuri.org/IService/MsViqNo_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqNo>> MsViqNo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqNo_SearchRecords", ReplyAction="http://tempuri.org/IService/MsViqNo_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsViqNo> MsViqNo_SearchRecords(NBaseData.DAC.MsUser loginUser, int codeId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqNo_SearchRecords", ReplyAction="http://tempuri.org/IService/MsViqNo_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqNo>> MsViqNo_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int codeId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqNo_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqNo_InsertOrUpdateResponse")]
        bool MsViqNo_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqNo m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsViqNo_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsViqNo_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsViqNo_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqNo m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/NbaseContractFunction_GetRecords", ReplyAction="http://tempuri.org/IService/NbaseContractFunction_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.NbaseContractFunction> NbaseContractFunction_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/NbaseContractFunction_GetRecords", ReplyAction="http://tempuri.org/IService/NbaseContractFunction_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.NbaseContractFunction>> NbaseContractFunction_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowance_GetRecord", ReplyAction="http://tempuri.org/IService/SiAllowance_GetRecordResponse")]
        NBaseData.DAC.SiAllowance SiAllowance_GetRecord(NBaseData.DAC.MsUser loginUser, string siAllowanceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowance_GetRecord", ReplyAction="http://tempuri.org/IService/SiAllowance_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiAllowance> SiAllowance_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siAllowanceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowance_SearchRecords", ReplyAction="http://tempuri.org/IService/SiAllowance_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiAllowance> SiAllowance_SearchRecords(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowance_SearchRecords", ReplyAction="http://tempuri.org/IService/SiAllowance_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiAllowance>> SiAllowance_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowance_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiAllowance_InsertOrUpdateResponse")]
        bool SiAllowance_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, string id, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowance_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiAllowance_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> SiAllowance_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, string id, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowanceDetail_GetRecords", ReplyAction="http://tempuri.org/IService/SiAllowanceDetail_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> SiAllowanceDetail_GetRecords(NBaseData.DAC.MsUser loginUser, string allowanceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiAllowanceDetail_GetRecords", ReplyAction="http://tempuri.org/IService/SiAllowanceDetail_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail>> SiAllowanceDetail_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string allowanceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCardPlanHead_GetRecordsByYearMonth", ReplyAction="http://tempuri.org/IService/SiCardPlanHead_GetRecordsByYearMonthResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead> SiCardPlanHead_GetRecordsByYearMonth(NBaseData.DAC.MsUser loginUser, System.DateTime dt, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCardPlanHead_GetRecordsByYearMonth", ReplyAction="http://tempuri.org/IService/SiCardPlanHead_GetRecordsByYearMonthResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>> SiCardPlanHead_GetRecordsByYearMonthAsync(NBaseData.DAC.MsUser loginUser, System.DateTime dt, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCardPlan_GetRecords", ReplyAction="http://tempuri.org/IService/SiCardPlan_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCardPlan> SiCardPlan_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCardPlan_GetRecords", ReplyAction="http://tempuri.org/IService/SiCardPlan_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlan>> SiCardPlan_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCardPlan_DeleteRecord", ReplyAction="http://tempuri.org/IService/SiCardPlan_DeleteRecordResponse")]
        bool SiCardPlan_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiCardPlan_DeleteRecord", ReplyAction="http://tempuri.org/IService/SiCardPlan_DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> SiCardPlan_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKenshinPmhKa_GetRecordByMsSeninID", ReplyAction="http://tempuri.org/IService/SiKenshinPmhKa_GetRecordByMsSeninIDResponse")]
        NBaseData.DAC.SiKenshinPmhKa SiKenshinPmhKa_GetRecordByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKenshinPmhKa_GetRecordByMsSeninID", ReplyAction="http://tempuri.org/IService/SiKenshinPmhKa_GetRecordByMsSeninIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiKenshinPmhKa> SiKenshinPmhKa_GetRecordByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuyoTeate_SearchRecords", ReplyAction="http://tempuri.org/IService/SiKyuyoTeate_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKyuyoTeate> SiKyuyoTeate_SearchRecords(NBaseData.DAC.MsUser loginUser, int vesselId, string ym);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuyoTeate_SearchRecords", ReplyAction="http://tempuri.org/IService/SiKyuyoTeate_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKyuyoTeate>> SiKyuyoTeate_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int vesselId, string ym);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuyoTeate_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKyuyoTeate_InsertOrUpdateResponse")]
        NBaseData.DAC.SiKyuyoTeate SiKyuyoTeate_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKyuyoTeate k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKyuyoTeate_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiKyuyoTeate_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiKyuyoTeate> SiKyuyoTeate_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKyuyoTeate k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeate_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeate_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeate> MsSiKyuyoTeate_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeate_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeate_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeate>> MsSiKyuyoTeate_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeateSet_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeateSet_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet> MsSiKyuyoTeateSet_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeateSet_GetRecords", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeateSet_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet>> MsSiKyuyoTeateSet_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeateSet_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeateSet_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet> MsSiKyuyoTeateSet_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiKyuyoTeateId, int msSiShokumeiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeateSet_SearchRecords", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeateSet_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet>> MsSiKyuyoTeateSet_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiKyuyoTeateId, int msSiShokumeiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeateSet_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeateSet_InsertOrUpdateResponse")]
        bool MsSiKyuyoTeateSet_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKyuyoTeateSet m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSiKyuyoTeateSet_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSiKyuyoTeateSet_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSiKyuyoTeateSet_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKyuyoTeateSet m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsTax_GetRecords", ReplyAction="http://tempuri.org/IService/MsTax_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsTax> MsTax_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsTax_GetRecords", ReplyAction="http://tempuri.org/IService/MsTax_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsTax>> MsTax_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCrewMatrixType_GetRecords", ReplyAction="http://tempuri.org/IService/MsCrewMatrixType_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCrewMatrixType> MsCrewMatrixType_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCrewMatrixType_GetRecords", ReplyAction="http://tempuri.org/IService/MsCrewMatrixType_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCrewMatrixType>> MsCrewMatrixType_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtJimushokoushinInfo_GetRecordsByCondition", ReplyAction="http://tempuri.org/IService/PtJimushokoushinInfo_GetRecordsByConditionResponse")]
        System.Collections.Generic.List<NBaseData.DAC.PtJimushokoushinInfo> PtJimushokoushinInfo_GetRecordsByCondition(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtJimushokoushinInfoCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PtJimushokoushinInfo_GetRecordsByCondition", ReplyAction="http://tempuri.org/IService/PtJimushokoushinInfo_GetRecordsByConditionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtJimushokoushinInfo>> PtJimushokoushinInfo_GetRecordsByConditionAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtJimushokoushinInfoCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBoardingExperience_GetRecords", ReplyAction="http://tempuri.org/IService/MsBoardingExperience_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience> MsBoardingExperience_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBoardingExperience_GetRecords", ReplyAction="http://tempuri.org/IService/MsBoardingExperience_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience>> MsBoardingExperience_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBoardingExperience_SearchRecords", ReplyAction="http://tempuri.org/IService/MsBoardingExperience_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience> MsBoardingExperience_SearchRecords(NBaseData.DAC.MsUser loginUser, int kubun, int vesselId, int shokumeiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBoardingExperience_SearchRecords", ReplyAction="http://tempuri.org/IService/MsBoardingExperience_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience>> MsBoardingExperience_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int kubun, int vesselId, int shokumeiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBoardingExperience_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsBoardingExperience_InsertOrUpdateResponse")]
        bool MsBoardingExperience_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBoardingExperience s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsBoardingExperience_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsBoardingExperience_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsBoardingExperience_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBoardingExperience s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiLaborManagementRecordBook_GetRecord", ReplyAction="http://tempuri.org/IService/SiLaborManagementRecordBook_GetRecordResponse")]
        NBaseData.DAC.SiLaborManagementRecordBook SiLaborManagementRecordBook_GetRecord(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiLaborManagementRecordBook_GetRecord", ReplyAction="http://tempuri.org/IService/SiLaborManagementRecordBook_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiLaborManagementRecordBook> SiLaborManagementRecordBook_GetRecordAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiNightSetting_GetRecords", ReplyAction="http://tempuri.org/IService/SiNightSetting_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiNightSetting> SiNightSetting_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiNightSetting_GetRecords", ReplyAction="http://tempuri.org/IService/SiNightSetting_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiNightSetting>> SiNightSetting_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_GetRecords", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> SiPersonalSchedule_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_GetRecords", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule>> SiPersonalSchedule_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> SiPersonalSchedule_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule>> SiPersonalSchedule_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_SearchRecords", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> SiPersonalSchedule_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_SearchRecords", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule>> SiPersonalSchedule_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_InsertOrUpdateResponse")]
        bool SiPersonalSchedule_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiPersonalSchedule s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiPersonalSchedule_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiPersonalSchedule_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> SiPersonalSchedule_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiPersonalSchedule s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_GetRecords", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> SiFellowPassengers_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_GetRecords", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers>> SiFellowPassengers_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> SiFellowPassengers_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers>> SiFellowPassengers_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_SearchRecords", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> SiFellowPassengers_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_SearchRecords", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers>> SiFellowPassengers_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_InsertOrUpdateResponse")]
        bool SiFellowPassengers_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiFellowPassengers s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiFellowPassengers_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/SiFellowPassengers_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> SiFellowPassengers_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiFellowPassengers s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiRequiredNumberOfDays_GetRecords", ReplyAction="http://tempuri.org/IService/SiRequiredNumberOfDays_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays> SiRequiredNumberOfDays_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiRequiredNumberOfDays_GetRecords", ReplyAction="http://tempuri.org/IService/SiRequiredNumberOfDays_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays>> SiRequiredNumberOfDays_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSalary_SearchRecords", ReplyAction="http://tempuri.org/IService/SiSalary_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiSalary> SiSalary_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSeninId, System.DateTime start, System.DateTime end, bool kind0, bool kind1, bool kind2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiSalary_SearchRecords", ReplyAction="http://tempuri.org/IService/SiSalary_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSalary>> SiSalary_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, System.DateTime start, System.DateTime end, bool kind0, bool kind1, bool kind2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiRemarks_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiRemarks_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiRemarks> SiRemarks_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiRemarks_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiRemarks_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiRemarks>> SiRemarks_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiShobatsu_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiShobatsu_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiShobatsu> SiShobatsu_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiShobatsu_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiShobatsu_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiShobatsu>> SiShobatsu_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiShobyo_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiShobyo_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiShobyo> SiShobyo_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiShobyo_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiShobyo_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiShobyo>> SiShobyo_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKenshin_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiKenshin_GetRecordsByMsSeninIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiKenshin> SiKenshin_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SiKenshin_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/SiKenshin_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKenshin>> SiKenshin_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnParameter_GetRecord", ReplyAction="http://tempuri.org/IService/SnParameter_GetRecordResponse")]
        NBaseData.DAC.SnParameter SnParameter_GetRecord(NBaseData.DAC.MsUser loginUserd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SnParameter_GetRecord", ReplyAction="http://tempuri.org/IService/SnParameter_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SnParameter> SnParameter_GetRecordAsync(NBaseData.DAC.MsUser loginUserd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecords", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecords", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecord", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordResponse")]
        NBaseData.DAC.KsKensa KsKensa_GetRecord(NBaseData.DAC.MsUser loginUser, string kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecord", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.KsKensa> KsKensa_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsBy船IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsBy船IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecordsBy船ID予定データ", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsBy船ID予定データResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecordsBy船ID予定データ(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecordsBy船ID予定データ", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsBy船ID予定データResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsBy船ID予定データAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_InsertRecord", ReplyAction="http://tempuri.org/IService/KsKensa_InsertRecordResponse")]
        bool KsKensa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_InsertRecord", ReplyAction="http://tempuri.org/IService/KsKensa_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsKensa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsKensa_UpdateRecordResponse")]
        bool KsKensa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsKensa_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsKensa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecordsByMsKensaID", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsByMsKensaIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecordsByMsKensaID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensa_GetRecordsByMsKensaID", ReplyAction="http://tempuri.org/IService/KsKensa_GetRecordsByMsKensaIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsByMsKensaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecordBy船ID", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordBy船IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensen> KsKensen_GetRecordBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecordBy船ID", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordBy船IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensen>> KsKensen_GetRecordBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecordBy船ID予定データ", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordBy船ID予定データResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensen> KsKensen_GetRecordBy船ID予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecordBy船ID予定データ", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordBy船ID予定データResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensen>> KsKensen_GetRecordBy船ID予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecord", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordResponse")]
        NBaseData.DAC.KsKensen KsKensen_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_kensen_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecord", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.KsKensen> KsKensen_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_kensen_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_InsertRecord", ReplyAction="http://tempuri.org/IService/KsKensen_InsertRecordResponse")]
        bool KsKensen_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_InsertRecord", ReplyAction="http://tempuri.org/IService/KsKensen_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsKensen_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsKensen_UpdateRecordResponse")]
        bool KsKensen_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsKensen_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsKensen_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecordsByMsKensenID", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordsByMsKensenIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKensen> KsKensen_GetRecordsByMsKensenID(NBaseData.DAC.MsUser loginUser, string ms_kensen_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKensen_GetRecordsByMsKensenID", ReplyAction="http://tempuri.org/IService/KsKensen_GetRecordsByMsKensenIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensen>> KsKensen_GetRecordsByMsKensenIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensen_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船ID_救命設備ID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船ID_救命設備IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordsBy船ID_救命設備ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船ID_救命設備ID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsBy船ID_救命設備IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordsBy船ID_救命設備IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データ", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordBy船ID予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データ", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordBy船ID予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備ID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備ID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecord", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordResponse")]
        NBaseData.DAC.KsKyumeisetsubi KsKyumeisetsubi_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_kyumeisetsubi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecord", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_kyumeisetsubi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_InsertRecord", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_InsertRecordResponse")]
        bool KsKyumeisetsubi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_InsertRecord", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsKyumeisetsubi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_UpdateRecordResponse")]
        bool KsKyumeisetsubi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsKyumeisetsubi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiIDResponse" +
            "")]
        System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiID(NBaseData.DAC.MsUser loginUser, string ms_kyu_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiID", ReplyAction="http://tempuri.org/IService/KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiIDResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kyu_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_荷役ID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_荷役IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID_荷役ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_荷役ID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_荷役IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船ID_荷役IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データ", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID_予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データ", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船ID_予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データ_荷役ID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データ_荷役IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID_予定データ_荷役ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データ_荷役ID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsBy船ID_予定データ_荷役IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船ID_予定データ_荷役IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsFor船_指定検査_予定", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsFor船_指定検査_予定Response")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsFor船_指定検査_予定(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsFor船_指定検査_予定", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsFor船_指定検査_予定Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsFor船_指定検査_予定Async(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecord", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordResponse")]
        NBaseData.DAC.KsNiyaku KsNiyaku_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecord", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_InsertRecord", ReplyAction="http://tempuri.org/IService/KsNiyaku_InsertRecordResponse")]
        bool KsNiyaku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_InsertRecord", ReplyAction="http://tempuri.org/IService/KsNiyaku_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsNiyaku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsNiyaku_UpdateRecordResponse")]
        bool KsNiyaku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsNiyaku_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsNiyaku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsByMsNiyakuID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsByMsNiyakuIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsByMsNiyakuID(NBaseData.DAC.MsUser loginUser, string ms_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyaku_GetRecordsByMsNiyakuID", ReplyAction="http://tempuri.org/IService/KsNiyaku_GetRecordsByMsNiyakuIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsByMsNiyakuIDAsync(NBaseData.DAC.MsUser loginUser, string ms_niyaku_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_InsertRecordResponse")]
        bool KsNiyakuKensaLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsNiyakuKensaLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_UpdateRecordResponse")]
        bool KsNiyakuKensaLink_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsNiyakuKensaLink_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_DeleteRecordBy検査_荷役", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_DeleteRecordBy検査_荷役Response")]
        bool KsNiyakuKensaLink_DeleteRecordBy検査_荷役(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_DeleteRecordBy検査_荷役", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_DeleteRecordBy検査_荷役Response")]
        System.Threading.Tasks.Task<bool> KsNiyakuKensaLink_DeleteRecordBy検査_荷役Async(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_GetRecordsByMsKensaID", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_GetRecordsByMsKensaIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsNiyakuKensaLink> KsNiyakuKensaLink_GetRecordsByMsKensaID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsNiyakuKensaLink_GetRecordsByMsKensaID", ReplyAction="http://tempuri.org/IService/KsNiyakuKensaLink_GetRecordsByMsKensaIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyakuKensaLink>> KsNiyakuKensaLink_GetRecordsByMsKensaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordsBy船IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordsBy船IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShinsa>> KsShinsa_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecordsBy船ID_予定データ", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordsBy船ID_予定データResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordsBy船ID_予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecordsBy船ID_予定データ", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordsBy船ID_予定データResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShinsa>> KsShinsa_GetRecordsBy船ID_予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecord", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordResponse")]
        NBaseData.DAC.KsShinsa KsShinsa_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_shinsa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_GetRecord", ReplyAction="http://tempuri.org/IService/KsShinsa_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_shinsa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShinsa_InsertRecordResponse")]
        bool KsShinsa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShinsa_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShinsa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsShinsa_UpdateRecordResponse")]
        bool KsShinsa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShinsa_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsShinsa_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShinsa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoShinsaLink_GetRecordsByMsShinsaID", ReplyAction="http://tempuri.org/IService/KsShoushoShinsaLink_GetRecordsByMsShinsaIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShoushoShinsaLink> KsShoushoShinsaLink_GetRecordsByMsShinsaID(NBaseData.DAC.MsUser loginUser, string ms_shisa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoShinsaLink_GetRecordsByMsShinsaID", ReplyAction="http://tempuri.org/IService/KsShoushoShinsaLink_GetRecordsByMsShinsaIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShoushoShinsaLink>> KsShoushoShinsaLink_GetRecordsByMsShinsaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_shisa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsBy船IDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsBy船ID", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsBy船IDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsBy船ID_予定データ", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsBy船ID_予定データResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsBy船ID_予定データ(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsBy船ID_予定データ", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsBy船ID_予定データResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsBy船ID_予定データAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検査_予定", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検査_予定Response")]
        System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsFor船_指定検査_予定(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検査_予定", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検査_予定Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsFor船_指定検査_予定Async(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecord", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordResponse")]
        NBaseData.DAC.KsShousho KsShousho_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecord", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.KsShousho> KsShousho_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShousho_InsertRecordResponse")]
        bool KsShousho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShousho_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShousho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsShousho_UpdateRecordResponse")]
        bool KsShousho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_UpdateRecord", ReplyAction="http://tempuri.org/IService/KsShousho_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShousho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検船_予定", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検船_予定Response")]
        System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsFor船_指定検船_予定(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検船_予定", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定検船_予定Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsFor船_指定検船_予定Async(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定審査_予定", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定審査_予定Response")]
        System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsFor船_指定審査_予定(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定審査_予定", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsFor船_指定審査_予定Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsFor船_指定審査_予定Async(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsByMsShoushoID", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsByMsShoushoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsByMsShoushoID(NBaseData.DAC.MsUser loginUser, string ms_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShousho_GetRecordsByMsShoushoID", ReplyAction="http://tempuri.org/IService/KsShousho_GetRecordsByMsShoushoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsByMsShoushoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensaLink_DeleteRecordBy検査マスタID証書ID", ReplyAction="http://tempuri.org/IService/KsShoushoKensaLink_DeleteRecordBy検査マスタID証書IDResponse")]
        bool KsShoushoKensaLink_DeleteRecordBy検査マスタID証書ID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensaLink_DeleteRecordBy検査マスタID証書ID", ReplyAction="http://tempuri.org/IService/KsShoushoKensaLink_DeleteRecordBy検査マスタID証書IDResponse")]
        System.Threading.Tasks.Task<bool> KsShoushoKensaLink_DeleteRecordBy検査マスタID証書IDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensaLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShoushoKensaLink_InsertRecordResponse")]
        bool KsShoushoKensaLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensaLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShoushoKensaLink_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShoushoKensaLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensaLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensaLink_GetRecordsByMsKensaID", ReplyAction="http://tempuri.org/IService/KsShoushoKensaLink_GetRecordsByMsKensaIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensaLink> KsShoushoKensaLink_GetRecordsByMsKensaID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensaLink_GetRecordsByMsKensaID", ReplyAction="http://tempuri.org/IService/KsShoushoKensaLink_GetRecordsByMsKensaIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensaLink>> KsShoushoKensaLink_GetRecordsByMsKensaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensenLink_DeleteRecordBy検船マスタID証書ID", ReplyAction="http://tempuri.org/IService/KsShoushoKensenLink_DeleteRecordBy検船マスタID証書IDResponse" +
            "")]
        bool KsShoushoKensenLink_DeleteRecordBy検船マスタID証書ID(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensenLink_DeleteRecordBy検船マスタID証書ID", ReplyAction="http://tempuri.org/IService/KsShoushoKensenLink_DeleteRecordBy検船マスタID証書IDResponse" +
            "")]
        System.Threading.Tasks.Task<bool> KsShoushoKensenLink_DeleteRecordBy検船マスタID証書IDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, string ks_shousho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensenLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShoushoKensenLink_InsertRecordResponse")]
        bool KsShoushoKensenLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensenLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensenLink_InsertRecord", ReplyAction="http://tempuri.org/IService/KsShoushoKensenLink_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> KsShoushoKensenLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensenLink data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensenLink_GetRecordsByMsKensenID", ReplyAction="http://tempuri.org/IService/KsShoushoKensenLink_GetRecordsByMsKensenIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensenLink> KsShoushoKensenLink_GetRecordsByMsKensenID(NBaseData.DAC.MsUser loginUser, string ms_kensen_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KsShoushoKensenLink_GetRecordsByMsKensenID", ReplyAction="http://tempuri.org/IService/KsShoushoKensenLink_GetRecordsByMsKensenIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensenLink>> KsShoushoKensenLink_GetRecordsByMsKensenIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensen_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanHead>> BgYosanHead_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanMemo_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgYosanMemo_GetRecordsByYosanHeadIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanMemo> BgYosanMemo_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser msUser, int p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanMemo_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgYosanMemo_GetRecordsByYosanHeadIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanMemo>> BgYosanMemo_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser msUser, int p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanMemo_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgYosanMemo_UpdateRecordResponse")]
        bool BgYosanMemo_UpdateRecord(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgYosanMemo editedYosanMemo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanMemo_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgYosanMemo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> BgYosanMemo_UpdateRecordAsync(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgYosanMemo editedYosanMemo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanSbt_GetRecords", ReplyAction="http://tempuri.org/IService/BgYosanSbt_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanSbt> BgYosanSbt_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanSbt_GetRecords", ReplyAction="http://tempuri.org/IService/BgYosanSbt_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanSbt>> BgYosanSbt_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDouseiCargo_GetRecordsMsCargoID", ReplyAction="http://tempuri.org/IService/DjDouseiCargo_GetRecordsMsCargoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDouseiCargo> DjDouseiCargo_GetRecordsMsCargoID(NBaseData.DAC.MsUser loginUser, int ms_cargo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDouseiCargo_GetRecordsMsCargoID", ReplyAction="http://tempuri.org/IService/DjDouseiCargo_GetRecordsMsCargoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDouseiCargo>> DjDouseiCargo_GetRecordsMsCargoIDAsync(NBaseData.DAC.MsUser loginUser, int ms_cargo_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsByHead", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsByHeadResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsByHead(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel Vessel, System.DateTime FromDate, System.DateTime ToDate, int KikanrenkeiJisseki, System.Collections.Generic.List<int> cargoIds, System.Collections.Generic.List<string> bashoIds, System.Collections.Generic.List<string> kichiIds, System.Collections.Generic.List<string> dairitenIds, System.Collections.Generic.List<string> ninushiIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsByHead", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsByHeadResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsByHeadAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel Vessel, System.DateTime FromDate, System.DateTime ToDate, int KikanrenkeiJisseki, System.Collections.Generic.List<int> cargoIds, System.Collections.Generic.List<string> bashoIds, System.Collections.Generic.List<string> kichiIds, System.Collections.Generic.List<string> dairitenIds, System.Collections.Generic.List<string> ninushiIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_InsertRecord", ReplyAction="http://tempuri.org/IService/DjDousei_InsertRecordResponse")]
        bool DjDousei_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_InsertRecord", ReplyAction="http://tempuri.org/IService/DjDousei_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DjDousei_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_UpdateRecord", ReplyAction="http://tempuri.org/IService/DjDousei_UpdateRecordResponse")]
        bool DjDousei_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_UpdateRecord", ReplyAction="http://tempuri.org/IService/DjDousei_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DjDousei_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_UpdateDetailRecords", ReplyAction="http://tempuri.org/IService/DjDousei_UpdateDetailRecordsResponse")]
        bool DjDousei_UpdateDetailRecords(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_UpdateDetailRecords", ReplyAction="http://tempuri.org/IService/DjDousei_UpdateDetailRecordsResponse")]
        System.Threading.Tasks.Task<bool> DjDousei_UpdateDetailRecordsAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecords", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecords(NBaseData.DAC.MsUser loginUser, int MsVesselID, System.Nullable<System.DateTime> Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecords", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, int MsVesselID, System.Nullable<System.DateTime> Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsByMsKichiID", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsByMsKichiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsByMsKichiID(NBaseData.DAC.MsUser loginUser, string ms_kichi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsByMsKichiID", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsByMsKichiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsByMsKichiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kichi_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsByMsBashoID", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsByMsBashoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsByMsBashoID(NBaseData.DAC.MsUser loginUser, string ms_basho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsByMsBashoID", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsByMsBashoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsByMsBashoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_basho_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsBySameVoaygeNo", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsBySameVoaygeNoResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsBySameVoaygeNo(NBaseData.DAC.MsUser loginUser, string DjDouseiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDousei_GetRecordsBySameVoaygeNo", ReplyAction="http://tempuri.org/IService/DjDousei_GetRecordsBySameVoaygeNoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsBySameVoaygeNoAsync(NBaseData.DAC.MsUser loginUser, string DjDouseiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDouseiHoukoku_GetRecordsByHoukokuDate", ReplyAction="http://tempuri.org/IService/DjDouseiHoukoku_GetRecordsByHoukokuDateResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku> DjDouseiHoukoku_GetRecordsByHoukokuDate(NBaseData.DAC.MsUser loginUser, System.DateTime houkokuDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDouseiHoukoku_GetRecordsByHoukokuDate", ReplyAction="http://tempuri.org/IService/DjDouseiHoukoku_GetRecordsByHoukokuDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku>> DjDouseiHoukoku_GetRecordsByHoukokuDateAsync(NBaseData.DAC.MsUser loginUser, System.DateTime houkokuDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDouseiHoukoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/DjDouseiHoukoku_InsertOrUpdateResponse")]
        NBaseData.DAC.DjDouseiHoukoku DjDouseiHoukoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DjDouseiHoukoku_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/DjDouseiHoukoku_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DjDouseiHoukoku> DjDouseiHoukoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmBunrui_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui> MsDmBunrui_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmBunrui_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui>> MsDmBunrui_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsDmBunrui_GetRecordsByNameResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui> MsDmBunrui_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_GetRecordsByName", ReplyAction="http://tempuri.org/IService/MsDmBunrui_GetRecordsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui>> MsDmBunrui_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmBunrui_GetRecordResponse")]
        NBaseData.DAC.MsDmBunrui MsDmBunrui_GetRecord(NBaseData.DAC.MsUser loginUser, string msDmBunruiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmBunrui_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsDmBunrui> MsDmBunrui_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string msDmBunruiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmBunrui_InsertRecordResponse")]
        bool MsDmBunrui_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmBunrui_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmBunrui_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmBunrui_UpdateRecordResponse")]
        bool MsDmBunrui_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmBunrui_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmBunrui_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmBunrui_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui>> MsDmShoubunrui_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByBunruiID", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByBunruiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecordsByBunruiID(NBaseData.DAC.MsUser loginUser, string msDmBunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByBunruiID", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByBunruiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui>> MsDmShoubunrui_GetRecordsByBunruiIDAsync(NBaseData.DAC.MsUser loginUser, string msDmBunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByNameAndBunruiID", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByNameAndBunruiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecordsByNameAndBunruiID(NBaseData.DAC.MsUser loginUser, string name, string msDmBunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByNameAndBunruiID", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordsByNameAndBunruiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui>> MsDmShoubunrui_GetRecordsByNameAndBunruiIDAsync(NBaseData.DAC.MsUser loginUser, string name, string msDmBunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordResponse")]
        NBaseData.DAC.MsDmShoubunrui MsDmShoubunrui_GetRecord(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_InsertRecordResponse")]
        bool MsDmShoubunrui_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmShoubunrui_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_UpdateRecordResponse")]
        bool MsDmShoubunrui_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmShoubunrui_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmShoubunrui_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmShoubunrui_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> MsDmHoukokusho_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho>> MsDmHoukokusho_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_SearchRecords", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> MsDmHoukokusho_SearchRecords(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_SearchRecords", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho>> MsDmHoukokusho_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_GetRecordResponse")]
        NBaseData.DAC.MsDmHoukokusho MsDmHoukokusho_GetRecord(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsDmHoukokusho> MsDmHoukokusho_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_InsertRecordResponse")]
        bool MsDmHoukokusho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmHoukokusho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_UpdateRecordResponse")]
        bool MsDmHoukokusho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmHoukokusho_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmHoukokusho_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmHoukokusho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDmTemplateFile> MsDmTemplateFile_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_GetRecords", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmTemplateFile>> MsDmTemplateFile_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_GetRecordByHoukokushoID", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_GetRecordByHoukokushoIDResponse")]
        NBaseData.DAC.MsDmTemplateFile MsDmTemplateFile_GetRecordByHoukokushoID(NBaseData.DAC.MsUser loginUser, string houkokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_GetRecordByHoukokushoID", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_GetRecordByHoukokushoIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsDmTemplateFile> MsDmTemplateFile_GetRecordByHoukokushoIDAsync(NBaseData.DAC.MsUser loginUser, string houkokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_GetRecordResponse")]
        NBaseData.DAC.MsDmTemplateFile MsDmTemplateFile_GetRecord(NBaseData.DAC.MsUser loginUser, string houkokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_GetRecord", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsDmTemplateFile> MsDmTemplateFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string houkokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_InsertRecordResponse")]
        bool MsDmTemplateFile_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_InsertRecord", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmTemplateFile_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_UpdateRecordResponse")]
        bool MsDmTemplateFile_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDmTemplateFile_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsDmTemplateFile_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsDmTemplateFile_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_GetRecords", ReplyAction="http://tempuri.org/IService/DmPublisher_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmPublisher> DmPublisher_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_GetRecords", ReplyAction="http://tempuri.org/IService/DmPublisher_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmPublisher>> DmPublisher_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmPublisher_GetRecordsByLinkSakiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmPublisher> DmPublisher_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmPublisher_GetRecordsByLinkSakiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmPublisher>> DmPublisher_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_GetRecord", ReplyAction="http://tempuri.org/IService/DmPublisher_GetRecordResponse")]
        NBaseData.DAC.DmPublisher DmPublisher_GetRecord(NBaseData.DAC.MsUser loginUser, string publisherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_GetRecord", ReplyAction="http://tempuri.org/IService/DmPublisher_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmPublisher> DmPublisher_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string publisherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_InsertRecord", ReplyAction="http://tempuri.org/IService/DmPublisher_InsertRecordResponse")]
        bool DmPublisher_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_InsertRecord", ReplyAction="http://tempuri.org/IService/DmPublisher_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmPublisher_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmPublisher_UpdateRecordResponse")]
        bool DmPublisher_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmPublisher_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmPublisher_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmPublisher_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_GetRecords", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> DmKoukaiSaki_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_GetRecords", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki>> DmKoukaiSaki_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_GetRecordsByLinkSakiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> DmKoukaiSaki_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_GetRecordsByLinkSakiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki>> DmKoukaiSaki_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_GetRecord", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_GetRecordResponse")]
        NBaseData.DAC.DmKoukaiSaki DmKoukaiSaki_GetRecord(NBaseData.DAC.MsUser loginUser, string koukaiSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_GetRecord", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKoukaiSaki> DmKoukaiSaki_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string koukaiSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_InsertRecordResponse")]
        bool DmKoukaiSaki_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKoukaiSaki_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_UpdateRecordResponse")]
        bool DmKoukaiSaki_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoukaiSaki_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKoukaiSaki_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKoukaiSaki_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetRecords", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetRecords", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku>> DmKanriKiroku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetRecord", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetRecordResponse")]
        NBaseData.DAC.DmKanriKiroku DmKanriKiroku_GetRecord(NBaseData.DAC.MsUser loginUser, string kanriKirokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetRecord", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kanriKirokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetRecordsByHoukokushoID", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetRecordsByHoukokushoIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetRecordsByHoukokushoID(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetRecordsByHoukokushoID", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetRecordsByHoukokushoIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku>> DmKanriKiroku_GetRecordsByHoukokushoIDAsync(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetPastRecords", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetPastRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetPastRecords(NBaseData.DAC.MsUser loginUser, string houkokushoId, string userId, int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_GetPastRecords", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_GetPastRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku>> DmKanriKiroku_GetPastRecordsAsync(NBaseData.DAC.MsUser loginUser, string houkokushoId, string userId, int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_InsertRecordResponse")]
        bool DmKanriKiroku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKanriKiroku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_UpdateRecordResponse")]
        bool DmKanriKiroku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKiroku_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKanriKiroku_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKanriKiroku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HoukokushoKanriKiroku_SearchRecords", ReplyAction="http://tempuri.org/IService/HoukokushoKanriKiroku_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.HoukokushoKanriKiroku> HoukokushoKanriKiroku_SearchRecords(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName, string userId, int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HoukokushoKanriKiroku_SearchRecords", ReplyAction="http://tempuri.org/IService/HoukokushoKanriKiroku_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.HoukokushoKanriKiroku>> HoukokushoKanriKiroku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName, string userId, int role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_GetRecords", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKanriKirokuFile> DmKanriKirokuFile_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_GetRecords", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKirokuFile>> DmKanriKirokuFile_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordByKanriKirokuID", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordByKanriKirokuIDResponse")]
        NBaseData.DAC.DmKanriKirokuFile DmKanriKirokuFile_GetRecordByKanriKirokuID(NBaseData.DAC.MsUser loginUser, string kanriKirokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordByKanriKirokuID", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordByKanriKirokuIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKanriKirokuFile> DmKanriKirokuFile_GetRecordByKanriKirokuIDAsync(NBaseData.DAC.MsUser loginUser, string kanriKirokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_GetRecord", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordResponse")]
        NBaseData.DAC.DmKanriKirokuFile DmKanriKirokuFile_GetRecord(NBaseData.DAC.MsUser loginUser, string kanriKirokuFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_GetRecord", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKanriKirokuFile> DmKanriKirokuFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kanriKirokuFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_InsertRecordResponse")]
        bool DmKanriKirokuFile_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKanriKirokuFile_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_UpdateRecordResponse")]
        bool DmKanriKirokuFile_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanriKirokuFile_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKanriKirokuFile_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKanriKirokuFile_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_GetRecordsByLinkSaki", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_GetRecordsByLinkSakiResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKakuninJokyo> DmKakuninJokyo_GetRecordsByLinkSaki(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_GetRecordsByLinkSaki", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_GetRecordsByLinkSakiResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKakuninJokyo>> DmKakuninJokyo_GetRecordsByLinkSakiAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_GetRecordByLinkSakiUser", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_GetRecordByLinkSakiUserResponse")]
        NBaseData.DAC.DmKakuninJokyo DmKakuninJokyo_GetRecordByLinkSakiUser(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_GetRecordByLinkSakiUser", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_GetRecordByLinkSakiUserResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKakuninJokyo> DmKakuninJokyo_GetRecordByLinkSakiUserAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_GetRecord", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_GetRecordResponse")]
        NBaseData.DAC.DmKakuninJokyo DmKakuninJokyo_GetRecord(NBaseData.DAC.MsUser loginUser, string kakuninJokyoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_GetRecord", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKakuninJokyo> DmKakuninJokyo_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kakuninJokyoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_InsertRecordResponse")]
        bool DmKakuninJokyo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKakuninJokyo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_UpdateRecordResponse")]
        bool DmKakuninJokyo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKakuninJokyo_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKakuninJokyo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKakuninJokyo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmDocComment_GetRecordsByLinkSakiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmDocComment> DmDocComment_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmDocComment_GetRecordsByLinkSakiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmDocComment>> DmDocComment_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_GetRecord", ReplyAction="http://tempuri.org/IService/DmDocComment_GetRecordResponse")]
        NBaseData.DAC.DmDocComment DmDocComment_GetRecord(NBaseData.DAC.MsUser loginUser, string docCommentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_GetRecord", ReplyAction="http://tempuri.org/IService/DmDocComment_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmDocComment> DmDocComment_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string docCommentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_InsertRecord", ReplyAction="http://tempuri.org/IService/DmDocComment_InsertRecordResponse")]
        bool DmDocComment_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_InsertRecord", ReplyAction="http://tempuri.org/IService/DmDocComment_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmDocComment_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmDocComment_UpdateRecordResponse")]
        bool DmDocComment_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmDocComment_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmDocComment_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmDocComment_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecords", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecords", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku>> DmKoubunshoKisoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordResponse")]
        NBaseData.DAC.DmKoubunshoKisoku DmKoubunshoKisoku_GetRecord(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByBunruiID", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByBunruiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecordsByBunruiID(NBaseData.DAC.MsUser loginUser, string msDmBunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByBunruiID", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByBunruiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku>> DmKoubunshoKisoku_GetRecordsByBunruiIDAsync(NBaseData.DAC.MsUser loginUser, string msDmBunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByShoubunruiID", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByShoubunruiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecordsByShoubunruiID(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByShoubunruiID", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_GetRecordsByShoubunruiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku>> DmKoubunshoKisoku_GetRecordsByShoubunruiIDAsync(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_InsertRecordResponse")]
        bool DmKoubunshoKisoku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKoubunshoKisoku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_UpdateRecordResponse")]
        bool DmKoubunshoKisoku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisoku_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisoku_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKoubunshoKisoku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecords", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisokuFile> DmKoubunshoKisokuFile_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecords", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisokuFile>> DmKoubunshoKisokuFile_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuID", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuIDRes" +
            "ponse")]
        NBaseData.DAC.DmKoubunshoKisokuFile DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuID(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuID", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKoubunshoKisokuFile> DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuIDAsync(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordResponse")]
        NBaseData.DAC.DmKoubunshoKisokuFile DmKoubunshoKisokuFile_GetRecord(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKoubunshoKisokuFile> DmKoubunshoKisokuFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_InsertRecordResponse")]
        bool DmKoubunshoKisokuFile_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKoubunshoKisokuFile_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_UpdateRecordResponse")]
        bool DmKoubunshoKisokuFile_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKoubunshoKisokuFile_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKoubunshoKisokuFile_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKoubunshoKisokuFile_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_GetRecordsByLinkSakiIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.DmKanryoInfo> DmKanryoInfo_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_GetRecordsByLinkSakiID", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_GetRecordsByLinkSakiIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanryoInfo>> DmKanryoInfo_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_GetRecord", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_GetRecordResponse")]
        NBaseData.DAC.DmKanryoInfo DmKanryoInfo_GetRecord(NBaseData.DAC.MsUser loginUser, string kanryoInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_GetRecord", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.DmKanryoInfo> DmKanryoInfo_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kanryoInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_InsertRecordResponse")]
        bool DmKanryoInfo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_InsertRecord", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKanryoInfo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_UpdateRecordResponse")]
        bool DmKanryoInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DmKanryoInfo_UpdateRecord", ReplyAction="http://tempuri.org/IService/DmKanryoInfo_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> DmKanryoInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentImportance_GetRecords", ReplyAction="http://tempuri.org/IService/MsAccidentImportance_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance> MsAccidentImportance_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentImportance_GetRecords", ReplyAction="http://tempuri.org/IService/MsAccidentImportance_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance>> MsAccidentImportance_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentImportance_SearchRecords", ReplyAction="http://tempuri.org/IService/MsAccidentImportance_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance> MsAccidentImportance_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentImportance_SearchRecords", ReplyAction="http://tempuri.org/IService/MsAccidentImportance_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance>> MsAccidentImportance_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentImportance_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsAccidentImportance_InsertOrUpdateResponse")]
        bool MsAccidentImportance_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentImportance m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentImportance_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsAccidentImportance_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsAccidentImportance_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentImportance m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsAccidentKind_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind> MsAccidentKind_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsAccidentKind_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind>> MsAccidentKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsAccidentKind_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind> MsAccidentKind_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsAccidentKind_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind>> MsAccidentKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsAccidentKind_InsertOrUpdateResponse")]
        bool MsAccidentKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsAccidentKind_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsAccidentKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentSituation_GetRecords", ReplyAction="http://tempuri.org/IService/MsAccidentSituation_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation> MsAccidentSituation_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentSituation_GetRecords", ReplyAction="http://tempuri.org/IService/MsAccidentSituation_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation>> MsAccidentSituation_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentSituation_SearchRecords", ReplyAction="http://tempuri.org/IService/MsAccidentSituation_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation> MsAccidentSituation_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentSituation_SearchRecords", ReplyAction="http://tempuri.org/IService/MsAccidentSituation_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation>> MsAccidentSituation_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentSituation_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsAccidentSituation_InsertOrUpdateResponse")]
        bool MsAccidentSituation_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentSituation m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsAccidentSituation_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsAccidentSituation_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsAccidentSituation_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentSituation m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsActionCode_GetRecords", ReplyAction="http://tempuri.org/IService/MsActionCode_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsActionCode> MsActionCode_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsActionCode_GetRecords", ReplyAction="http://tempuri.org/IService/MsActionCode_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsActionCode>> MsActionCode_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsActionCode_SearchRecords", ReplyAction="http://tempuri.org/IService/MsActionCode_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsActionCode> MsActionCode_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsActionCode_SearchRecords", ReplyAction="http://tempuri.org/IService/MsActionCode_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsActionCode>> MsActionCode_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsActionCode_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsActionCode_InsertOrUpdateResponse")]
        bool MsActionCode_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsActionCode m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsActionCode_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsActionCode_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsActionCode_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsActionCode m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoGroup_GetRecords", ReplyAction="http://tempuri.org/IService/MsCargoGroup_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsCargoGroup> MsCargoGroup_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsCargoGroup_GetRecords", ReplyAction="http://tempuri.org/IService/MsCargoGroup_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargoGroup>> MsCargoGroup_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCategory_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory> MsDeficiencyCategory_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCategory_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory>> MsDeficiencyCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCategory_SearchRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCategory_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory> MsDeficiencyCategory_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCategory_SearchRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCategory_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory>> MsDeficiencyCategory_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCategory_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsDeficiencyCategory_InsertOrUpdateResponse")]
        bool MsDeficiencyCategory_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCategory m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCategory_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsDeficiencyCategory_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsDeficiencyCategory_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCategory m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCode_GetRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCode_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode> MsDeficiencyCode_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCode_GetRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCode_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode>> MsDeficiencyCode_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCode_SearchRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCode_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode> MsDeficiencyCode_SearchRecords(NBaseData.DAC.MsUser loginUser, int categoryId, string name, string defectiveItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCode_SearchRecords", ReplyAction="http://tempuri.org/IService/MsDeficiencyCode_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode>> MsDeficiencyCode_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int categoryId, string name, string defectiveItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCode_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsDeficiencyCode_InsertOrUpdateResponse")]
        bool MsDeficiencyCode_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCode m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDeficiencyCode_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsDeficiencyCode_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsDeficiencyCode_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCode m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjKazamuki_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjKazamuki_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDjKazamuki> MsDjKazamuki_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjKazamuki_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjKazamuki_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjKazamuki>> MsDjKazamuki_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjKenkoujyoutai_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjKenkoujyoutai_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDjKenkoujyoutai> MsDjKenkoujyoutai_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjKenkoujyoutai_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjKenkoujyoutai_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjKenkoujyoutai>> MsDjKenkoujyoutai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjSentaisetsubi_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjSentaisetsubi_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDjSentaisetsubi> MsDjSentaisetsubi_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjSentaisetsubi_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjSentaisetsubi_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjSentaisetsubi>> MsDjSentaisetsubi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjTani_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjTani_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDjTani> MsDjTani_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjTani_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjTani_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjTani>> MsDjTani_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjTenkou_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjTenkou_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsDjTenkou> MsDjTenkou_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsDjTenkou_GetRecords", ReplyAction="http://tempuri.org/IService/MsDjTenkou_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjTenkou>> MsDjTenkou_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsInspectionCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsInspectionCategory_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory> MsInspectionCategory_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsInspectionCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsInspectionCategory_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory>> MsInspectionCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsInspectionCategory_SearchRecords", ReplyAction="http://tempuri.org/IService/MsInspectionCategory_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory> MsInspectionCategory_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsInspectionCategory_SearchRecords", ReplyAction="http://tempuri.org/IService/MsInspectionCategory_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory>> MsInspectionCategory_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsInspectionCategory_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsInspectionCategory_InsertOrUpdateResponse")]
        bool MsInspectionCategory_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsInspectionCategory m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsInspectionCategory_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsInspectionCategory_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsInspectionCategory_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsInspectionCategory m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKindOfAccident_GetRecords", ReplyAction="http://tempuri.org/IService/MsKindOfAccident_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident> MsKindOfAccident_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKindOfAccident_GetRecords", ReplyAction="http://tempuri.org/IService/MsKindOfAccident_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident>> MsKindOfAccident_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKindOfAccident_SearchRecords", ReplyAction="http://tempuri.org/IService/MsKindOfAccident_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident> MsKindOfAccident_SearchRecords(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKindOfAccident_SearchRecords", ReplyAction="http://tempuri.org/IService/MsKindOfAccident_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident>> MsKindOfAccident_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKindOfAccident_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsKindOfAccident_InsertOrUpdateResponse")]
        bool MsKindOfAccident_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKindOfAccident m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsKindOfAccident_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsKindOfAccident_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsKindOfAccident_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKindOfAccident m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_GetRecords", ReplyAction="http://tempuri.org/IService/MsRegional_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsRegional> MsRegional_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_GetRecords", ReplyAction="http://tempuri.org/IService/MsRegional_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRegional>> MsRegional_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_SearchRecords", ReplyAction="http://tempuri.org/IService/MsRegional_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsRegional> MsRegional_SearchRecords(NBaseData.DAC.MsUser loginUser, string regionalCode, string regionalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_SearchRecords", ReplyAction="http://tempuri.org/IService/MsRegional_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRegional>> MsRegional_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string regionalCode, string regionalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_InsertRecord", ReplyAction="http://tempuri.org/IService/MsRegional_InsertRecordResponse")]
        bool MsRegional_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_InsertRecord", ReplyAction="http://tempuri.org/IService/MsRegional_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> MsRegional_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsRegional_UpdateRecordResponse")]
        bool MsRegional_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsRegional_UpdateRecord", ReplyAction="http://tempuri.org/IService/MsRegional_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> MsRegional_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsScheduleCategory_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsScheduleCategory> MsScheduleCategory_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleCategory_GetRecords", ReplyAction="http://tempuri.org/IService/MsScheduleCategory_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleCategory>> MsScheduleCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleCategory_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsScheduleCategory_InsertOrUpdateResponse")]
        bool MsScheduleCategory_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleCategory m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleCategory_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsScheduleCategory_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsScheduleCategory_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleCategory m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKind_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind> MsScheduleKind_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKind_GetRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKind_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind>> MsScheduleKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKind_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind> MsScheduleKind_SearchRecords(NBaseData.DAC.MsUser loginUser, int categoryId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKind_SearchRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKind_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind>> MsScheduleKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int categoryId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsScheduleKind_InsertOrUpdateResponse")]
        bool MsScheduleKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKind_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsScheduleKind_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsScheduleKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKind m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKindDetail_GetRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKindDetail_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail> MsScheduleKindDetail_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKindDetail_GetRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKindDetail_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail>> MsScheduleKindDetail_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKindDetail_SearchRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKindDetail_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail> MsScheduleKindDetail_SearchRecords(NBaseData.DAC.MsUser loginUser, int kindId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKindDetail_SearchRecords", ReplyAction="http://tempuri.org/IService/MsScheduleKindDetail_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail>> MsScheduleKindDetail_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int kindId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKindDetail_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsScheduleKindDetail_InsertOrUpdateResponse")]
        bool MsScheduleKindDetail_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKindDetail m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsScheduleKindDetail_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsScheduleKindDetail_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsScheduleKindDetail_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKindDetail m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninEtc_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/MsSeninEtc_GetRecordsByMsSeninIDResponse")]
        NBaseData.DAC.MsSeninEtc MsSeninEtc_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninEtc_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/MsSeninEtc_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSeninEtc> MsSeninEtc_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninEtc_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSeninEtc_InsertOrUpdateResponse")]
        bool MsSeninEtc_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninEtc seninEtc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninEtc_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSeninEtc_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSeninEtc_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninEtc seninEtc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninCareer_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/MsSeninCareer_GetRecordsByMsSeninIDResponse")]
        NBaseData.DAC.MsSeninCareer MsSeninCareer_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninCareer_GetRecordsByMsSeninID", ReplyAction="http://tempuri.org/IService/MsSeninCareer_GetRecordsByMsSeninIDResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSeninCareer> MsSeninCareer_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninCareer_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSeninCareer_InsertOrUpdateResponse")]
        bool MsSeninCareer_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninCareer seninCareer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MsSeninCareer_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/MsSeninCareer_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> MsSeninCareer_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninCareer seninCareer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_休暇消化状況出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_休暇消化状況出力Response")]
        byte[] BLC_Excel_休暇消化状況出力(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_休暇消化状況出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_休暇消化状況出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_休暇消化状況出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_乗下船記録書出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_乗下船記録書出力Response")]
        byte[] BLC_Excel_乗下船記録書出力(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_乗下船記録書出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_乗下船記録書出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_乗下船記録書出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_乗下船カード出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_乗下船カード出力Response")]
        byte[] BLC_Excel_乗下船カード出力(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_乗下船カード出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_乗下船カード出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_乗下船カード出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_個人情報一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_個人情報一覧出力Response")]
        byte[] BLC_Excel_個人情報一覧出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_個人情報一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_個人情報一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_個人情報一覧出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_クルーリスト出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_クルーリスト出力Response")]
        byte[] BLC_Excel_クルーリスト出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_クルーリスト出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_クルーリスト出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_クルーリスト出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_配乗表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_配乗表出力Response")]
        byte[] BLC_Excel_配乗表出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_配乗表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_配乗表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_配乗表出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_免状免許_アラーム削除", ReplyAction="http://tempuri.org/IService/BLC_免状免許_アラーム削除Response")]
        bool BLC_免状免許_アラーム削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_免状免許_アラーム削除", ReplyAction="http://tempuri.org/IService/BLC_免状免許_アラーム削除Response")]
        System.Threading.Tasks.Task<bool> BLC_免状免許_アラーム削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員検索", ReplyAction="http://tempuri.org/IService/BLC_船員検索Response")]
        System.Collections.Generic.List<NBaseData.DAC.MsSenin> BLC_船員検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員検索", ReplyAction="http://tempuri.org/IService/BLC_船員検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> BLC_船員検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員カード検索", ReplyAction="http://tempuri.org/IService/BLC_船員カード検索Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> BLC_船員カード検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員カード検索", ReplyAction="http://tempuri.org/IService/BLC_船員カード検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> BLC_船員カード検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_交代者検索", ReplyAction="http://tempuri.org/IService/BLC_交代者検索Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> BLC_交代者検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_交代者検索", ReplyAction="http://tempuri.org/IService/BLC_交代者検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> BLC_交代者検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船員カード出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船員カード出力Response")]
        byte[] BLC_Excel_船員カード出力(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船員カード出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船員カード出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_船員カード出力Async(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗表作成", ReplyAction="http://tempuri.org/IService/BLC_配乗表作成Response")]
        NBaseData.DAC.SiHaijou BLC_配乗表作成(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗表作成", ReplyAction="http://tempuri.org/IService/BLC_配乗表作成Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiHaijou> BLC_配乗表作成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_GetCrewMatrix", ReplyAction="http://tempuri.org/IService/BLC_GetCrewMatrixResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiSimulationDetail> BLC_GetCrewMatrix(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_GetCrewMatrix", ReplyAction="http://tempuri.org/IService/BLC_GetCrewMatrixResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSimulationDetail>> BLC_GetCrewMatrixAsync(NBaseData.DAC.MsUser loginUser, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_傷病一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_傷病一覧出力Response")]
        byte[] BLC_Excel_傷病一覧出力(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_傷病一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_傷病一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_傷病一覧出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_健康診断一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_健康診断一覧出力Response")]
        byte[] BLC_Excel_健康診断一覧出力(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_健康診断一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_健康診断一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_健康診断一覧出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_職別海技免許等資格一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_職別海技免許等資格一覧出力Response")]
        byte[] BLC_Excel_職別海技免許等資格一覧出力(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_職別海技免許等資格一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_職別海技免許等資格一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_職別海技免許等資格一覧出力Async(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, int msSeninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員検索Advanced", ReplyAction="http://tempuri.org/IService/BLC_船員検索AdvancedResponse")]
        System.Collections.Generic.List<NBaseData.DS.MsSeninPlus> BLC_船員検索Advanced(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiAdvancedSearchFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionItem> conditionItems, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionValue> conditionValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員検索Advanced", ReplyAction="http://tempuri.org/IService/BLC_船員検索AdvancedResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DS.MsSeninPlus>> BLC_船員検索AdvancedAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiAdvancedSearchFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionItem> conditionItems, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionValue> conditionValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員検索条件登録", ReplyAction="http://tempuri.org/IService/BLC_船員検索条件登録Response")]
        bool BLC_船員検索条件登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAdvancedSearchConditionHead conditionHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員検索条件登録", ReplyAction="http://tempuri.org/IService/BLC_船員検索条件登録Response")]
        System.Threading.Tasks.Task<bool> BLC_船員検索条件登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAdvancedSearchConditionHead conditionHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Get船員検索条件", ReplyAction="http://tempuri.org/IService/BLC_Get船員検索条件Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionHead> BLC_Get船員検索条件(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Get船員検索条件", ReplyAction="http://tempuri.org/IService/BLC_Get船員検索条件Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionHead>> BLC_Get船員検索条件Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_給与手当一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_給与手当一覧表出力Response")]
        byte[] BLC_Excel_給与手当一覧表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_給与手当一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_給与手当一覧表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_給与手当一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船員交代予定表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船員交代予定表出力Response")]
        byte[] BLC_Excel_船員交代予定表出力(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船員交代予定表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船員交代予定表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_船員交代予定表出力Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員基本給登録", ReplyAction="http://tempuri.org/IService/BLC_船員基本給登録Response")]
        int BLC_船員基本給登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiSalary salary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員基本給登録", ReplyAction="http://tempuri.org/IService/BLC_船員基本給登録Response")]
        System.Threading.Tasks.Task<int> BLC_船員基本給登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiSalary salary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員既往歴登録", ReplyAction="http://tempuri.org/IService/BLC_船員既往歴登録Response")]
        int BLC_船員既往歴登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiKenshinPmhKa kenshinPmhKa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員既往歴登録", ReplyAction="http://tempuri.org/IService/BLC_船員既往歴登録Response")]
        System.Threading.Tasks.Task<int> BLC_船員既往歴登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiKenshinPmhKa kenshinPmhKa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員特記事項登録", ReplyAction="http://tempuri.org/IService/BLC_船員特記事項登録Response")]
        int BLC_船員特記事項登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiRemarks remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員特記事項登録", ReplyAction="http://tempuri.org/IService/BLC_船員特記事項登録Response")]
        System.Threading.Tasks.Task<int> BLC_船員特記事項登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiRemarks remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員カード検索2", ReplyAction="http://tempuri.org/IService/BLC_船員カード検索2Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiCard> BLC_船員カード検索2(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員カード検索2", ReplyAction="http://tempuri.org/IService/BLC_船員カード検索2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> BLC_船員カード検索2Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員カード登録", ReplyAction="http://tempuri.org/IService/BLC_船員カード登録Response")]
        bool BLC_船員カード登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCard card);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員カード登録", ReplyAction="http://tempuri.org/IService/BLC_船員カード登録Response")]
        System.Threading.Tasks.Task<bool> BLC_船員カード登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCard card);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_入渠_直近ドックオーダー品目", ReplyAction="http://tempuri.org/IService/BLC_入渠_直近ドックオーダー品目Response")]
        System.Collections.Generic.List<NBaseData.DAC.OdThiItem> BLC_入渠_直近ドックオーダー品目(NBaseData.DAC.MsUser loginUser, int msVesselID, string msThiIraiShousaiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_入渠_直近ドックオーダー品目", ReplyAction="http://tempuri.org/IService/BLC_入渠_直近ドックオーダー品目Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiItem>> BLC_入渠_直近ドックオーダー品目Async(NBaseData.DAC.MsUser loginUser, int msVesselID, string msThiIraiShousaiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel入渠費用管理表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel入渠費用管理表_取得Response")]
        byte[] BLC_Excel入渠費用管理表_取得(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel入渠費用管理表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel入渠費用管理表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel入渠費用管理表_取得Async(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel動静表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel動静表_取得Response")]
        byte[] BLC_Excel動静表_取得(NBaseData.DAC.MsUser loginUser, System.DateTime today);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel動静表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel動静表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel動静表_取得Async(NBaseData.DAC.MsUser loginUser, System.DateTime today);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel月次収支報告書_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel月次収支報告書_取得Response")]
        byte[] BLC_Excel月次収支報告書_取得(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, decimal unit, string month, bool is累計);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel月次収支報告書_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel月次収支報告書_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel月次収支報告書_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, decimal unit, string month, bool is累計);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC月次計上処理_実行", ReplyAction="http://tempuri.org/IService/BLC月次計上処理_実行Response")]
        bool BLC月次計上処理_実行(NBaseData.DAC.MsUser loginUser, string YearMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC月次計上処理_実行", ReplyAction="http://tempuri.org/IService/BLC月次計上処理_実行Response")]
        System.Threading.Tasks.Task<bool> BLC月次計上処理_実行Async(NBaseData.DAC.MsUser loginUser, string YearMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_新規", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_新規Response")]
        bool BLC_新規発注処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_新規", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_新規発注処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_手配あり", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_手配ありResponse")]
        bool BLC_新規発注処理_手配あり(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_手配あり", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_手配ありResponse")]
        System.Threading.Tasks.Task<bool> BLC_新規発注処理_手配ありAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_保存", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_保存Response")]
        bool BLC_新規発注処理_保存(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_保存", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_保存Response")]
        System.Threading.Tasks.Task<bool> BLC_新規発注処理_保存Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_保存情報削除", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_保存情報削除Response")]
        bool BLC_新規発注処理_保存情報削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規発注処理_保存情報削除", ReplyAction="http://tempuri.org/IService/BLC_新規発注処理_保存情報削除Response")]
        System.Threading.Tasks.Task<bool> BLC_新規発注処理_保存情報削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_予算作成", ReplyAction="http://tempuri.org/IService/BLC_予算作成Response")]
        bool BLC_予算作成(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> kadouVessels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_予算作成", ReplyAction="http://tempuri.org/IService/BLC_予算作成Response")]
        System.Threading.Tasks.Task<bool> BLC_予算作成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> kadouVessels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_予算Revアップ", ReplyAction="http://tempuri.org/IService/BLC_予算RevアップResponse")]
        bool BLC_予算Revアップ(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_予算Revアップ", ReplyAction="http://tempuri.org/IService/BLC_予算RevアップResponse")]
        System.Threading.Tasks.Task<bool> BLC_予算RevアップAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_予算保存", ReplyAction="http://tempuri.org/IService/BLC_予算保存Response")]
        bool BLC_予算保存(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems, NBaseData.DAC.BgNrkKanryou nrkKanryou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_予算保存", ReplyAction="http://tempuri.org/IService/BLC_予算保存Response")]
        System.Threading.Tasks.Task<bool> BLC_予算保存Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems, NBaseData.DAC.BgNrkKanryou nrkKanryou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_販管費保存", ReplyAction="http://tempuri.org/IService/BLC_販管費保存Response")]
        bool BLC_販管費保存(NBaseData.DAC.MsUser loginUser, int year, NBaseData.DAC.BgYosanHead yosanHead, int eigyo, int kanri, int nenkan, int keiei, System.Collections.Generic.List<int> msVesselIds, System.Collections.Generic.List<decimal> amounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_販管費保存", ReplyAction="http://tempuri.org/IService/BLC_販管費保存Response")]
        System.Threading.Tasks.Task<bool> BLC_販管費保存Async(NBaseData.DAC.MsUser loginUser, int year, NBaseData.DAC.BgYosanHead yosanHead, int eigyo, int kanri, int nenkan, int keiei, System.Collections.Generic.List<int> msVesselIds, System.Collections.Generic.List<decimal> amounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_運航費保存", ReplyAction="http://tempuri.org/IService/BLC_運航費保存Response")]
        bool BLC_運航費保存(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year, NBaseData.DAC.BgUnkouhi unkouhi, bool doCopy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_運航費保存", ReplyAction="http://tempuri.org/IService/BLC_運航費保存Response")]
        System.Threading.Tasks.Task<bool> BLC_運航費保存Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year, NBaseData.DAC.BgUnkouhi unkouhi, bool doCopy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_修繕費保存", ReplyAction="http://tempuri.org/IService/BLC_修繕費保存Response")]
        bool BLC_修繕費保存(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem> uchiwakeYosanItems, NBaseData.DAC.BgYosanBikou yosanBikou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_修繕費保存", ReplyAction="http://tempuri.org/IService/BLC_修繕費保存Response")]
        System.Threading.Tasks.Task<bool> BLC_修繕費保存Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem> uchiwakeYosanItems, NBaseData.DAC.BgYosanBikou yosanBikou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_実績取込", ReplyAction="http://tempuri.org/IService/BLC_実績取込Response")]
        bool BLC_実績取込(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_実績取込", ReplyAction="http://tempuri.org/IService/BLC_実績取込Response")]
        System.Threading.Tasks.Task<bool> BLC_実績取込Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_概算計上一覧Row_SearchRecords", ReplyAction="http://tempuri.org/IService/BLC_概算計上一覧Row_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row> BLC_概算計上一覧Row_SearchRecords(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_概算計上一覧Row_SearchRecords", ReplyAction="http://tempuri.org/IService/BLC_概算計上一覧Row_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row>> BLC_概算計上一覧Row_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel概算計上一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel概算計上一覧_取得Response")]
        byte[] BLC_Excel概算計上一覧_取得(NBaseData.DAC.MsUser loginUser, int year, int month, System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row> rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel概算計上一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel概算計上一覧_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel概算計上一覧_取得Async(NBaseData.DAC.MsUser loginUser, int year, int month, System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row> rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC概算計上処理_実行", ReplyAction="http://tempuri.org/IService/BLC概算計上処理_実行Response")]
        bool BLC概算計上処理_実行(NBaseData.DAC.MsUser loginUser, string YearMonth, System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo> odGaisanKeijos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC概算計上処理_実行", ReplyAction="http://tempuri.org/IService/BLC概算計上処理_実行Response")]
        System.Threading.Tasks.Task<bool> BLC概算計上処理_実行Async(NBaseData.DAC.MsUser loginUser, string YearMonth, System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo> odGaisanKeijos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excelランニング管理表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excelランニング管理表_取得Response")]
        byte[] BLC_Excelランニング管理表_取得(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excelランニング管理表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excelランニング管理表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excelランニング管理表_取得Async(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_支払更新処理_新規Response")]
        bool BLC_支払更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_支払更新処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_支払更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_支払更新処理_更新Response")]
        bool BLC_支払更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> newOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> chgOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> delOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> newOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> chgOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> delOdShrShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_支払更新処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_支払更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> newOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> chgOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> delOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> newOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> chgOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> delOdShrShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払更新処理_落成", ReplyAction="http://tempuri.org/IService/BLC_支払更新処理_落成Response")]
        bool BLC_支払更新処理_落成(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr_R, NBaseData.DAC.OdShr OdShr_S, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払更新処理_落成", ReplyAction="http://tempuri.org/IService/BLC_支払更新処理_落成Response")]
        System.Threading.Tasks.Task<bool> BLC_支払更新処理_落成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr_R, NBaseData.DAC.OdShr OdShr_S, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_注文書_準備", ReplyAction="http://tempuri.org/IService/BLC_注文書_準備Response")]
        bool BLC_注文書_準備(NBaseData.DAC.MsUser loginUser, string odMkId, string telNo, string faxNo, System.DateTime nouki, string okurisaki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_注文書_準備", ReplyAction="http://tempuri.org/IService/BLC_注文書_準備Response")]
        System.Threading.Tasks.Task<bool> BLC_注文書_準備Async(NBaseData.DAC.MsUser loginUser, string odMkId, string telNo, string faxNo, System.DateTime nouki, string okurisaki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_PDF注文書_取得", ReplyAction="http://tempuri.org/IService/BLC_PDF注文書_取得Response")]
        byte[] BLC_PDF注文書_取得(string odMkId, string telNo, string faxNo, string headerBikou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_PDF注文書_取得", ReplyAction="http://tempuri.org/IService/BLC_PDF注文書_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_PDF注文書_取得Async(string odMkId, string telNo, string faxNo, string headerBikou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配状況変更_受領済", ReplyAction="http://tempuri.org/IService/BLC_手配状況変更_受領済Response")]
        bool BLC_手配状況変更_受領済(NBaseData.DAC.MsUser loginUser, string OdJryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配状況変更_受領済", ReplyAction="http://tempuri.org/IService/BLC_手配状況変更_受領済Response")]
        System.Threading.Tasks.Task<bool> BLC_手配状況変更_受領済Async(NBaseData.DAC.MsUser loginUser, string OdJryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規見積依頼処理_新規", ReplyAction="http://tempuri.org/IService/BLC_新規見積依頼処理_新規Response")]
        bool BLC_新規見積依頼処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> OdAttachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規見積依頼処理_新規", ReplyAction="http://tempuri.org/IService/BLC_新規見積依頼処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_新規見積依頼処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> OdAttachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_受領更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_受領更新処理_新規Response")]
        bool BLC_受領更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_受領更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_受領更新処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_受領更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_受領更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_受領更新処理_更新Response")]
        bool BLC_受領更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> newOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> chgOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> delOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> newOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> chgOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> delOdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_受領更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_受領更新処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_受領更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> newOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> chgOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> delOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> newOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> chgOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> delOdJryShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel船用品発注管理表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel船用品発注管理表_取得Response")]
        byte[] BLC_Excel船用品発注管理表_取得(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel船用品発注管理表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel船用品発注管理表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel船用品発注管理表_取得Async(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_PDF見積り依頼書_取得", ReplyAction="http://tempuri.org/IService/BLC_PDF見積り依頼書_取得Response")]
        byte[] BLC_PDF見積り依頼書_取得(string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_PDF見積り依頼書_取得", ReplyAction="http://tempuri.org/IService/BLC_PDF見積り依頼書_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_PDF見積り依頼書_取得Async(string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積依頼メール送信", ReplyAction="http://tempuri.org/IService/BLC_見積依頼メール送信Response")]
        ServiceReferences.NBaseService.BLC_見積依頼メール送信Response BLC_見積依頼メール送信(ServiceReferences.NBaseService.BLC_見積依頼メール送信Request request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積依頼メール送信", ReplyAction="http://tempuri.org/IService/BLC_見積依頼メール送信Response")]
        System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_見積依頼メール送信Response> BLC_見積依頼メール送信Async(ServiceReferences.NBaseService.BLC_見積依頼メール送信Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信_同期用", ReplyAction="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信_同期用Response")]
        bool BLC_燃料_潤滑油メール送信_同期用(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信_同期用", ReplyAction="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信_同期用Response")]
        System.Threading.Tasks.Task<bool> BLC_燃料_潤滑油メール送信_同期用Async(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信", ReplyAction="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信Response")]
        ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Response BLC_燃料_潤滑油メール送信(ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Request request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信", ReplyAction="http://tempuri.org/IService/BLC_燃料_潤滑油メール送信Response")]
        System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Response> BLC_燃料_潤滑油メール送信Async(ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配依頼メール送信_同期用", ReplyAction="http://tempuri.org/IService/BLC_手配依頼メール送信_同期用Response")]
        bool BLC_手配依頼メール送信_同期用(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配依頼メール送信_同期用", ReplyAction="http://tempuri.org/IService/BLC_手配依頼メール送信_同期用Response")]
        System.Threading.Tasks.Task<bool> BLC_手配依頼メール送信_同期用Async(NBaseData.DAC.MsUser loginUser, string odThiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_燃料_潤滑油以外メール送信", ReplyAction="http://tempuri.org/IService/BLC_燃料_潤滑油以外メール送信Response")]
        ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Response BLC_燃料_潤滑油以外メール送信(ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Request request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_燃料_潤滑油以外メール送信", ReplyAction="http://tempuri.org/IService/BLC_燃料_潤滑油以外メール送信Response")]
        System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Response> BLC_燃料_潤滑油以外メール送信Async(ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積回答更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_見積回答更新処理_新規Response")]
        bool BLC_見積回答更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積回答更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_見積回答更新処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_見積回答更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積回答更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_見積回答更新処理_更新Response")]
        bool BLC_見積回答更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> newOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> chgOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> delOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> newOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> chgOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> delOdMkShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積回答更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_見積回答更新処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_見積回答更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> newOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> chgOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> delOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> newOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> chgOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> delOdMkShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積依頼更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_見積依頼更新処理_新規Response")]
        bool BLC_見積依頼更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm, System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItems, System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積依頼更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_見積依頼更新処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_見積依頼更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm, System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItems, System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積依頼更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_見積依頼更新処理_更新Response")]
        bool BLC_見積依頼更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積依頼更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_見積依頼更新処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_見積依頼更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ユーザ情報更新処理_新規作成", ReplyAction="http://tempuri.org/IService/BLC_ユーザ情報更新処理_新規作成Response")]
        bool BLC_ユーザ情報更新処理_新規作成(NBaseData.DAC.MsUser loingUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ユーザ情報更新処理_新規作成", ReplyAction="http://tempuri.org/IService/BLC_ユーザ情報更新処理_新規作成Response")]
        System.Threading.Tasks.Task<bool> BLC_ユーザ情報更新処理_新規作成Async(NBaseData.DAC.MsUser loingUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ユーザ情報更新処理_削除", ReplyAction="http://tempuri.org/IService/BLC_ユーザ情報更新処理_削除Response")]
        bool BLC_ユーザ情報更新処理_削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ユーザ情報更新処理_削除", ReplyAction="http://tempuri.org/IService/BLC_ユーザ情報更新処理_削除Response")]
        System.Threading.Tasks.Task<bool> BLC_ユーザ情報更新処理_削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ユーザ情報更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_ユーザ情報更新処理_更新Response")]
        bool BLC_ユーザ情報更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ユーザ情報更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_ユーザ情報更新処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_ユーザ情報更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ログイン処理_ログインチェック", ReplyAction="http://tempuri.org/IService/BLC_ログイン処理_ログインチェックResponse")]
        NBaseData.DAC.MsUser BLC_ログイン処理_ログインチェック(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_ログイン処理_ログインチェック", ReplyAction="http://tempuri.org/IService/BLC_ログイン処理_ログインチェックResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsUser> BLC_ログイン処理_ログインチェックAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配依頼更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_手配依頼更新処理_新規Response")]
        bool BLC_手配依頼更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> newOdAttachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配依頼更新処理_新規", ReplyAction="http://tempuri.org/IService/BLC_手配依頼更新処理_新規Response")]
        System.Threading.Tasks.Task<bool> BLC_手配依頼更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> newOdAttachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配依頼更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_手配依頼更新処理_更新Response")]
        bool BLC_手配依頼更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> chgOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> delOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> chgOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> delOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> odAttachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_手配依頼更新処理_更新", ReplyAction="http://tempuri.org/IService/BLC_手配依頼更新処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_手配依頼更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> chgOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> delOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> chgOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> delOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> odAttachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品年間管理表_潤滑油受入_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品年間管理表_潤滑油受入_取得Response")]
        System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ> BLC_貯蔵品年間管理表_潤滑油受入_取得(NBaseData.DAC.MsUser loginUser, int msVesselId, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品年間管理表_潤滑油受入_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品年間管理表_潤滑油受入_取得Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ>> BLC_貯蔵品年間管理表_潤滑油受入_取得Async(NBaseData.DAC.MsUser loginUser, int msVesselId, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品年間管理表_船用品受入_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品年間管理表_船用品受入_取得Response")]
        System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ> BLC_貯蔵品年間管理表_船用品受入_取得(NBaseData.DAC.MsUser loginUser, int msVesselId, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品年間管理表_船用品受入_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品年間管理表_船用品受入_取得Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ>> BLC_貯蔵品年間管理表_船用品受入_取得Async(NBaseData.DAC.MsUser loginUser, int msVesselId, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品詳細保存処理", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品詳細保存処理Response")]
        bool BLC_貯蔵品詳細保存処理(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> savelist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品詳細保存処理", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品詳細保存処理Response")]
        System.Threading.Tasks.Task<bool> BLC_貯蔵品詳細保存処理Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> savelist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_講習管理_検索", ReplyAction="http://tempuri.org/IService/BLC_講習管理_検索Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiKoushu> BLC_講習管理_検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_講習管理_検索", ReplyAction="http://tempuri.org/IService/BLC_講習管理_検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKoushu>> BLC_講習管理_検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_講習一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_講習一覧出力Response")]
        byte[] BLC_Excel_講習一覧出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_講習一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_講習一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_講習一覧出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_未受講者一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_未受講者一覧出力Response")]
        byte[] BLC_Excel_未受講者一覧出力(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_未受講者一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_未受講者一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_未受講者一覧出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貨物マスタ更新処理_追加処理", ReplyAction="http://tempuri.org/IService/BLC_貨物マスタ更新処理_追加処理Response")]
        bool BLC_貨物マスタ更新処理_追加処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貨物マスタ更新処理_追加処理", ReplyAction="http://tempuri.org/IService/BLC_貨物マスタ更新処理_追加処理Response")]
        System.Threading.Tasks.Task<bool> BLC_貨物マスタ更新処理_追加処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貨物マスタ更新処理_更新処理", ReplyAction="http://tempuri.org/IService/BLC_貨物マスタ更新処理_更新処理Response")]
        bool BLC_貨物マスタ更新処理_更新処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貨物マスタ更新処理_更新処理", ReplyAction="http://tempuri.org/IService/BLC_貨物マスタ更新処理_更新処理Response")]
        System.Threading.Tasks.Task<bool> BLC_貨物マスタ更新処理_更新処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_乗船資格_GetRecords", ReplyAction="http://tempuri.org/IService/BLC_乗船資格_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.MsVesselRankLicense> BLC_乗船資格_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_乗船資格_GetRecords", ReplyAction="http://tempuri.org/IService/BLC_乗船資格_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselRankLicense>> BLC_乗船資格_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_乗船資格_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BLC_乗船資格_InsertOrUpdateResponse")]
        bool BLC_乗船資格_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselRankLicense info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_乗船資格_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BLC_乗船資格_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> BLC_乗船資格_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselRankLicense info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_下船者検索", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_下船者検索Response")]
        System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション> BLC_配乗シミュレーション_下船者検索(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, bool personalScheduleCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_下船者検索", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_下船者検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション>> BLC_配乗シミュレーション_下船者検索Async(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, bool personalScheduleCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_乗船者検索", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_乗船者検索Response")]
        System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション> BLC_配乗シミュレーション_乗船者検索(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, System.Collections.Generic.List<int> shubetsuIds, bool vesselCheck, bool shokumeiCheck, bool menjouCheck, bool koushuCheck, bool personalScheduleCheck, bool fellowPassengersCheck, bool experienceCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_乗船者検索", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_乗船者検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション>> BLC_配乗シミュレーション_乗船者検索Async(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, System.Collections.Generic.List<int> shubetsuIds, bool vesselCheck, bool shokumeiCheck, bool menjouCheck, bool koushuCheck, bool personalScheduleCheck, bool fellowPassengersCheck, bool experienceCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者決定", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者決定Response")]
        NBaseData.DAC.SiBoardingSchedule BLC_配乗シミュレーション_交代者決定(NBaseData.DAC.MsUser loginUser, System.DateTime signOnDate, string signOffSiCardId, int vesselId, int shokumeiId, int signOnCrewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者決定", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者決定Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiBoardingSchedule> BLC_配乗シミュレーション_交代者決定Async(NBaseData.DAC.MsUser loginUser, System.DateTime signOnDate, string signOffSiCardId, int vesselId, int shokumeiId, int signOnCrewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者解除", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者解除Response")]
        bool BLC_配乗シミュレーション_交代者解除(NBaseData.DAC.MsUser loginUser, string boardingScheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者解除", ReplyAction="http://tempuri.org/IService/BLC_配乗シミュレーション_交代者解除Response")]
        System.Threading.Tasks.Task<bool> BLC_配乗シミュレーション_交代者解除Async(NBaseData.DAC.MsUser loginUser, string boardingScheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchRevision", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchRevisionResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>> BLC_配乗計画_SearchRevision(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchRevision", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchRevisionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>>> BLC_配乗計画_SearchRevisionAsync(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchRevisions", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchRevisionsResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>> BLC_配乗計画_SearchRevisions(NBaseData.DAC.MsUser loginUser, System.DateTime date1, System.DateTime date2, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchRevisions", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchRevisionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>>> BLC_配乗計画_SearchRevisionsAsync(NBaseData.DAC.MsUser loginUser, System.DateTime date1, System.DateTime date2, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchPlan", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchPlanResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCardPlan> BLC_配乗計画_SearchPlan(NBaseData.DAC.MsUser loginUser, System.DateTime startdate, System.DateTime enddate, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchPlan", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchPlanResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlan>> BLC_配乗計画_SearchPlanAsync(NBaseData.DAC.MsUser loginUser, System.DateTime startdate, System.DateTime enddate, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchPlanByHeder", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchPlanByHederResponse")]
        System.Collections.Generic.List<NBaseData.DAC.SiCardPlan> BLC_配乗計画_SearchPlanByHeder(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlanHead head, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_SearchPlanByHeder", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_SearchPlanByHederResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlan>> BLC_配乗計画_SearchPlanByHederAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlanHead head, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_GetMsSenin", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_GetMsSeninResponse")]
        NBaseData.DAC.MsSenin BLC_配乗計画_GetMsSenin(NBaseData.DAC.MsUser loginUser, string cardID, bool isPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_GetMsSenin", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_GetMsSeninResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSenin> BLC_配乗計画_GetMsSeninAsync(NBaseData.DAC.MsUser loginUser, string cardID, bool isPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_RevisionUp", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_RevisionUpResponse")]
        bool BLC_配乗計画_RevisionUp(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_RevisionUp", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_RevisionUpResponse")]
        System.Threading.Tasks.Task<bool> BLC_配乗計画_RevisionUpAsync(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Shime", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_ShimeResponse")]
        bool BLC_配乗計画_Shime(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Shime", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_ShimeResponse")]
        System.Threading.Tasks.Task<bool> BLC_配乗計画_ShimeAsync(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_CheckValidate", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_CheckValidateResponse")]
        string BLC_配乗計画_CheckValidate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime startdate, int pmstart, System.DateTime enddate, int pmend, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_CheckValidate", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_CheckValidateResponse")]
        System.Threading.Tasks.Task<string> BLC_配乗計画_CheckValidateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime startdate, int pmstart, System.DateTime enddate, int pmend, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Check交代者予定", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_Check交代者予定Response")]
        bool BLC_配乗計画_Check交代者予定(NBaseData.DAC.MsUser loginUser, string repracementID, NBaseData.DAC.MsSenin senin, System.DateTime startdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Check交代者予定", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_Check交代者予定Response")]
        System.Threading.Tasks.Task<bool> BLC_配乗計画_Check交代者予定Async(NBaseData.DAC.MsUser loginUser, string repracementID, NBaseData.DAC.MsSenin senin, System.DateTime startdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Is交代乗船", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_Is交代乗船Response")]
        bool BLC_配乗計画_Is交代乗船(NBaseData.DAC.MsUser loginUser, string planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Is交代乗船", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_Is交代乗船Response")]
        System.Threading.Tasks.Task<bool> BLC_配乗計画_Is交代乗船Async(NBaseData.DAC.MsUser loginUser, string planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_InsertOrUpdateResponse")]
        NBaseData.DAC.SiCardPlan BLC_配乗計画_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime dt, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiCardPlan> BLC_配乗計画_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime dt, int vessel_kind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Delete", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_DeleteResponse")]
        NBaseData.DAC.SiCardPlan BLC_配乗計画_Delete(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗計画_Delete", ReplyAction="http://tempuri.org/IService/BLC_配乗計画_DeleteResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiCardPlan> BLC_配乗計画_DeleteAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_配乗計画表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_配乗計画表出力Response")]
        byte[] BLC_Excel_配乗計画表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_配乗計画表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_配乗計画表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_配乗計画表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_配乗計画表内航乗下船出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_配乗計画表内航乗下船出力Response")]
        byte[] BLC_Excel_配乗計画表内航乗下船出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_配乗計画表内航乗下船出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_配乗計画表内航乗下船出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_配乗計画表内航乗下船出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgHankanhi_GetRecordByYosanHeadIDYear", ReplyAction="http://tempuri.org/IService/BgHankanhi_GetRecordByYosanHeadIDYearResponse")]
        NBaseData.DAC.BgHankanhi BgHankanhi_GetRecordByYosanHeadIDYear(NBaseData.DAC.MsUser loginUser, int headid, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgHankanhi_GetRecordByYosanHeadIDYear", ReplyAction="http://tempuri.org/IService/BgHankanhi_GetRecordByYosanHeadIDYearResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgHankanhi> BgHankanhi_GetRecordByYosanHeadIDYearAsync(NBaseData.DAC.MsUser loginUser, int headid, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgHankanhi_InsertRecord", ReplyAction="http://tempuri.org/IService/BgHankanhi_InsertRecordResponse")]
        bool BgHankanhi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgHankanhi_InsertRecord", ReplyAction="http://tempuri.org/IService/BgHankanhi_InsertRecordResponse")]
        System.Threading.Tasks.Task<bool> BgHankanhi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgHankanhi_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgHankanhi_UpdateRecordResponse")]
        bool BgHankanhi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgHankanhi_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgHankanhi_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> BgHankanhi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_船", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_船Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_年単位_船(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_船", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_船Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_年単位_船Async(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_船", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_船Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_月単位_船(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_船", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_船Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_月単位_船Async(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_全社", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_全社Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_年単位_全社(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_全社", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_全社Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_年単位_全社Async(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_グループ", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_グループResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_年単位_グループ(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_グループ", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_年単位_グループResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_年単位_グループAsync(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodBumonHimokus", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodBumonHimokusRespo" +
            "nse")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecordsByVesselTypePriodBumonHimokus(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end, int bumonid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodBumonHimokus", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodBumonHimokusRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecordsByVesselTypePriodBumonHimokusAsync(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end, int bumonid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodHimokus", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodHimokusResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecordsByVesselTypePriodHimokus(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodHimokus", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecordsByVesselTypePriodHimokusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecordsByVesselTypePriodHimokusAsync(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_グループ", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_グループResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_月単位_グループ(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_グループ", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_グループResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_月単位_グループAsync(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_全社", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_全社Response")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_月単位_全社(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_全社", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecords_月単位_全社Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_月単位_全社Async(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgJiseki_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgJiseki_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselID", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDRes" +
            "ponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselID(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselID", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAnd" +
            "YearRange", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAnd" +
            "YearRangeResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAndYearRange(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int yearStart, int yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAnd" +
            "YearRange", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAnd" +
            "YearRangeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAndYearRangeAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int yearStart, int yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser loginUser, int yosanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadAndYearRange", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadAndYearRangeRespon" +
            "se")]
        System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadAndYearRange(NBaseData.DAC.MsUser loginUser, int yosanhead, int yearStart, int yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadAndYearRange", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByYosanHeadAndYearRangeRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadAndYearRangeAsync(NBaseData.DAC.MsUser loginUser, int yosanhead, int yearStart, int yearEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_UpdateRecords", ReplyAction="http://tempuri.org/IService/BgKadouVessel_UpdateRecordsResponse")]
        bool BgKadouVessel_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_UpdateRecords", ReplyAction="http://tempuri.org/IService/BgKadouVessel_UpdateRecordsResponse")]
        System.Threading.Tasks.Task<bool> BgKadouVessel_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByMsVesselIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgKadouVessel_GetRecordsByMsVesselID", ReplyAction="http://tempuri.org/IService/BgKadouVessel_GetRecordsByMsVesselIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByYosanHeadIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou> BgNrkKanryou_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser msUser, int p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByYosanHeadIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou>> BgNrkKanryou_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser msUser, int p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgNrkKanryou_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgNrkKanryou_UpdateRecordResponse")]
        bool BgNrkKanryou_UpdateRecord(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgNrkKanryou k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgNrkKanryou_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgNrkKanryou_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> BgNrkKanryou_UpdateRecordAsync(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgNrkKanryou k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByMsUserIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou> BgNrkKanryou_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByMsUserID", ReplyAction="http://tempuri.org/IService/BgNrkKanryou_GetRecordsByMsUserIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou>> BgNrkKanryou_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgRate_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgRate_GetRecordsByYosanHeadIDResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgRate> BgRate_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser loginUser, int yosanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgRate_GetRecordsByYosanHeadID", ReplyAction="http://tempuri.org/IService/BgRate_GetRecordsByYosanHeadIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgRate>> BgRate_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgRate_UpdateRecords", ReplyAction="http://tempuri.org/IService/BgRate_UpdateRecordsResponse")]
        bool BgRate_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgRate> rates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgRate_UpdateRecords", ReplyAction="http://tempuri.org/IService/BgRate_UpdateRecordsResponse")]
        System.Threading.Tasks.Task<bool> BgRate_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgRate> rates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecords", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordsResponse")]
        System.Collections.Generic.List<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecords(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecords", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanHead>> BgYosanHead_GetRecordsAsync(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecord", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordResponse")]
        NBaseData.DAC.BgYosanHead BgYosanHead_GetRecord(NBaseData.DAC.MsUser loginUser, int yosanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecord", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgYosanHead_UpdateRecordResponse")]
        bool BgYosanHead_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_UpdateRecord", ReplyAction="http://tempuri.org/IService/BgYosanHead_UpdateRecordResponse")]
        System.Threading.Tasks.Task<bool> BgYosanHead_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecordByYear", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordByYearResponse")]
        NBaseData.DAC.BgYosanHead BgYosanHead_GetRecordByYear(NBaseData.DAC.MsUser loginUser, string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecordByYear", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecordByYearResponse")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecordByYearAsync(NBaseData.DAC.MsUser loginUser, string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecord_直近", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecord_直近Response")]
        NBaseData.DAC.BgYosanHead BgYosanHead_GetRecord_直近(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BgYosanHead_GetRecord_直近", ReplyAction="http://tempuri.org/IService/BgYosanHead_GetRecord_直近Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecord_直近Async(NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_90日前_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_90日前_登録Response")]
        bool Alarm処理_検査証書_検査_90日前_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_90日前_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_90日前_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_90日前_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_180日前_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_180日前_登録Response")]
        bool Alarm処理_検査証書_検査_180日前_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_180日前_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_180日前_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_180日前_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_登録Response")]
        bool Alarm処理_検査証書_検査_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_更新Response")]
        bool Alarm処理_検査証書_検査_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_更新Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_停止Response")]
        bool Alarm処理_検査証書_検査_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_停止Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_削除Response")]
        bool Alarm処理_検査証書_検査_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検査_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検査_削除Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_登録Response")]
        bool Alarm処理_検査証書_証書_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_更新Response")]
        bool Alarm処理_検査証書_証書_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_更新Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_停止Response")]
        bool Alarm処理_検査証書_証書_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_停止Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_削除Response")]
        bool Alarm処理_検査証書_証書_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_証書_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_証書_削除Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_登録Response")]
        bool Alarm処理_検査証書_審査_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_更新Response")]
        bool Alarm処理_検査証書_審査_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_更新Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_停止Response")]
        bool Alarm処理_検査証書_審査_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_停止Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_削除Response")]
        bool Alarm処理_検査証書_審査_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_審査_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_審査_削除Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_登録Response")]
        bool Alarm処理_検査証書_救命設備_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_更新Response")]
        bool Alarm処理_検査証書_救命設備_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_更新Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_停止Response")]
        bool Alarm処理_検査証書_救命設備_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_停止Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_削除Response")]
        bool Alarm処理_検査証書_救命設備_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_救命設備_削除Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_登録Response")]
        bool Alarm処理_検査証書_荷役安全設備_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_更新Response")]
        bool Alarm処理_検査証書_荷役安全設備_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_更新Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_停止Response")]
        bool Alarm処理_検査証書_荷役安全設備_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_停止Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_削除Response")]
        bool Alarm処理_検査証書_荷役安全設備_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_荷役安全設備_削除Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_登録Response")]
        bool Alarm処理_検査証書_検船_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_登録", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_登録Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_更新Response")]
        bool Alarm処理_検査証書_検船_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_更新", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_更新Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_停止Response")]
        bool Alarm処理_検査証書_検船_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_停止", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_停止Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_削除Response")]
        bool Alarm処理_検査証書_検船_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Alarm処理_検査証書_検船_削除", ReplyAction="http://tempuri.org/IService/Alarm処理_検査証書_検船_削除Response")]
        System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_GetUserListSetting", ReplyAction="http://tempuri.org/IService/BLC_GetUserListSettingResponse")]
        System.Collections.Generic.List<NBaseData.DAC.UserListItems> BLC_GetUserListSetting(NBaseData.DAC.MsUser loginUser, int kind, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_GetUserListSetting", ReplyAction="http://tempuri.org/IService/BLC_GetUserListSettingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.UserListItems>> BLC_GetUserListSettingAsync(NBaseData.DAC.MsUser loginUser, int kind, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_RegistUserListSetting", ReplyAction="http://tempuri.org/IService/BLC_RegistUserListSettingResponse")]
        bool BLC_RegistUserListSetting(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.UserListItems> userListItemsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_RegistUserListSetting", ReplyAction="http://tempuri.org/IService/BLC_RegistUserListSettingResponse")]
        System.Threading.Tasks.Task<bool> BLC_RegistUserListSettingAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.UserListItems> userListItemsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_手当一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_手当一覧出力Response")]
        byte[] BLC_Excel_手当一覧出力(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_手当一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_手当一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_手当一覧出力Async(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_手当支給依頼書出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_手当支給依頼書出力Response")]
        byte[] BLC_Excel_手当支給依頼書出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_手当支給依頼書出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_手当支給依頼書出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_手当支給依頼書出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_手当帳票出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_手当帳票出力Response")]
        byte[] BLC_Excel_手当帳票出力(NBaseData.DAC.MsUser loginUser, System.DateTime ym);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_手当帳票出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_手当帳票出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_手当帳票出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime ym);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorks", ReplyAction="http://tempuri.org/IService/GetWorksResponse")]
        System.Collections.Generic.List<WtmModelBase.Work> GetWorks(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorks", ReplyAction="http://tempuri.org/IService/GetWorksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.Work>> GetWorksAsync(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBeInWork", ReplyAction="http://tempuri.org/IService/GetBeInWorkResponse")]
        WtmModelBase.Work GetBeInWork(string connectionKey, int seninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBeInWork", ReplyAction="http://tempuri.org/IService/GetBeInWorkResponse")]
        System.Threading.Tasks.Task<WtmModelBase.Work> GetBeInWorkAsync(string connectionKey, int seninId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBeInWorks", ReplyAction="http://tempuri.org/IService/GetBeInWorksResponse")]
        System.Collections.Generic.List<WtmModelBase.Work> GetBeInWorks(string connectionKey, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBeInWorks", ReplyAction="http://tempuri.org/IService/GetBeInWorksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.Work>> GetBeInWorksAsync(string connectionKey, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorkSummaries", ReplyAction="http://tempuri.org/IService/GetWorkSummariesResponse")]
        System.Collections.Generic.List<WtmModelBase.WorkSummary> GetWorkSummaries(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorkSummaries", ReplyAction="http://tempuri.org/IService/GetWorkSummariesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.WorkSummary>> GetWorkSummariesAsync(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StartWork", ReplyAction="http://tempuri.org/IService/StartWorkResponse")]
        bool StartWork(string connectionKey, int vesselId, int seninId, System.DateTime d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StartWork", ReplyAction="http://tempuri.org/IService/StartWorkResponse")]
        System.Threading.Tasks.Task<bool> StartWorkAsync(string connectionKey, int vesselId, int seninId, System.DateTime d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertWork", ReplyAction="http://tempuri.org/IService/InsertWorkResponse")]
        bool InsertWork(string connectionKey, WtmModelBase.Work w);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertWork", ReplyAction="http://tempuri.org/IService/InsertWorkResponse")]
        System.Threading.Tasks.Task<bool> InsertWorkAsync(string connectionKey, WtmModelBase.Work w);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FinshWork", ReplyAction="http://tempuri.org/IService/FinshWorkResponse")]
        bool FinshWork(string connectionKey, WtmModelBase.Work w);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FinshWork", ReplyAction="http://tempuri.org/IService/FinshWorkResponse")]
        System.Threading.Tasks.Task<bool> FinshWorkAsync(string connectionKey, WtmModelBase.Work w);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteWork", ReplyAction="http://tempuri.org/IService/DeleteWorkResponse")]
        bool DeleteWork(string connectionKey, WtmModelBase.Work w);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteWork", ReplyAction="http://tempuri.org/IService/DeleteWorkResponse")]
        System.Threading.Tasks.Task<bool> DeleteWorkAsync(string connectionKey, WtmModelBase.Work w);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditWork", ReplyAction="http://tempuri.org/IService/EditWorkResponse")]
        bool EditWork(string connectionKey, WtmModelBase.Work delWork, [System.ServiceModel.MessageParameterAttribute(Name="editWork")] WtmModelBase.Work editWork1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditWork", ReplyAction="http://tempuri.org/IService/EditWorkResponse")]
        System.Threading.Tasks.Task<bool> EditWorkAsync(string connectionKey, WtmModelBase.Work delWork, WtmModelBase.Work editWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CanCopyWork", ReplyAction="http://tempuri.org/IService/CanCopyWorkResponse")]
        ServiceReferences.NBaseService.CanCopyWorkResponse CanCopyWork(ServiceReferences.NBaseService.CanCopyWorkRequest request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CanCopyWork", ReplyAction="http://tempuri.org/IService/CanCopyWorkResponse")]
        System.Threading.Tasks.Task<ServiceReferences.NBaseService.CanCopyWorkResponse> CanCopyWorkAsync(ServiceReferences.NBaseService.CanCopyWorkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CopyWork", ReplyAction="http://tempuri.org/IService/CopyWorkResponse")]
        bool CopyWork(string connectionKey, WtmModelBase.Work w, System.Collections.Generic.List<int> seninIds, System.DateTime fromDay, System.DateTime toDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CopyWork", ReplyAction="http://tempuri.org/IService/CopyWorkResponse")]
        System.Threading.Tasks.Task<bool> CopyWorkAsync(string connectionKey, WtmModelBase.Work w, System.Collections.Generic.List<int> seninIds, System.DateTime fromDay, System.DateTime toDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSetting", ReplyAction="http://tempuri.org/IService/GetSettingResponse")]
        WtmModelBase.Setting GetSetting(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSetting", ReplyAction="http://tempuri.org/IService/GetSettingResponse")]
        System.Threading.Tasks.Task<WtmModelBase.Setting> GetSettingAsync(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorkContents", ReplyAction="http://tempuri.org/IService/GetWorkContentsResponse")]
        System.Collections.Generic.List<WtmModelBase.WorkContent> GetWorkContents(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorkContents", ReplyAction="http://tempuri.org/IService/GetWorkContentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.WorkContent>> GetWorkContentsAsync(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRankCategories", ReplyAction="http://tempuri.org/IService/GetRankCategoriesResponse")]
        System.Collections.Generic.List<WtmModelBase.RankCategory> GetRankCategories(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRankCategories", ReplyAction="http://tempuri.org/IService/GetRankCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.RankCategory>> GetRankCategoriesAsync(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoles", ReplyAction="http://tempuri.org/IService/GetRolesResponse")]
        System.Collections.Generic.List<WtmModelBase.Role> GetRoles(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoles", ReplyAction="http://tempuri.org/IService/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.Role>> GetRolesAsync(string connectionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVesselMovementDispRecord", ReplyAction="http://tempuri.org/IService/GetVesselMovementDispRecordResponse")]
        System.Collections.Generic.List<WtmModelBase.VesselMovement> GetVesselMovementDispRecord(string connectionKey, System.DateTime date1, System.DateTime date2, int vesselid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVesselMovementDispRecord", ReplyAction="http://tempuri.org/IService/GetVesselMovementDispRecordResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.VesselMovement>> GetVesselMovementDispRecordAsync(string connectionKey, System.DateTime date1, System.DateTime date2, int vesselid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertUpdateVesselMovement", ReplyAction="http://tempuri.org/IService/InsertUpdateVesselMovementResponse")]
        bool InsertUpdateVesselMovement(string connectionKey, WtmModelBase.VesselMovement vm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertUpdateVesselMovement", ReplyAction="http://tempuri.org/IService/InsertUpdateVesselMovementResponse")]
        System.Threading.Tasks.Task<bool> InsertUpdateVesselMovementAsync(string connectionKey, WtmModelBase.VesselMovement vm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVesselApprovalMonth", ReplyAction="http://tempuri.org/IService/GetVesselApprovalMonthResponse")]
        WtmModelBase.VesselApprovalMonth GetVesselApprovalMonth(string connectionKey, int vesselId, System.DateTime approvalMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVesselApprovalMonth", ReplyAction="http://tempuri.org/IService/GetVesselApprovalMonthResponse")]
        System.Threading.Tasks.Task<WtmModelBase.VesselApprovalMonth> GetVesselApprovalMonthAsync(string connectionKey, int vesselId, System.DateTime approvalMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateApprovalMonth", ReplyAction="http://tempuri.org/IService/InsertOrUpdateApprovalMonthResponse")]
        bool InsertOrUpdateApprovalMonth(string connectionKey, int vesselId, int crewId, System.DateTime approvalMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateApprovalMonth", ReplyAction="http://tempuri.org/IService/InsertOrUpdateApprovalMonthResponse")]
        System.Threading.Tasks.Task<bool> InsertOrUpdateApprovalMonthAsync(string connectionKey, int vesselId, int crewId, System.DateTime approvalMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVesselApprovalDay", ReplyAction="http://tempuri.org/IService/GetVesselApprovalDayResponse")]
        System.Collections.Generic.List<WtmModelBase.VesselApprovalDay> GetVesselApprovalDay(string connectionKey, int vesselId, System.DateTime approvalDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVesselApprovalDay", ReplyAction="http://tempuri.org/IService/GetVesselApprovalDayResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.VesselApprovalDay>> GetVesselApprovalDayAsync(string connectionKey, int vesselId, System.DateTime approvalDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateApprovalDay", ReplyAction="http://tempuri.org/IService/InsertOrUpdateApprovalDayResponse")]
        int InsertOrUpdateApprovalDay(string connectionKey, int vesselId, System.DateTime approvalDay, int crewId, System.Collections.Generic.List<int> approvedCrewIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateApprovalDay", ReplyAction="http://tempuri.org/IService/InsertOrUpdateApprovalDayResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateApprovalDayAsync(string connectionKey, int vesselId, System.DateTime approvalDay, int crewId, System.Collections.Generic.List<int> approvedCrewIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteApprovalDay", ReplyAction="http://tempuri.org/IService/DeleteApprovalDayResponse")]
        bool DeleteApprovalDay(string connectionKey, int vesselId, System.DateTime approvalDay, int removeCrewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteApprovalDay", ReplyAction="http://tempuri.org/IService/DeleteApprovalDayResponse")]
        System.Threading.Tasks.Task<bool> DeleteApprovalDayAsync(string connectionKey, int vesselId, System.DateTime approvalDay, int removeCrewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSummaryTimes", ReplyAction="http://tempuri.org/IService/GetSummaryTimesResponse")]
        System.Collections.Generic.List<WtmModelBase.SummaryTimes> GetSummaryTimes(string connectionKey, int vesselId, System.DateTime summaryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSummaryTimes", ReplyAction="http://tempuri.org/IService/GetSummaryTimesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.SummaryTimes>> GetSummaryTimesAsync(string connectionKey, int vesselId, System.DateTime summaryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateSummaryTimes", ReplyAction="http://tempuri.org/IService/InsertOrUpdateSummaryTimesResponse")]
        bool InsertOrUpdateSummaryTimes(string connectionKey, int crewId, int vesselId, System.DateTime summaryDate, string allowanceTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateSummaryTimes", ReplyAction="http://tempuri.org/IService/InsertOrUpdateSummaryTimesResponse")]
        System.Threading.Tasks.Task<bool> InsertOrUpdateSummaryTimesAsync(string connectionKey, int crewId, int vesselId, System.DateTime summaryDate, string allowanceTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_個人予定一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_個人予定一覧表出力Response")]
        byte[] BLC_Excel_個人予定一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> personalScheduleList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_個人予定一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_個人予定一覧表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_個人予定一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> personalScheduleList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_乗り合わせ一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_乗り合わせ一覧表出力Response")]
        byte[] BLC_Excel_乗り合わせ一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> fellowPassengersList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_乗り合わせ一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_乗り合わせ一覧表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_乗り合わせ一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> fellowPassengersList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_顧客管理一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_顧客管理一覧表出力Response")]
        byte[] BLC_Excel_顧客管理一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsCustomer> customerList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_顧客管理一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_顧客管理一覧表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_顧客管理一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsCustomer> customerList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_報告書管理一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_報告書管理一覧表出力Response")]
        byte[] BLC_Excel_報告書管理一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> houkokushoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_報告書管理一覧表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_報告書管理一覧表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_報告書管理一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> houkokushoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静帳票_動静報告一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_動静帳票_動静報告一覧_取得Response")]
        byte[] BLC_動静帳票_動静報告一覧_取得(NBaseData.DAC.MsUser loginUser, System.DateTime date, System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku> houkokuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静帳票_動静報告一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_動静帳票_動静報告一覧_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_動静帳票_動静報告一覧_取得Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku> houkokuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_勤怠管理_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BLC_勤怠管理_InsertOrUpdateResponse")]
        bool BLC_勤怠管理_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiLaborManagementRecordBook recordBook, System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays> requireds, System.Collections.Generic.List<NBaseData.DAC.SiNightSetting> settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_勤怠管理_InsertOrUpdate", ReplyAction="http://tempuri.org/IService/BLC_勤怠管理_InsertOrUpdateResponse")]
        System.Threading.Tasks.Task<bool> BLC_勤怠管理_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiLaborManagementRecordBook recordBook, System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays> requireds, System.Collections.Generic.List<NBaseData.DAC.SiNightSetting> settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_労務管理記録簿出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_労務管理記録簿出力Response")]
        byte[] BLC_Excel_労務管理記録簿出力(string connectionKey, NBaseData.DAC.MsUser loginUser, int vesselId, int msSeninID, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_労務管理記録簿出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_労務管理記録簿出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_労務管理記録簿出力Async(string connectionKey, NBaseData.DAC.MsUser loginUser, int vesselId, int msSeninID, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給取得", ReplyAction="http://tempuri.org/IService/BLC_基本給取得Response")]
        NBaseData.DAC.MsSiSalary BLC_基本給取得(NBaseData.DAC.MsUser loginUser, int msSiSalaryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給取得", ReplyAction="http://tempuri.org/IService/BLC_基本給取得Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSiSalary> BLC_基本給取得Async(NBaseData.DAC.MsUser loginUser, int msSiSalaryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給登録", ReplyAction="http://tempuri.org/IService/BLC_基本給登録Response")]
        int BLC_基本給登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary salary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給登録", ReplyAction="http://tempuri.org/IService/BLC_基本給登録Response")]
        System.Threading.Tasks.Task<int> BLC_基本給登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary salary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給検索", ReplyAction="http://tempuri.org/IService/BLC_基本給検索Response")]
        NBaseData.DAC.MsSiSalary BLC_基本給検索(NBaseData.DAC.MsUser loginUser, int kubun, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給検索", ReplyAction="http://tempuri.org/IService/BLC_基本給検索Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.MsSiSalary> BLC_基本給検索Async(NBaseData.DAC.MsUser loginUser, int kubun, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給複製", ReplyAction="http://tempuri.org/IService/BLC_基本給複製Response")]
        bool BLC_基本給複製(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary prevSalary, NBaseData.DAC.MsSiSalary newSalary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_基本給複製", ReplyAction="http://tempuri.org/IService/BLC_基本給複製Response")]
        System.Threading.Tasks.Task<bool> BLC_基本給複製Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary prevSalary, NBaseData.DAC.MsSiSalary newSalary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_潤滑油登録", ReplyAction="http://tempuri.org/IService/BLC_潤滑油登録Response")]
        bool BLC_潤滑油登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_潤滑油登録", ReplyAction="http://tempuri.org/IService/BLC_潤滑油登録Response")]
        System.Threading.Tasks.Task<bool> BLC_潤滑油登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_KK船_種別変更", ReplyAction="http://tempuri.org/IService/BLC_KK船_種別変更Response")]
        bool BLC_KK船_種別変更(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi odThi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_KK船_種別変更", ReplyAction="http://tempuri.org/IService/BLC_KK船_種別変更Response")]
        System.Threading.Tasks.Task<bool> BLC_KK船_種別変更Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi odThi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_業者別支払実績帳票_取得", ReplyAction="http://tempuri.org/IService/BLC_業者別支払実績帳票_取得Response")]
        byte[] BLC_業者別支払実績帳票_取得(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_業者別支払実績帳票_取得", ReplyAction="http://tempuri.org/IService/BLC_業者別支払実績帳票_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_業者別支払実績帳票_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_区分_仕様型式編集", ReplyAction="http://tempuri.org/IService/BLC_区分_仕様型式編集Response")]
        bool BLC_区分_仕様型式編集(NBaseData.DAC.MsUser loginUser, string thiIraiNo, string msItemSbtId, int categoryNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_区分_仕様型式編集", ReplyAction="http://tempuri.org/IService/BLC_区分_仕様型式編集Response")]
        System.Threading.Tasks.Task<bool> BLC_区分_仕様型式編集Async(NBaseData.DAC.MsUser loginUser, string thiIraiNo, string msItemSbtId, int categoryNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_KK発注帳票_取得", ReplyAction="http://tempuri.org/IService/BLC_KK発注帳票_取得Response")]
        byte[] BLC_KK発注帳票_取得(NBaseData.DAC.MsUser loginUser, NBaseCommon.Hachu.Excel.発注帳票Common.kubun発注帳票 kubun, string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_KK発注帳票_取得", ReplyAction="http://tempuri.org/IService/BLC_KK発注帳票_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_KK発注帳票_取得Async(NBaseData.DAC.MsUser loginUser, NBaseCommon.Hachu.Excel.発注帳票Common.kubun発注帳票 kubun, string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船用品登録", ReplyAction="http://tempuri.org/IService/BLC_船用品登録Response")]
        bool BLC_船用品登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船用品登録", ReplyAction="http://tempuri.org/IService/BLC_船用品登録Response")]
        System.Threading.Tasks.Task<bool> BLC_船用品登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Get特定船用品在庫", ReplyAction="http://tempuri.org/IService/BLC_Get特定船用品在庫Response")]
        System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> BLC_Get特定船用品在庫(NBaseData.DAC.MsUser loginUser, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Get特定船用品在庫", ReplyAction="http://tempuri.org/IService/BLC_Get特定船用品在庫Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> BLC_Get特定船用品在庫Async(NBaseData.DAC.MsUser loginUser, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Get貯蔵品", ReplyAction="http://tempuri.org/IService/BLC_Get貯蔵品Response")]
        System.Collections.Generic.List<NBaseData.BLC.貯蔵品編集RowData> BLC_Get貯蔵品(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Get貯蔵品", ReplyAction="http://tempuri.org/IService/BLC_Get貯蔵品Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.貯蔵品編集RowData>> BLC_Get貯蔵品Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel貯蔵品管理表_出力", ReplyAction="http://tempuri.org/IService/BLC_Excel貯蔵品管理表_出力Response")]
        byte[] BLC_Excel貯蔵品管理表_出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel貯蔵品管理表_出力", ReplyAction="http://tempuri.org/IService/BLC_Excel貯蔵品管理表_出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel貯蔵品管理表_出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel貯蔵品年間管理表_出力", ReplyAction="http://tempuri.org/IService/BLC_Excel貯蔵品年間管理表_出力Response")]
        byte[] BLC_Excel貯蔵品年間管理表_出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel貯蔵品年間管理表_出力", ReplyAction="http://tempuri.org/IService/BLC_Excel貯蔵品年間管理表_出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel貯蔵品年間管理表_出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel未提出確認一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel未提出確認一覧_取得Response")]
        byte[] BLC_Excel未提出確認一覧_取得(NBaseData.DAC.MsUser loginUser, int businessYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel未提出確認一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel未提出確認一覧_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel未提出確認一覧_取得Async(NBaseData.DAC.MsUser loginUser, int businessYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC回覧終了処理_登録", ReplyAction="http://tempuri.org/IService/BLC回覧終了処理_登録Response")]
        bool BLC回覧終了処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo kanryoInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC回覧終了処理_登録", ReplyAction="http://tempuri.org/IService/BLC回覧終了処理_登録Response")]
        System.Threading.Tasks.Task<bool> BLC回覧終了処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo kanryoInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_コメント登録処理_登録", ReplyAction="http://tempuri.org/IService/BLC_コメント登録処理_登録Response")]
        bool BLC_コメント登録処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment docComment, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_コメント登録処理_登録", ReplyAction="http://tempuri.org/IService/BLC_コメント登録処理_登録Response")]
        System.Threading.Tasks.Task<bool> BLC_コメント登録処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment docComment, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_状況確認一覧Row_SearchRecords", ReplyAction="http://tempuri.org/IService/BLC_状況確認一覧Row_SearchRecordsResponse")]
        System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row> BLC_状況確認一覧Row_SearchRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<string> bunruiIds, System.Collections.Generic.List<string> shoubunruiIds, System.Collections.Generic.List<int> vesselIds, string bunshoNo, string bunshoName, string bikou, System.DateTime issueFrom, System.DateTime issueTo, int vesselId, int role, string bumonId, int status, bool isKanryo, string keywords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_状況確認一覧Row_SearchRecords", ReplyAction="http://tempuri.org/IService/BLC_状況確認一覧Row_SearchRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row>> BLC_状況確認一覧Row_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<string> bunruiIds, System.Collections.Generic.List<string> shoubunruiIds, System.Collections.Generic.List<int> vesselIds, string bunshoNo, string bunshoName, string bikou, System.DateTime issueFrom, System.DateTime issueTo, int vesselId, int role, string bumonId, int status, bool isKanryo, string keywords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel確認状況一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel確認状況一覧_取得Response")]
        byte[] BLC_Excel確認状況一覧_取得(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row> 状況確認一覧Rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel確認状況一覧_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel確認状況一覧_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel確認状況一覧_取得Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row> 状況確認一覧Rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_管理記録処理_登録", ReplyAction="http://tempuri.org/IService/BLC_管理記録処理_登録Response")]
        bool BLC_管理記録処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_管理記録処理_登録", ReplyAction="http://tempuri.org/IService/BLC_管理記録処理_登録Response")]
        System.Threading.Tasks.Task<bool> BLC_管理記録処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_管理記録処理_更新", ReplyAction="http://tempuri.org/IService/BLC_管理記録処理_更新Response")]
        bool BLC_管理記録処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_管理記録処理_更新", ReplyAction="http://tempuri.org/IService/BLC_管理記録処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_管理記録処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_公文書規則処理_登録", ReplyAction="http://tempuri.org/IService/BLC_公文書規則処理_登録Response")]
        bool BLC_公文書規則処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku koubunshoKisoku, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_公文書規則処理_登録", ReplyAction="http://tempuri.org/IService/BLC_公文書規則処理_登録Response")]
        System.Threading.Tasks.Task<bool> BLC_公文書規則処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku koubunshoKisoku, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_公文書規則処理_公開先更新", ReplyAction="http://tempuri.org/IService/BLC_公文書規則処理_公開先更新Response")]
        bool BLC_公文書規則処理_公開先更新(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_公文書規則処理_公開先更新", ReplyAction="http://tempuri.org/IService/BLC_公文書規則処理_公開先更新Response")]
        System.Threading.Tasks.Task<bool> BLC_公文書規則処理_公開先更新Async(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_報告書処理_登録", ReplyAction="http://tempuri.org/IService/BLC_報告書処理_登録Response")]
        bool BLC_報告書処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_報告書処理_登録", ReplyAction="http://tempuri.org/IService/BLC_報告書処理_登録Response")]
        System.Threading.Tasks.Task<bool> BLC_報告書処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_報告書処理_更新", ReplyAction="http://tempuri.org/IService/BLC_報告書処理_更新Response")]
        bool BLC_報告書処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_報告書処理_更新", ReplyAction="http://tempuri.org/IService/BLC_報告書処理_更新Response")]
        System.Threading.Tasks.Task<bool> BLC_報告書処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_報告書処理_削除", ReplyAction="http://tempuri.org/IService/BLC_報告書処理_削除Response")]
        bool BLC_報告書処理_削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_報告書処理_削除", ReplyAction="http://tempuri.org/IService/BLC_報告書処理_削除Response")]
        System.Threading.Tasks.Task<bool> BLC_報告書処理_削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静予定登録", ReplyAction="http://tempuri.org/IService/BLC_動静予定登録Response")]
        bool BLC_動静予定登録(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静予定登録", ReplyAction="http://tempuri.org/IService/BLC_動静予定登録Response")]
        System.Threading.Tasks.Task<bool> BLC_動静予定登録Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静予定削除", ReplyAction="http://tempuri.org/IService/BLC_動静予定削除Response")]
        bool BLC_動静予定削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo kanidousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静予定削除", ReplyAction="http://tempuri.org/IService/BLC_動静予定削除Response")]
        System.Threading.Tasks.Task<bool> BLC_動静予定削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo kanidousei);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静実績登録", ReplyAction="http://tempuri.org/IService/BLC_動静実績登録Response")]
        bool BLC_動静実績登録(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静実績登録", ReplyAction="http://tempuri.org/IService/BLC_動静実績登録Response")]
        System.Threading.Tasks.Task<bool> BLC_動静実績登録Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静報告メール送信_同期用", ReplyAction="http://tempuri.org/IService/BLC_動静報告メール送信_同期用Response")]
        bool BLC_動静報告メール送信_同期用(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_動静報告メール送信_同期用", ReplyAction="http://tempuri.org/IService/BLC_動静報告メール送信_同期用Response")]
        System.Threading.Tasks.Task<bool> BLC_動静報告メール送信_同期用Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_免許免状管理_検索", ReplyAction="http://tempuri.org/IService/BLC_免許免状管理_検索Response")]
        System.Collections.Generic.List<NBaseData.DAC.SiMenjou> BLC_免許免状管理_検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_免許免状管理_検索", ReplyAction="http://tempuri.org/IService/BLC_免許免状管理_検索Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> BLC_免許免状管理_検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_免許免状一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_免許免状一覧出力Response")]
        byte[] BLC_Excel_免許免状一覧出力(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjouList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_免許免状一覧出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_免許免状一覧出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_免許免状一覧出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjouList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_免許免状管理_更新", ReplyAction="http://tempuri.org/IService/BLC_免許免状管理_更新Response")]
        NBaseData.DAC.SiMenjou BLC_免許免状管理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_免許免状管理_更新", ReplyAction="http://tempuri.org/IService/BLC_免許免状管理_更新Response")]
        System.Threading.Tasks.Task<NBaseData.DAC.SiMenjou> BLC_免許免状管理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積回答メール送信", ReplyAction="http://tempuri.org/IService/BLC_見積回答メール送信Response")]
        ServiceReferences.NBaseService.BLC_見積回答メール送信Response BLC_見積回答メール送信(ServiceReferences.NBaseService.BLC_見積回答メール送信Request request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_見積回答メール送信", ReplyAction="http://tempuri.org/IService/BLC_見積回答メール送信Response")]
        System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_見積回答メール送信Response> BLC_見積回答メール送信Async(ServiceReferences.NBaseService.BLC_見積回答メール送信Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船マスタ更新処理_追加処理", ReplyAction="http://tempuri.org/IService/BLC_船マスタ更新処理_追加処理Response")]
        bool BLC_船マスタ更新処理_追加処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船マスタ更新処理_追加処理", ReplyAction="http://tempuri.org/IService/BLC_船マスタ更新処理_追加処理Response")]
        System.Threading.Tasks.Task<bool> BLC_船マスタ更新処理_追加処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船マスタ更新処理_更新処理", ReplyAction="http://tempuri.org/IService/BLC_船マスタ更新処理_更新処理Response")]
        bool BLC_船マスタ更新処理_更新処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船マスタ更新処理_更新処理", ReplyAction="http://tempuri.org/IService/BLC_船マスタ更新処理_更新処理Response")]
        System.Threading.Tasks.Task<bool> BLC_船マスタ更新処理_更新処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel予算対比表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel予算対比表_取得Response")]
        byte[] BLC_Excel予算対比表_取得(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead1, NBaseData.DAC.BgYosanHead yosanHead2, decimal unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel予算対比表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel予算対比表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel予算対比表_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead1, NBaseData.DAC.BgYosanHead yosanHead2, decimal unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel予算表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel予算表_取得Response")]
        byte[] BLC_Excel予算表_取得(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, int years, decimal unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel予算表_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel予算表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel予算表_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, int years, decimal unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel修繕費予算出力", ReplyAction="http://tempuri.org/IService/BLC_Excel修繕費予算出力Response")]
        byte[] BLC_Excel修繕費予算出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel修繕費予算出力", ReplyAction="http://tempuri.org/IService/BLC_Excel修繕費予算出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel修繕費予算出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_パスワード_パスワード変更", ReplyAction="http://tempuri.org/IService/BLC_パスワード_パスワード変更Response")]
        NBaseData.BLC.ユーザパスワード.STATUS BLC_パスワード_パスワード変更(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_パスワード_パスワード変更", ReplyAction="http://tempuri.org/IService/BLC_パスワード_パスワード変更Response")]
        System.Threading.Tasks.Task<NBaseData.BLC.ユーザパスワード.STATUS> BLC_パスワード_パスワード変更Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品集計表_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品集計表_取得Response")]
        byte[] BLC_貯蔵品集計表_取得(NBaseData.DAC.MsUser loginUser, int year, System.Collections.Generic.List<bool> targets, NBaseData.BLC.貯蔵品集計表.Enum対象 outputKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品集計表_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品集計表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_貯蔵品集計表_取得Async(NBaseData.DAC.MsUser loginUser, int year, System.Collections.Generic.List<bool> targets, NBaseData.BLC.貯蔵品集計表.Enum対象 outputKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品リスト_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品リスト_取得Response")]
        byte[] BLC_貯蔵品リスト_取得(NBaseData.DAC.MsUser loginUser, int year, int month, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品リスト_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品リスト_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_貯蔵品リスト_取得Async(NBaseData.DAC.MsUser loginUser, int year, int month, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品編集_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品編集_取得Response")]
        System.Collections.Generic.List<NBaseData.BLC.貯蔵品リスト> BLC_貯蔵品編集_取得(NBaseData.DAC.MsUser loginUser, int sy, int sm, int ey, int em, int msVesselId, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_貯蔵品編集_取得", ReplyAction="http://tempuri.org/IService/BLC_貯蔵品編集_取得Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.貯蔵品リスト>> BLC_貯蔵品編集_取得Async(NBaseData.DAC.MsUser loginUser, int sy, int sm, int ey, int em, int msVesselId, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_添付ファイル作成", ReplyAction="http://tempuri.org/IService/BLC_添付ファイル作成Response")]
        bool BLC_添付ファイル作成(NBaseData.DAC.MsUser logiuser, string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_添付ファイル作成", ReplyAction="http://tempuri.org/IService/BLC_添付ファイル作成Response")]
        System.Threading.Tasks.Task<bool> BLC_添付ファイル作成Async(NBaseData.DAC.MsUser logiuser, string odMkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船用品注文書_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel_船用品注文書_取得Response")]
        byte[] BLC_Excel_船用品注文書_取得(NBaseData.DAC.MsUser loginUser, string odThiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船用品注文書_取得", ReplyAction="http://tempuri.org/IService/BLC_Excel_船用品注文書_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_船用品注文書_取得Async(NBaseData.DAC.MsUser loginUser, string odThiId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注アラーム処理_見積回答アラーム停止", ReplyAction="http://tempuri.org/IService/BLC_発注アラーム処理_見積回答アラーム停止Response")]
        bool BLC_発注アラーム処理_見積回答アラーム停止(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注アラーム処理_見積回答アラーム停止", ReplyAction="http://tempuri.org/IService/BLC_発注アラーム処理_見積回答アラーム停止Response")]
        System.Threading.Tasks.Task<bool> BLC_発注アラーム処理_見積回答アラーム停止Async(NBaseData.DAC.MsUser loginUser, string odMkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_合算対象の受領_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/BLC_合算対象の受領_GetRecordsByFilterResponse")]
        System.Collections.Generic.List<NBaseData.BLC.合算対象の受領> BLC_合算対象の受領_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.合算対象の受領Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_合算対象の受領_GetRecordsByFilter", ReplyAction="http://tempuri.org/IService/BLC_合算対象の受領_GetRecordsByFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.合算対象の受領>> BLC_合算対象の受領_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.合算対象の受領Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払合算処理", ReplyAction="http://tempuri.org/IService/BLC_支払合算処理Response")]
        bool BLC_支払合算処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.BLC.合算対象の受領> jrys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払合算処理", ReplyAction="http://tempuri.org/IService/BLC_支払合算処理Response")]
        System.Threading.Tasks.Task<bool> BLC_支払合算処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.BLC.合算対象の受領> jrys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払合算解除", ReplyAction="http://tempuri.org/IService/BLC_支払合算解除Response")]
        bool BLC_支払合算解除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払合算解除", ReplyAction="http://tempuri.org/IService/BLC_支払合算解除Response")]
        System.Threading.Tasks.Task<bool> BLC_支払合算解除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払合算_支払依頼作成", ReplyAction="http://tempuri.org/IService/BLC_支払合算_支払依頼作成Response")]
        bool BLC_支払合算_支払依頼作成(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr odShr, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem> odShrGassanItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_支払合算_支払依頼作成", ReplyAction="http://tempuri.org/IService/BLC_支払合算_支払依頼作成Response")]
        System.Threading.Tasks.Task<bool> BLC_支払合算_支払依頼作成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr odShr, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem> odShrGassanItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_合見積比較表_取得", ReplyAction="http://tempuri.org/IService/BLC_合見積比較表_取得Response")]
        byte[] BLC_合見積比較表_取得(NBaseData.DAC.MsUser loginUser, string odMmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_合見積比較表_取得", ReplyAction="http://tempuri.org/IService/BLC_合見積比較表_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_合見積比較表_取得Async(NBaseData.DAC.MsUser loginUser, string odMmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_審査帳票取得", ReplyAction="http://tempuri.org/IService/BLC_審査帳票取得Response")]
        byte[] BLC_審査帳票取得(int year, NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_審査帳票取得", ReplyAction="http://tempuri.org/IService/BLC_審査帳票取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_審査帳票取得Async(int year, NBaseData.DAC.MsUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/本船更新_船員_乗船_登録", ReplyAction="http://tempuri.org/IService/本船更新_船員_乗船_登録Response")]
        bool 本船更新_船員_乗船_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.SiCard siCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/本船更新_船員_乗船_登録", ReplyAction="http://tempuri.org/IService/本船更新_船員_乗船_登録Response")]
        System.Threading.Tasks.Task<bool> 本船更新_船員_乗船_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.SiCard siCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注RowDataヘッダー_取得", ReplyAction="http://tempuri.org/IService/BLC_発注RowDataヘッダー_取得Response")]
        byte[] BLC_発注RowDataヘッダー_取得(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注RowDataヘッダー_取得", ReplyAction="http://tempuri.org/IService/BLC_発注RowDataヘッダー_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_発注RowDataヘッダー_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注RowData詳細品目_取得", ReplyAction="http://tempuri.org/IService/BLC_発注RowData詳細品目_取得Response")]
        byte[] BLC_発注RowData詳細品目_取得(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注RowData詳細品目_取得", ReplyAction="http://tempuri.org/IService/BLC_発注RowData詳細品目_取得Response")]
        System.Threading.Tasks.Task<byte[]> BLC_発注RowData詳細品目_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注メール送信", ReplyAction="http://tempuri.org/IService/BLC_発注メール送信Response")]
        ServiceReferences.NBaseService.BLC_発注メール送信Response BLC_発注メール送信(ServiceReferences.NBaseService.BLC_発注メール送信Request request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_発注メール送信", ReplyAction="http://tempuri.org/IService/BLC_発注メール送信Response")]
        System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_発注メール送信Response> BLC_発注メール送信Async(ServiceReferences.NBaseService.BLC_発注メール送信Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員登録", ReplyAction="http://tempuri.org/IService/BLC_船員登録Response")]
        int BLC_船員登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.MsSeninAddress seninAddress, System.Collections.Generic.List<NBaseData.DAC.SiCard> cards, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjous, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus, System.Collections.Generic.List<NBaseData.DAC.SiRireki> rirekis, System.Collections.Generic.List<NBaseData.DAC.SiShobyo> shobyos, System.Collections.Generic.List<NBaseData.DAC.SiKenshin> kenshins, System.Collections.Generic.List<NBaseData.DAC.SiShobatsu> shobatsus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_船員登録", ReplyAction="http://tempuri.org/IService/BLC_船員登録Response")]
        System.Threading.Tasks.Task<int> BLC_船員登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.MsSeninAddress seninAddress, System.Collections.Generic.List<NBaseData.DAC.SiCard> cards, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjous, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus, System.Collections.Generic.List<NBaseData.DAC.SiRireki> rirekis, System.Collections.Generic.List<NBaseData.DAC.SiShobyo> shobyos, System.Collections.Generic.List<NBaseData.DAC.SiKenshin> kenshins, System.Collections.Generic.List<NBaseData.DAC.SiShobatsu> shobatsus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規送金", ReplyAction="http://tempuri.org/IService/BLC_新規送金Response")]
        bool BLC_新規送金(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin soukin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_新規送金", ReplyAction="http://tempuri.org/IService/BLC_新規送金Response")]
        System.Threading.Tasks.Task<bool> BLC_新規送金Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin soukin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗表配信", ReplyAction="http://tempuri.org/IService/BLC_配乗表配信Response")]
        bool BLC_配乗表配信(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_配乗表配信", ReplyAction="http://tempuri.org/IService/BLC_配乗表配信Response")]
        System.Threading.Tasks.Task<bool> BLC_配乗表配信Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船用金送金表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船用金送金表出力Response")]
        byte[] BLC_Excel_船用金送金表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船用金送金表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船用金送金表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_船用金送金表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船内収支報告書出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船内収支報告書出力Response")]
        byte[] BLC_Excel_船内収支報告書出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_船内収支報告書出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_船内収支報告書出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_船内収支報告書出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_科目別集計表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_科目別集計表出力Response")]
        byte[] BLC_Excel_科目別集計表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_科目別集計表出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_科目別集計表出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_科目別集計表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_送金通知出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_送金通知出力Response")]
        byte[] BLC_Excel_送金通知出力(NBaseData.DAC.MsUser loginUser, string siSoukinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_送金通知出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_送金通知出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_送金通知出力Async(NBaseData.DAC.MsUser loginUser, string siSoukinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_月次計上確定", ReplyAction="http://tempuri.org/IService/BLC_月次計上確定Response")]
        bool BLC_月次計上確定(NBaseData.DAC.MsUser loginUser, string shimeNengetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_月次計上確定", ReplyAction="http://tempuri.org/IService/BLC_月次計上確定Response")]
        System.Threading.Tasks.Task<bool> BLC_月次計上確定Async(NBaseData.DAC.MsUser loginUser, string shimeNengetsu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_次年度休暇確定", ReplyAction="http://tempuri.org/IService/BLC_次年度休暇確定Response")]
        bool BLC_次年度休暇確定(NBaseData.DAC.MsUser loginUser, string shimeNen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_次年度休暇確定", ReplyAction="http://tempuri.org/IService/BLC_次年度休暇確定Response")]
        System.Threading.Tasks.Task<bool> BLC_次年度休暇確定Async(NBaseData.DAC.MsUser loginUser, string shimeNen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_休日付与簿出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_休日付与簿出力Response")]
        byte[] BLC_Excel_休日付与簿出力(NBaseData.DAC.MsUser loginUser, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BLC_Excel_休日付与簿出力", ReplyAction="http://tempuri.org/IService/BLC_Excel_休日付与簿出力Response")]
        System.Threading.Tasks.Task<byte[]> BLC_Excel_休日付与簿出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_見積依頼メール送信", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_見積依頼メール送信Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public NBaseData.DAC.MsUser loginUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string odMkId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string customerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string tantousha;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string mailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string mkNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string mkKigen;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string webKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public System.DateTime mmDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public System.DateTime kiboubi;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string errMessage;
        
        public BLC_見積依頼メール送信Request() {
        }
        
        public BLC_見積依頼メール送信Request(NBaseData.DAC.MsUser loginUser, string odMkId, string customerName, string tantousha, string subject, string mailAddress, string mkNo, string mkKigen, string webKey, System.DateTime mmDate, System.DateTime kiboubi, string errMessage) {
            this.loginUser = loginUser;
            this.odMkId = odMkId;
            this.customerName = customerName;
            this.tantousha = tantousha;
            this.subject = subject;
            this.mailAddress = mailAddress;
            this.mkNo = mkNo;
            this.mkKigen = mkKigen;
            this.webKey = webKey;
            this.mmDate = mmDate;
            this.kiboubi = kiboubi;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_見積依頼メール送信Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_見積依頼メール送信Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool BLC_見積依頼メール送信Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errMessage;
        
        public BLC_見積依頼メール送信Response() {
        }
        
        public BLC_見積依頼メール送信Response(bool BLC_見積依頼メール送信Result, string errMessage) {
            this.BLC_見積依頼メール送信Result = BLC_見積依頼メール送信Result;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_燃料_潤滑油メール送信", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_燃料_潤滑油メール送信Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public NBaseData.DAC.MsUser loginUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string odThiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errMessage;
        
        public BLC_燃料_潤滑油メール送信Request() {
        }
        
        public BLC_燃料_潤滑油メール送信Request(NBaseData.DAC.MsUser loginUser, string odThiID, string errMessage) {
            this.loginUser = loginUser;
            this.odThiID = odThiID;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_燃料_潤滑油メール送信Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_燃料_潤滑油メール送信Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool BLC_燃料_潤滑油メール送信Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errMessage;
        
        public BLC_燃料_潤滑油メール送信Response() {
        }
        
        public BLC_燃料_潤滑油メール送信Response(bool BLC_燃料_潤滑油メール送信Result, string errMessage) {
            this.BLC_燃料_潤滑油メール送信Result = BLC_燃料_潤滑油メール送信Result;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_燃料_潤滑油以外メール送信", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_燃料_潤滑油以外メール送信Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public NBaseData.DAC.MsUser loginUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string odThiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errMessage;
        
        public BLC_燃料_潤滑油以外メール送信Request() {
        }
        
        public BLC_燃料_潤滑油以外メール送信Request(NBaseData.DAC.MsUser loginUser, string odThiID, string errMessage) {
            this.loginUser = loginUser;
            this.odThiID = odThiID;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_燃料_潤滑油以外メール送信Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_燃料_潤滑油以外メール送信Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool BLC_燃料_潤滑油以外メール送信Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errMessage;
        
        public BLC_燃料_潤滑油以外メール送信Response() {
        }
        
        public BLC_燃料_潤滑油以外メール送信Response(bool BLC_燃料_潤滑油以外メール送信Result, string errMessage) {
            this.BLC_燃料_潤滑油以外メール送信Result = BLC_燃料_潤滑油以外メール送信Result;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanCopyWork", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CanCopyWorkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string connectionKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public WtmModelBase.Work w;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Collections.Generic.List<int> seninIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime fromDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime toDay;
        
        public CanCopyWorkRequest() {
        }
        
        public CanCopyWorkRequest(string connectionKey, WtmModelBase.Work w, System.Collections.Generic.List<int> seninIds, System.DateTime fromDay, System.DateTime toDay) {
            this.connectionKey = connectionKey;
            this.w = w;
            this.seninIds = seninIds;
            this.fromDay = fromDay;
            this.toDay = toDay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanCopyWorkResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CanCopyWorkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CanCopyWorkResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Collections.Generic.List<int> errorSeninIds;
        
        public CanCopyWorkResponse() {
        }
        
        public CanCopyWorkResponse(bool CanCopyWorkResult, System.Collections.Generic.List<int> errorSeninIds) {
            this.CanCopyWorkResult = CanCopyWorkResult;
            this.errorSeninIds = errorSeninIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_見積回答メール送信", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_見積回答メール送信Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public NBaseData.DAC.MsUser loginUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string odMkId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errMessage;
        
        public BLC_見積回答メール送信Request() {
        }
        
        public BLC_見積回答メール送信Request(NBaseData.DAC.MsUser loginUser, string odMkId, string errMessage) {
            this.loginUser = loginUser;
            this.odMkId = odMkId;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_見積回答メール送信Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_見積回答メール送信Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool BLC_見積回答メール送信Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errMessage;
        
        public BLC_見積回答メール送信Response() {
        }
        
        public BLC_見積回答メール送信Response(bool BLC_見積回答メール送信Result, string errMessage) {
            this.BLC_見積回答メール送信Result = BLC_見積回答メール送信Result;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_発注メール送信", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_発注メール送信Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public NBaseData.DAC.MsUser loginUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string odMkId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string customerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string tantousha;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string mailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string hachuNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string msVesselName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string telNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string faxNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string bikou;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string errMessage;
        
        public BLC_発注メール送信Request() {
        }
        
        public BLC_発注メール送信Request(NBaseData.DAC.MsUser loginUser, string odMkId, string customerName, string tantousha, string mailAddress, string subject, string hachuNo, string msVesselName, string telNo, string faxNo, string bikou, string errMessage) {
            this.loginUser = loginUser;
            this.odMkId = odMkId;
            this.customerName = customerName;
            this.tantousha = tantousha;
            this.mailAddress = mailAddress;
            this.subject = subject;
            this.hachuNo = hachuNo;
            this.msVesselName = msVesselName;
            this.telNo = telNo;
            this.faxNo = faxNo;
            this.bikou = bikou;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BLC_発注メール送信Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BLC_発注メール送信Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool BLC_発注メール送信Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errMessage;
        
        public BLC_発注メール送信Response() {
        }
        
        public BLC_発注メール送信Response(bool BLC_発注メール送信Result, string errMessage) {
            this.BLC_発注メール送信Result = BLC_発注メール送信Result;
            this.errMessage = errMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ServiceReferences.NBaseService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ServiceReferences.NBaseService.IService>, ServiceReferences.NBaseService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NBaseData.DAC.SiGetsujiShime SiGetsujiShime_GetRecordByLastDate(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiGetsujiShime_GetRecordByLastDate(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiGetsujiShime> SiGetsujiShime_GetRecordByLastDateAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiGetsujiShime_GetRecordByLastDateAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiGetsujiShime> SiGetsujiShime_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiGetsujiShime_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiGetsujiShime>> SiGetsujiShime_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiGetsujiShime_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public NBaseData.DAC.SiNenjiShime SiNenjiShime_GetRecordByLastDate(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiNenjiShime_GetRecordByLastDate(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiNenjiShime> SiNenjiShime_GetRecordByLastDateAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiNenjiShime_GetRecordByLastDateAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiNenjiShime> SiNenjiShime_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiNenjiShime_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiNenjiShime>> SiNenjiShime_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiNenjiShime_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori> MsBashoKyori_GetRecordsByKyori1Kyori2(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2) {
            return base.Channel.MsBashoKyori_GetRecordsByKyori1Kyori2(loginUser, BashoNo1, BashoNo2);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori>> MsBashoKyori_GetRecordsByKyori1Kyori2Async(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2) {
            return base.Channel.MsBashoKyori_GetRecordsByKyori1Kyori2Async(loginUser, BashoNo1, BashoNo2);
        }
        
        public NBaseData.DAC.MsBashoKyori MsBashoKyori_GetRecord(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2) {
            return base.Channel.MsBashoKyori_GetRecord(loginUser, BashoNo1, BashoNo2);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsBashoKyori> MsBashoKyori_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string BashoNo1, string BashoNo2) {
            return base.Channel.MsBashoKyori_GetRecordAsync(loginUser, BashoNo1, BashoNo2);
        }
        
        public bool MsBashoKyori_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori) {
            return base.Channel.MsBashoKyori_InsertRecord(loginUser, msBashoKyori);
        }
        
        public System.Threading.Tasks.Task<bool> MsBashoKyori_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori) {
            return base.Channel.MsBashoKyori_InsertRecordAsync(loginUser, msBashoKyori);
        }
        
        public bool MsBashoKyori_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori) {
            return base.Channel.MsBashoKyori_UpdateRecord(loginUser, msBashoKyori);
        }
        
        public System.Threading.Tasks.Task<bool> MsBashoKyori_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKyori msBashoKyori) {
            return base.Channel.MsBashoKyori_UpdateRecordAsync(loginUser, msBashoKyori);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori> MsBashoKyori_GetRecordsByMsBashoID(NBaseData.DAC.MsUser loginUser, string ms_basho_id) {
            return base.Channel.MsBashoKyori_GetRecordsByMsBashoID(loginUser, ms_basho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKyori>> MsBashoKyori_GetRecordsByMsBashoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_basho_id) {
            return base.Channel.MsBashoKyori_GetRecordsByMsBashoIDAsync(loginUser, ms_basho_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun> MsBashoKubun_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBashoKubun_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun>> MsBashoKubun_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBashoKubun_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun> MsBashoKubun_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string bashoKubunName) {
            return base.Channel.MsBashoKubun_GetRecordsByName(loginUser, bashoKubunName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBashoKubun>> MsBashoKubun_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string bashoKubunName) {
            return base.Channel.MsBashoKubun_GetRecordsByNameAsync(loginUser, bashoKubunName);
        }
        
        public bool MsBashoKubun_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun) {
            return base.Channel.MsBashoKubun_InsertRecord(loginUser, msBashoKubun);
        }
        
        public System.Threading.Tasks.Task<bool> MsBashoKubun_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun) {
            return base.Channel.MsBashoKubun_InsertRecordAsync(loginUser, msBashoKubun);
        }
        
        public bool MsBashoKubun_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun) {
            return base.Channel.MsBashoKubun_UpdateRecord(loginUser, msBashoKubun);
        }
        
        public System.Threading.Tasks.Task<bool> MsBashoKubun_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBashoKubun msBashoKubun) {
            return base.Channel.MsBashoKubun_UpdateRecordAsync(loginUser, msBashoKubun);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrGassanHead> OdShrGassanHead_GetRecords(NBaseData.DAC.MsUser loginUser, string msCustomerId, string msThiIraiSbtId, string msThiIraiShousaiId, int msVesselId, int status) {
            return base.Channel.OdShrGassanHead_GetRecords(loginUser, msCustomerId, msThiIraiSbtId, msThiIraiShousaiId, msVesselId, status);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrGassanHead>> OdShrGassanHead_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string msCustomerId, string msThiIraiSbtId, string msThiIraiShousaiId, int msVesselId, int status) {
            return base.Channel.OdShrGassanHead_GetRecordsAsync(loginUser, msCustomerId, msThiIraiSbtId, msThiIraiShousaiId, msVesselId, status);
        }
        
        public NBaseData.DAC.OdShrGassanHead OdShrGassanHead_GetRecord(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId) {
            return base.Channel.OdShrGassanHead_GetRecord(loginUser, odShrGassanHeadId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdShrGassanHead> OdShrGassanHead_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId) {
            return base.Channel.OdShrGassanHead_GetRecordAsync(loginUser, odShrGassanHeadId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem> OdShrGassanItem_GetRecords(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId) {
            return base.Channel.OdShrGassanItem_GetRecords(loginUser, odShrGassanHeadId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem>> OdShrGassanItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string odShrGassanHeadId) {
            return base.Channel.OdShrGassanItem_GetRecordsAsync(loginUser, odShrGassanHeadId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCargoYusoItem> MsCargoYusoItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCargoYusoItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargoYusoItem>> MsCargoYusoItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCargoYusoItem_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsCargoYusoItem MsCargoYusoItem_GetRecord(NBaseData.DAC.MsUser loginUser, int MsCargoYusoItemID) {
            return base.Channel.MsCargoYusoItem_GetRecord(loginUser, MsCargoYusoItemID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsCargoYusoItem> MsCargoYusoItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int MsCargoYusoItemID) {
            return base.Channel.MsCargoYusoItem_GetRecordAsync(loginUser, MsCargoYusoItemID);
        }
        
        public NBaseData.DAC.MsCargoYusoItem MsCargoYusoItem_GetRecordByMsCargoID(NBaseData.DAC.MsUser loginUser, int MsCargoID) {
            return base.Channel.MsCargoYusoItem_GetRecordByMsCargoID(loginUser, MsCargoID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsCargoYusoItem> MsCargoYusoItem_GetRecordByMsCargoIDAsync(NBaseData.DAC.MsUser loginUser, int MsCargoID) {
            return base.Channel.MsCargoYusoItem_GetRecordByMsCargoIDAsync(loginUser, MsCargoID);
        }
        
        public bool MsCargoYusoItem_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargoYusoItem yusoItem) {
            return base.Channel.MsCargoYusoItem_InsertRecord(loginUser, yusoItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsCargoYusoItem_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargoYusoItem yusoItem) {
            return base.Channel.MsCargoYusoItem_InsertRecordAsync(loginUser, yusoItem);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SnSyncInfo> SnSyncInfo_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SnSyncInfo_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SnSyncInfo>> SnSyncInfo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SnSyncInfo_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.SnSyncInfo SnSyncInfo_GetRecord(NBaseData.DAC.MsUser loginUser, string hostName) {
            return base.Channel.SnSyncInfo_GetRecord(loginUser, hostName);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SnSyncInfo> SnSyncInfo_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string hostName) {
            return base.Channel.SnSyncInfo_GetRecordAsync(loginUser, hostName);
        }
        
        public bool SnSyncInfo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info) {
            return base.Channel.SnSyncInfo_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> SnSyncInfo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info) {
            return base.Channel.SnSyncInfo_InsertRecordAsync(loginUser, info);
        }
        
        public bool SnSyncInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info) {
            return base.Channel.SnSyncInfo_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> SnSyncInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SnSyncInfo info) {
            return base.Channel.SnSyncInfo_UpdateRecordAsync(loginUser, info);
        }
        
        public NBaseData.DAC.OdJryGaisan OdJryGaisan_GetRecordByOdJryId(NBaseData.DAC.MsUser loginUser, string odJryId) {
            return base.Channel.OdJryGaisan_GetRecordByOdJryId(loginUser, odJryId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdJryGaisan> OdJryGaisan_GetRecordByOdJryIdAsync(NBaseData.DAC.MsUser loginUser, string odJryId) {
            return base.Channel.OdJryGaisan_GetRecordByOdJryIdAsync(loginUser, odJryId);
        }
        
        public bool OdJryGaisan_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryGaisan info) {
            return base.Channel.OdJryGaisan_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdJryGaisan_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryGaisan info) {
            return base.Channel.OdJryGaisan_InsertAsync(loginUser, info);
        }
        
        public bool TraceLogging(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string function, string hostName) {
            return base.Channel.TraceLogging(loginUser, userId, bumonId, function, hostName);
        }
        
        public System.Threading.Tasks.Task<bool> TraceLoggingAsync(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string function, string hostName) {
            return base.Channel.TraceLoggingAsync(loginUser, userId, bumonId, function, hostName);
        }
        
        public bool TraceStart(string hostName) {
            return base.Channel.TraceStart(hostName);
        }
        
        public System.Threading.Tasks.Task<bool> TraceStartAsync(string hostName) {
            return base.Channel.TraceStartAsync(hostName);
        }
        
        public bool TraceEnd(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string hostName) {
            return base.Channel.TraceEnd(loginUser, userId, bumonId, hostName);
        }
        
        public System.Threading.Tasks.Task<bool> TraceEndAsync(NBaseData.DAC.MsUser loginUser, string userId, string bumonId, string hostName) {
            return base.Channel.TraceEndAsync(loginUser, userId, bumonId, hostName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUserSettings> MsUserSettings_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUserSettings_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUserSettings>> MsUserSettings_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUserSettings_GetRecordsAsync(loginUser);
        }
        
        public bool MsUserSettings_InsertOrUpdateRecords(NBaseData.DAC.MsUser loginUser, string key, string value) {
            return base.Channel.MsUserSettings_InsertOrUpdateRecords(loginUser, key, value);
        }
        
        public System.Threading.Tasks.Task<bool> MsUserSettings_InsertOrUpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, string key, string value) {
            return base.Channel.MsUserSettings_InsertOrUpdateRecordsAsync(loginUser, key, value);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.WingMessage> WingMessage_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.WingMessage_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.WingMessage>> WingMessage_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.WingMessage_GetRecordsAsync(loginUser);
        }
        
        public bool WingMessage_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info) {
            return base.Channel.WingMessage_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> WingMessage_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info) {
            return base.Channel.WingMessage_InsertRecordAsync(loginUser, info);
        }
        
        public bool WingMessage_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info) {
            return base.Channel.WingMessage_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> WingMessage_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.WingMessage info) {
            return base.Channel.WingMessage_UpdateRecordAsync(loginUser, info);
        }
        
        public NBaseData.DAC.OdAttachFile OdAttachFile_GetRecord(NBaseData.DAC.MsUser loginUser, string odAttachFileId) {
            return base.Channel.OdAttachFile_GetRecord(loginUser, odAttachFileId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdAttachFile> OdAttachFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odAttachFileId) {
            return base.Channel.OdAttachFile_GetRecordAsync(loginUser, odAttachFileId);
        }
        
        public NBaseData.DAC.OdAttachFile OdAttachFile_GetRecordNoData(NBaseData.DAC.MsUser loginUser, string odAttachFileId) {
            return base.Channel.OdAttachFile_GetRecordNoData(loginUser, odAttachFileId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdAttachFile> OdAttachFile_GetRecordNoDataAsync(NBaseData.DAC.MsUser loginUser, string odAttachFileId) {
            return base.Channel.OdAttachFile_GetRecordNoDataAsync(loginUser, odAttachFileId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> OdAttachFile_GetRecordsByOdThiID(NBaseData.DAC.MsUser loginUser, string odThiId) {
            return base.Channel.OdAttachFile_GetRecordsByOdThiID(loginUser, odThiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdAttachFile>> OdAttachFile_GetRecordsByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string odThiId) {
            return base.Channel.OdAttachFile_GetRecordsByOdThiIDAsync(loginUser, odThiId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu> MsSiKoushu_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKoushu_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu>> MsSiKoushu_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKoushu_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu> MsSiKoushu_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiKoushu_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKoushu>> MsSiKoushu_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiKoushu_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsSiKoushu_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKoushu k) {
            return base.Channel.MsSiKoushu_InsertOrUpdate(loginUser, k);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiKoushu_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKoushu k) {
            return base.Channel.MsSiKoushu_InsertOrUpdateAsync(loginUser, k);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKoushu> SiKoushu_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter) {
            return base.Channel.SiKoushu_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKoushu>> SiKoushu_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter) {
            return base.Channel.SiKoushu_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKoushu> SiKoushu_GetRecordsBashoOnly(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiKoushu_GetRecordsBashoOnly(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKoushu>> SiKoushu_GetRecordsBashoOnlyAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiKoushu_GetRecordsBashoOnlyAsync(loginUser);
        }
        
        public NBaseData.DAC.SiKoushu SiKoushu_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKoushu s) {
            return base.Channel.SiKoushu_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiKoushu> SiKoushu_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKoushu s) {
            return base.Channel.SiKoushu_InsertOrUpdateAsync(loginUser, s);
        }
        
        public NBaseData.DAC.PtAnzenHyouji PtAnzenHyouji_GetRecord(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.PtAnzenHyouji_GetRecord(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.PtAnzenHyouji> PtAnzenHyouji_GetRecordAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.PtAnzenHyouji_GetRecordAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKyuka> SiKyuka_GetRecordsByNendo(NBaseData.DAC.MsUser loginUser, string nendo) {
            return base.Channel.SiKyuka_GetRecordsByNendo(loginUser, nendo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKyuka>> SiKyuka_GetRecordsByNendoAsync(NBaseData.DAC.MsUser loginUser, string nendo) {
            return base.Channel.SiKyuka_GetRecordsByNendoAsync(loginUser, nendo);
        }
        
        public bool SiKyuka_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKyuka> kyukaList) {
            return base.Channel.SiKyuka_InsertOrUpdate(loginUser, kyukaList);
        }
        
        public System.Threading.Tasks.Task<bool> SiKyuka_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKyuka> kyukaList) {
            return base.Channel.SiKyuka_InsertOrUpdateAsync(loginUser, kyukaList);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.WorkPattern> WorkPattern_GetRecords(NBaseData.DAC.MsUser loginUser, int eventKind, int msVesselID) {
            return base.Channel.WorkPattern_GetRecords(loginUser, eventKind, msVesselID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.WorkPattern>> WorkPattern_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, int eventKind, int msVesselID) {
            return base.Channel.WorkPattern_GetRecordsAsync(loginUser, eventKind, msVesselID);
        }
        
        public bool WorkPattern_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.WorkPattern> workPatternList) {
            return base.Channel.WorkPattern_InsertOrUpdate(loginUser, workPatternList);
        }
        
        public System.Threading.Tasks.Task<bool> WorkPattern_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.WorkPattern> workPatternList) {
            return base.Channel.WorkPattern_InsertOrUpdateAsync(loginUser, workPatternList);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItem_GetRecordsByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdJryItem_GetRecordsByOdJryID(loginUser, odJryID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryItem>> OdJryItem_GetRecordsByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdJryItem_GetRecordsByOdJryIDAsync(loginUser, odJryID);
        }
        
        public bool OdJryItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info) {
            return base.Channel.OdJryItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdJryItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info) {
            return base.Channel.OdJryItem_InsertAsync(loginUser, info);
        }
        
        public bool OdJryItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info) {
            return base.Channel.OdJryItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdJryItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryItem info) {
            return base.Channel.OdJryItem_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdJry_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdJry_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecordsByOdMkId(NBaseData.DAC.MsUser loginUser, string odMkId) {
            return base.Channel.OdJry_GetRecordsByOdMkId(loginUser, odMkId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsByOdMkIdAsync(NBaseData.DAC.MsUser loginUser, string odMkId) {
            return base.Channel.OdJry_GetRecordsByOdMkIdAsync(loginUser, odMkId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecordsByOdThiFilter(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdJry_GetRecordsByOdThiFilter(loginUser, status, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsByOdThiFilterAsync(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdJry_GetRecordsByOdThiFilterAsync(loginUser, status, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJry> OdJry_GetRecordsByOdJryFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.OdJry_GetRecordsByOdJryFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJry>> OdJry_GetRecordsByOdJryFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.OdJry_GetRecordsByOdJryFilterAsync(loginUser, filter);
        }
        
        public NBaseData.DAC.OdJry OdJry_GetRecord(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdJry_GetRecord(loginUser, odJryID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdJry> OdJry_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdJry_GetRecordAsync(loginUser, odJryID);
        }
        
        public bool OdJry_Insert() {
            return base.Channel.OdJry_Insert();
        }
        
        public System.Threading.Tasks.Task<bool> OdJry_InsertAsync() {
            return base.Channel.OdJry_InsertAsync();
        }
        
        public bool OdJry_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry info) {
            return base.Channel.OdJry_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdJry_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry info) {
            return base.Channel.OdJry_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdShr_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdShr_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.OdShr OdShr_GetRecord(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdShr_GetRecord(loginUser, odShrID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdShr> OdShr_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdShr_GetRecordAsync(loginUser, odShrID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecordByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdShr_GetRecordByOdJryID(loginUser, odJryID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdShr_GetRecordByOdJryIDAsync(loginUser, odJryID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecordsByOdThiFilter(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdShr_GetRecordsByOdThiFilter(loginUser, status, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordsByOdThiFilterAsync(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdShr_GetRecordsByOdThiFilterAsync(loginUser, status, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecords落成済み未払い(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.OdShr_GetRecords落成済み未払い(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecords落成済み未払いAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.OdShr_GetRecords落成済み未払いAsync(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecords未払い(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.OdShr_GetRecords未払い(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecords未払いAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.OdShr_GetRecords未払いAsync(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShr> OdShr_GetRecordByGassanItem(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdShr_GetRecordByGassanItem(loginUser, odJryID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShr>> OdShr_GetRecordByGassanItemAsync(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdShr_GetRecordByGassanItemAsync(loginUser, odJryID);
        }
        
        public bool OdShr_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info) {
            return base.Channel.OdShr_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdShr_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info) {
            return base.Channel.OdShr_InsertAsync(loginUser, info);
        }
        
        public bool OdShr_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info) {
            return base.Channel.OdShr_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdShr_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr info) {
            return base.Channel.OdShr_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdShrItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrItem>> OdShrItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdShrItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItem_GetRecordsByOdShrID(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdShrItem_GetRecordsByOdShrID(loginUser, odShrID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrItem>> OdShrItem_GetRecordsByOdShrIDAsync(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdShrItem_GetRecordsByOdShrIDAsync(loginUser, odShrID);
        }
        
        public bool OdShrItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info) {
            return base.Channel.OdShrItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdShrItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info) {
            return base.Channel.OdShrItem_InsertAsync(loginUser, info);
        }
        
        public bool OdShrItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info) {
            return base.Channel.OdShrItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdShrItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrItem info) {
            return base.Channel.OdShrItem_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdShrShousaiItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdShrShousaiItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecordByOdShrID(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdShrShousaiItem_GetRecordByOdShrID(loginUser, odShrID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordByOdShrIDAsync(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdShrShousaiItem_GetRecordByOdShrIDAsync(loginUser, odShrID);
        }
        
        public bool OdShrShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info) {
            return base.Channel.OdShrShousaiItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdShrShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info) {
            return base.Channel.OdShrShousaiItem_InsertAsync(loginUser, info);
        }
        
        public bool OdShrShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info) {
            return base.Channel.OdShrShousaiItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdShrShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrShousaiItem info) {
            return base.Channel.OdShrShousaiItem_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdShrShousaiItem_GetRecordsByMsVesselItemID(loginUser, ms_vesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdShrShousaiItem_GetRecordsByMsVesselItemIDAsync(loginUser, ms_vesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdShrShousaiItem_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem>> OdShrShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdShrShousaiItem_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public NBaseData.DAC.BgVesselYosan BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesselId(NBaseData.DAC.MsUser loginUser, int year, int yosanHeadId, int msVesselId) {
            return base.Channel.BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesselId(loginUser, year, yosanHeadId, msVesselId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgVesselYosan> BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesselIdAsync(NBaseData.DAC.MsUser loginUser, int year, int yosanHeadId, int msVesselId) {
            return base.Channel.BgVesselYosan_GetRecordByYearAndYosanHeadIdAndMsVesselIdAsync(loginUser, year, yosanHeadId, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgVesselYosan> BgVesselYosan_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgVesselYosan_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgVesselYosan>> BgVesselYosan_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgVesselYosan_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_年単位_船(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_年単位_船(loginUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_年単位_船Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_年単位_船Async(loginUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_月単位(NBaseData.DAC.MsUser msUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_月単位(msUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_月単位Async(NBaseData.DAC.MsUser msUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_月単位Async(msUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_年単位_全社(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_年単位_全社(loginUser, yosanHeadId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_年単位_全社Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_年単位_全社Async(loginUser, yosanHeadId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_年単位_グループ(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_年単位_グループ(loginUser, yosanHeadId, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_年単位_グループAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_年単位_グループAsync(loginUser, yosanHeadId, msVesselTypeId, yearStart, yearEnd);
        }
        
        public NBaseData.DAC.BgYosanItem BgYosanItem_GetRecordByYearHimokuIDMsVesselID(NBaseData.DAC.MsUser loginUser, int yosanheadid, int year, int himokuid, int vesselid) {
            return base.Channel.BgYosanItem_GetRecordByYearHimokuIDMsVesselID(loginUser, yosanheadid, year, himokuid, vesselid);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecordByYearHimokuIDMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int yosanheadid, int year, int himokuid, int vesselid) {
            return base.Channel.BgYosanItem_GetRecordByYearHimokuIDMsVesselIDAsync(loginUser, yosanheadid, year, himokuid, vesselid);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumonIDHimokus(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype, int bumonid) {
            return base.Channel.BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumonIDHimokus(loginUser, yosanheadid, start, end, vesseltype, bumonid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumonIDHimokusAsync(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype, int bumonid) {
            return base.Channel.BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeBumonIDHimokusAsync(loginUser, yosanheadid, start, end, vesseltype, bumonid);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimokus(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype) {
            return base.Channel.BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimokus(loginUser, yosanheadid, start, end, vesseltype);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimokusAsync(NBaseData.DAC.MsUser loginUser, int yosanheadid, string start, string end, string vesseltype) {
            return base.Channel.BgYosanItem_GetRecordsByYosanHeadPriodVesselTypeHimokusAsync(loginUser, yosanheadid, start, end, vesseltype);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_月単位_グループ(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_月単位_グループ(loginUser, yosanHeadId, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_月単位_グループAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_月単位_グループAsync(loginUser, yosanHeadId, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> BgYosanItem_GetRecords_月単位_全社(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_月単位_全社(loginUser, yosanHeadId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanItem>> BgYosanItem_GetRecords_月単位_全社Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, string yearStart, string yearEnd) {
            return base.Channel.BgYosanItem_GetRecords_月単位_全社Async(loginUser, yosanHeadId, yearStart, yearEnd);
        }
        
        public bool BgYosanItem_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems) {
            return base.Channel.BgYosanItem_UpdateRecords(loginUser, yosanItems);
        }
        
        public System.Threading.Tasks.Task<bool> BgYosanItem_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems) {
            return base.Channel.BgYosanItem_UpdateRecordsAsync(loginUser, yosanItems);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKamoku> MsKamoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKamoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKamoku>> MsKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKamoku_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsKamoku MsKamoku_GetRecordByHachuKamoku(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, string thiIraiShousaiId, string nyukyoKamokuId) {
            return base.Channel.MsKamoku_GetRecordByHachuKamoku(loginUser, thiIraiSbtId, thiIraiShousaiId, nyukyoKamokuId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsKamoku> MsKamoku_GetRecordByHachuKamokuAsync(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, string thiIraiShousaiId, string nyukyoKamokuId) {
            return base.Channel.MsKamoku_GetRecordByHachuKamokuAsync(loginUser, thiIraiSbtId, thiIraiShousaiId, nyukyoKamokuId);
        }
        
        public NBaseData.DAC.MsUser MsShinseiTantou_GetShinseiTantou(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsShinseiTantou_GetShinseiTantou(loginUser, msUserID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsShinseiTantou_GetShinseiTantouAsync(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsShinseiTantou_GetShinseiTantouAsync(loginUser, msUserID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo> PtAlarmInfo_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.PtAlarmInfo_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo>> PtAlarmInfo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.PtAlarmInfo_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo> PtAlarmInfo_GetRecordByCondition(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfoCondition condition) {
            return base.Channel.PtAlarmInfo_GetRecordByCondition(loginUser, condition);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo>> PtAlarmInfo_GetRecordByConditionAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfoCondition condition) {
            return base.Channel.PtAlarmInfo_GetRecordByConditionAsync(loginUser, condition);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo> PtAlarmInfo_GetRecordsBySanshoumotoId(NBaseData.DAC.MsUser loginUser, string sanshoumotoId) {
            return base.Channel.PtAlarmInfo_GetRecordsBySanshoumotoId(loginUser, sanshoumotoId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtAlarmInfo>> PtAlarmInfo_GetRecordsBySanshoumotoIdAsync(NBaseData.DAC.MsUser loginUser, string sanshoumotoId) {
            return base.Channel.PtAlarmInfo_GetRecordsBySanshoumotoIdAsync(loginUser, sanshoumotoId);
        }
        
        public bool PtAlarmInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfo alarmInfo) {
            return base.Channel.PtAlarmInfo_UpdateRecord(loginUser, alarmInfo);
        }
        
        public System.Threading.Tasks.Task<bool> PtAlarmInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtAlarmInfo alarmInfo) {
            return base.Channel.PtAlarmInfo_UpdateRecordAsync(loginUser, alarmInfo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtHonsenkoushinInfo> PtHonsenkoushinInfo_GetRecordsByCondition(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtHonsenkoushinInfoCondition condition) {
            return base.Channel.PtHonsenkoushinInfo_GetRecordsByCondition(loginUser, condition);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtHonsenkoushinInfo>> PtHonsenkoushinInfo_GetRecordsByConditionAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtHonsenkoushinInfoCondition condition) {
            return base.Channel.PtHonsenkoushinInfo_GetRecordsByConditionAsync(loginUser, condition);
        }
        
        public NBaseData.DAC.PtKanidouseiInfo PtKanidouseiInfo_GetRecordByPtKanidouseiInfoId(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId) {
            return base.Channel.PtKanidouseiInfo_GetRecordByPtKanidouseiInfoId(loginUser, PtKanidouseiInfoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordByPtKanidouseiInfoIdAsync(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId) {
            return base.Channel.PtKanidouseiInfo_GetRecordByPtKanidouseiInfoIdAsync(loginUser, PtKanidouseiInfoId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordByEventDate(NBaseData.DAC.MsUser loginUser, System.DateTime fromDatetime, System.DateTime toDatetime, int vesselId) {
            return base.Channel.PtKanidouseiInfo_GetRecordByEventDate(loginUser, fromDatetime, toDatetime, vesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordByEventDateAsync(NBaseData.DAC.MsUser loginUser, System.DateTime fromDatetime, System.DateTime toDatetime, int vesselId) {
            return base.Channel.PtKanidouseiInfo_GetRecordByEventDateAsync(loginUser, fromDatetime, toDatetime, vesselId);
        }
        
        public bool PtKanidouseiInfo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info) {
            return base.Channel.PtKanidouseiInfo_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> PtKanidouseiInfo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info) {
            return base.Channel.PtKanidouseiInfo_InsertRecordAsync(loginUser, info);
        }
        
        public bool PtKanidouseiInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info) {
            return base.Channel.PtKanidouseiInfo_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> PtKanidouseiInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info) {
            return base.Channel.PtKanidouseiInfo_UpdateRecordAsync(loginUser, info);
        }
        
        public bool PtKanidouseiInfo_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info) {
            return base.Channel.PtKanidouseiInfo_DeleteRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> PtKanidouseiInfo_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo info) {
            return base.Channel.PtKanidouseiInfo_DeleteRecordAsync(loginUser, info);
        }
        
        public bool PtKanidouseiInfo_重複チェック(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId, int msVesselId, System.DateTime eventDate, int Koma) {
            return base.Channel.PtKanidouseiInfo_重複チェック(loginUser, PtKanidouseiInfoId, msVesselId, eventDate, Koma);
        }
        
        public System.Threading.Tasks.Task<bool> PtKanidouseiInfo_重複チェックAsync(NBaseData.DAC.MsUser loginUser, string PtKanidouseiInfoId, int msVesselId, System.DateTime eventDate, int Koma) {
            return base.Channel.PtKanidouseiInfo_重複チェックAsync(loginUser, PtKanidouseiInfoId, msVesselId, eventDate, Koma);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordsByMsKichiID(NBaseData.DAC.MsUser loginUser, string ms_kichi_id) {
            return base.Channel.PtKanidouseiInfo_GetRecordsByMsKichiID(loginUser, ms_kichi_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordsByMsKichiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kichi_id) {
            return base.Channel.PtKanidouseiInfo_GetRecordsByMsKichiIDAsync(loginUser, ms_kichi_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordsByMsBashoID(NBaseData.DAC.MsUser loginUser, string ms_basho_id) {
            return base.Channel.PtKanidouseiInfo_GetRecordsByMsBashoID(loginUser, ms_basho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordsByMsBashoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_basho_id) {
            return base.Channel.PtKanidouseiInfo_GetRecordsByMsBashoIDAsync(loginUser, ms_basho_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo> PtKanidouseiInfo_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.PtKanidouseiInfo_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtKanidouseiInfo>> PtKanidouseiInfo_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.PtKanidouseiInfo_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsu> MsSiShubetsu_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShubetsu_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsu>> MsSiShubetsu_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShubetsu_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou> MsSiMenjou_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMenjou_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou>> MsSiMenjou_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMenjou_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou> MsSiMenjou_SearchRecords(NBaseData.DAC.MsUser loginUser, string name, string nameAbbr) {
            return base.Channel.MsSiMenjou_SearchRecords(loginUser, name, nameAbbr);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjou>> MsSiMenjou_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name, string nameAbbr) {
            return base.Channel.MsSiMenjou_SearchRecordsAsync(loginUser, name, nameAbbr);
        }
        
        public bool MsSiMenjou_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjou m) {
            return base.Channel.MsSiMenjou_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiMenjou_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjou m) {
            return base.Channel.MsSiMenjou_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSenin> MsSenin_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSenin_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> MsSenin_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSenin_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSenin> MsSenin_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter) {
            return base.Channel.MsSenin_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> MsSenin_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter) {
            return base.Channel.MsSenin_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public NBaseData.DAC.MsSenin MsSenin_GetRecord(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSenin_GetRecord(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSenin> MsSenin_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSenin_GetRecordAsync(loginUser, msSeninId);
        }
        
        public bool MsSenin_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin s) {
            return base.Channel.MsSenin_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<bool> MsSenin_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin s) {
            return base.Channel.MsSenin_InsertOrUpdateAsync(loginUser, s);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSenin> MsSenin_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.MsSenin_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> MsSenin_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.MsSenin_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public NBaseData.DAC.SiCard SiCard_GetRecord(NBaseData.DAC.MsUser loginUser, string siCardId) {
            return base.Channel.SiCard_GetRecord(loginUser, siCardId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiCard> SiCard_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siCardId) {
            return base.Channel.SiCard_GetRecordAsync(loginUser, siCardId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiCard_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiCard_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.SiCard_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.SiCard_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_Get_期間重複(NBaseData.DAC.MsUser loginUser, int msSeninId, string siCardId, System.DateTime start, System.DateTime end) {
            return base.Channel.SiCard_Get_期間重複(loginUser, msSeninId, siCardId, start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_Get_期間重複Async(NBaseData.DAC.MsUser loginUser, int msSeninId, string siCardId, System.DateTime start, System.DateTime end) {
            return base.Channel.SiCard_Get_期間重複Async(loginUser, msSeninId, siCardId, start, end);
        }
        
        public NBaseData.DAC.SiCard SiCard_Get_船長(NBaseData.DAC.MsUser loginUser, int msVesselId) {
            return base.Channel.SiCard_Get_船長(loginUser, msVesselId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiCard> SiCard_Get_船長Async(NBaseData.DAC.MsUser loginUser, int msVesselId) {
            return base.Channel.SiCard_Get_船長Async(loginUser, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> SiCard_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiCard_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> SiCard_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiCard_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiHaijouItem> SiHaijouItem_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiHaijouItem_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiHaijouItem>> SiHaijouItem_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiHaijouItem_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiMenjou_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> SiMenjou_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiMenjou_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public NBaseData.DAC.SiMenjou SiMenjou_GetRecord(NBaseData.DAC.MsUser loginUser, string siMenjouId) {
            return base.Channel.SiMenjou_GetRecord(loginUser, siMenjouId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siMenjouId) {
            return base.Channel.SiMenjou_GetRecordAsync(loginUser, siMenjouId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordsByMsSiMenjouKindID(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_kind_id) {
            return base.Channel.SiMenjou_GetRecordsByMsSiMenjouKindID(loginUser, ms_si_menjyo_kind_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> SiMenjou_GetRecordsByMsSiMenjouKindIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_kind_id) {
            return base.Channel.SiMenjou_GetRecordsByMsSiMenjouKindIDAsync(loginUser, ms_si_menjyo_kind_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiMenjou> SiMenjou_GetRecordsByMsSiMenjouID(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_id) {
            return base.Channel.SiMenjou_GetRecordsByMsSiMenjouID(loginUser, ms_si_menjyo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> SiMenjou_GetRecordsByMsSiMenjouIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_menjyo_id) {
            return base.Channel.SiMenjou_GetRecordsByMsSiMenjouIDAsync(loginUser, ms_si_menjyo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku> MsSiHiyouKamoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiHiyouKamoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku>> MsSiHiyouKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiHiyouKamoku_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku> MsSiHiyouKamoku_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiHiyouKamoku_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiHiyouKamoku>> MsSiHiyouKamoku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiHiyouKamoku_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsSiHiyouKamoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiHiyouKamoku m) {
            return base.Channel.MsSiHiyouKamoku_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiHiyouKamoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiHiyouKamoku m) {
            return base.Channel.MsSiHiyouKamoku_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMeisai_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMeisai_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecords削除を含む(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMeisai_GetRecords削除を含む(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecords削除を含むAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMeisai_GetRecords削除を含むAsync(loginUser);
        }
        
        public NBaseData.DAC.MsSiMeisai MsSiMeisai_GetRecord(NBaseData.DAC.MsUser loginUser, int meisaiId) {
            return base.Channel.MsSiMeisai_GetRecord(loginUser, meisaiId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int meisaiId) {
            return base.Channel.MsSiMeisai_GetRecordAsync(loginUser, meisaiId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_SearchRecords(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku himo, NBaseData.DAC.MsSiDaikoumoku kou) {
            return base.Channel.MsSiMeisai_SearchRecords(loginUser, name, himo, kou);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku himo, NBaseData.DAC.MsSiDaikoumoku kou) {
            return base.Channel.MsSiMeisai_SearchRecordsAsync(loginUser, name, himo, kou);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecordsByMsSiDaikoumokuID(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id) {
            return base.Channel.MsSiMeisai_GetRecordsByMsSiDaikoumokuID(loginUser, sidaikoumoku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecordsByMsSiDaikoumokuIDAsync(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id) {
            return base.Channel.MsSiMeisai_GetRecordsByMsSiDaikoumokuIDAsync(loginUser, sidaikoumoku_id);
        }
        
        public bool MsSiMeisai_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMeisai m) {
            return base.Channel.MsSiMeisai_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiMeisai_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMeisai m) {
            return base.Channel.MsSiMeisai_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai> MsSiMeisai_GetRecordsByMsSiKamokuID(NBaseData.DAC.MsUser loginUser, int ms_sikamoku_id) {
            return base.Channel.MsSiMeisai_GetRecordsByMsSiKamokuID(loginUser, ms_sikamoku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMeisai>> MsSiMeisai_GetRecordsByMsSiKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int ms_sikamoku_id) {
            return base.Channel.MsSiMeisai_GetRecordsByMsSiKamokuIDAsync(loginUser, ms_sikamoku_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku> MsSiDaikoumoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiDaikoumoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku>> MsSiDaikoumoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiDaikoumoku_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku> MsSiDaikoumoku_SearchRecords(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku ms_sihi) {
            return base.Channel.MsSiDaikoumoku_SearchRecords(loginUser, name, ms_sihi);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku>> MsSiDaikoumoku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name, NBaseData.DAC.MsSiHiyouKamoku ms_sihi) {
            return base.Channel.MsSiDaikoumoku_SearchRecordsAsync(loginUser, name, ms_sihi);
        }
        
        public bool MsSiDaikoumoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiDaikoumoku m) {
            return base.Channel.MsSiDaikoumoku_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiDaikoumoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiDaikoumoku m) {
            return base.Channel.MsSiDaikoumoku_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku> MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuID(NBaseData.DAC.MsUser loginUser, int ms_sihi_id) {
            return base.Channel.MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuID(loginUser, ms_sihi_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiDaikoumoku>> MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int ms_sihi_id) {
            return base.Channel.MsSiDaikoumoku_GetRecordsByMsSiHiyouKamokuIDAsync(loginUser, ms_sihi_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiJunbikin_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiJunbikin_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.SiJunbikin SiJunbikin_GetRecord(NBaseData.DAC.MsUser loginUser, string siJunbikinId) {
            return base.Channel.SiJunbikin_GetRecord(loginUser, siJunbikinId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siJunbikinId) {
            return base.Channel.SiJunbikin_GetRecordAsync(loginUser, siJunbikinId);
        }
        
        public bool SiJunbikin_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiJunbikin s) {
            return base.Channel.SiJunbikin_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<bool> SiJunbikin_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiJunbikin s) {
            return base.Channel.SiJunbikin_InsertOrUpdateAsync(loginUser, s);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByDateAndMsVesselID(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.SiJunbikin_GetRecordsByDateAndMsVesselID(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByDateAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.SiJunbikin_GetRecordsByDateAndMsVesselIDAsync(loginUser, date, msVesselId);
        }
        
        public decimal SiJunbikin_Get_先月末残高(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.SiJunbikin_Get_先月末残高(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<decimal> SiJunbikin_Get_先月末残高Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.SiJunbikin_Get_先月末残高Async(loginUser, date, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsSiHiyouKamokuID(NBaseData.DAC.MsUser loginUser, int sikamokuid) {
            return base.Channel.SiJunbikin_GetRecordsByMsSiHiyouKamokuID(loginUser, sikamokuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsSiHiyouKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int sikamokuid) {
            return base.Channel.SiJunbikin_GetRecordsByMsSiHiyouKamokuIDAsync(loginUser, sikamokuid);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsSiDaikoumokuID(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsSiDaikoumokuID(loginUser, sidaikoumoku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsSiDaikoumokuIDAsync(NBaseData.DAC.MsUser loginUser, int sidaikoumoku_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsSiDaikoumokuIDAsync(loginUser, sidaikoumoku_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsSIKamokuID(NBaseData.DAC.MsUser loginUser, int ms_si_kamoku_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsSIKamokuID(loginUser, ms_si_kamoku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsSIKamokuIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_kamoku_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsSIKamokuIDAsync(loginUser, ms_si_kamoku_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiJunbikin> SiJunbikin_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiJunbikin>> SiJunbikin_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiJunbikin_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiSoukin_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiSoukin_GetRecordsAsync(loginUser);
        }
        
        public bool SiSoukin_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin s) {
            return base.Channel.SiSoukin_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<bool> SiSoukin_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin s) {
            return base.Channel.SiSoukin_InsertOrUpdateAsync(loginUser, s);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordsByDateAndMsVesselID(NBaseData.DAC.MsUser loginUser, System.DateTime start, System.DateTime end, int msVesselId) {
            return base.Channel.SiSoukin_GetRecordsByDateAndMsVesselID(loginUser, start, end, msVesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsByDateAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, System.DateTime start, System.DateTime end, int msVesselId) {
            return base.Channel.SiSoukin_GetRecordsByDateAndMsVesselIDAsync(loginUser, start, end, msVesselId);
        }
        
        public NBaseData.DAC.SiSoukin SiSoukin_GetRecordByJunbikinId(NBaseData.DAC.MsUser loginUser, string siJunbikinId) {
            return base.Channel.SiSoukin_GetRecordByJunbikinId(loginUser, siJunbikinId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordByJunbikinIdAsync(NBaseData.DAC.MsUser loginUser, string siJunbikinId) {
            return base.Channel.SiSoukin_GetRecordByJunbikinIdAsync(loginUser, siJunbikinId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiSoukin_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.SiSoukin_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiSoukin> SiSoukin_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiSoukin_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSoukin>> SiSoukin_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiSoukin_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKazoku> SiKazoku_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiKazoku_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKazoku>> SiKazoku_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiKazoku_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKazoku> SiKazoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, int msSeninId, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus) {
            return base.Channel.SiKazoku_InsertOrUpdate(loginUser, msSeninId, kazokus);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKazoku>> SiKazoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus) {
            return base.Channel.SiKazoku_InsertOrUpdateAsync(loginUser, msSeninId, kazokus);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiRireki> SiRireki_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiRireki_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiRireki>> SiRireki_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiRireki_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public NBaseData.DAC.SiHaijou SiHaijou_GetRecord_前回配信(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiHaijou_GetRecord_前回配信(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiHaijou> SiHaijou_GetRecord_前回配信Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiHaijou_GetRecord_前回配信Async(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiHaijou> SiHaijou_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiHaijou_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiHaijou>> SiHaijou_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.SiHaijou_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public NBaseData.DAC.BgUnkouhi BgUnkouhi_GetRecord(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year) {
            return base.Channel.BgUnkouhi_GetRecord(loginUser, yosanHeadId, msVesselId, year);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgUnkouhi> BgUnkouhi_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year) {
            return base.Channel.BgUnkouhi_GetRecordAsync(loginUser, yosanHeadId, msVesselId, year);
        }
        
        public bool BgUnkouhi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgUnkouhi unkouhi) {
            return base.Channel.BgUnkouhi_UpdateRecord(loginUser, unkouhi);
        }
        
        public System.Threading.Tasks.Task<bool> BgUnkouhi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgUnkouhi unkouhi) {
            return base.Channel.BgUnkouhi_UpdateRecordAsync(loginUser, unkouhi);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem> BgUchiwakeYosanItem_GetRecords_入渠(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd) {
            return base.Channel.BgUchiwakeYosanItem_GetRecords_入渠(loginUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem>> BgUchiwakeYosanItem_GetRecords_入渠Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, string yearStart, string yearEnd) {
            return base.Channel.BgUchiwakeYosanItem_GetRecords_入渠Async(loginUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public NBaseData.DAC.BgYosanBikou BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselID(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId) {
            return base.Channel.BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselID(loginUser, yosanHeadId, msVesselId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgYosanBikou> BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId) {
            return base.Channel.BgYosanBikou_GetRecordByYosanHeadIDAndMsVesselIDAsync(loginUser, yosanHeadId, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanBikou> BgYosanBikou_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgYosanBikou_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanBikou>> BgYosanBikou_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgYosanBikou_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public NBaseData.DAC.BgYosanExcel BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndShubetsu(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int shubetsu) {
            return base.Channel.BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndShubetsu(loginUser, yosanHeadId, msVesselId, shubetsu);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgYosanExcel> BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndShubetsuAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int shubetsu) {
            return base.Channel.BgYosanExcel_GetRecordByYosanHeadIDAndMsVesselIdAndShubetsuAsync(loginUser, yosanHeadId, msVesselId, shubetsu);
        }
        
        public bool BgYosanExcel_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanExcel yosanExcel) {
            return base.Channel.BgYosanExcel_InsertOrUpdate(loginUser, yosanExcel);
        }
        
        public System.Threading.Tasks.Task<bool> BgYosanExcel_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanExcel yosanExcel) {
            return base.Channel.BgYosanExcel_InsertOrUpdateAsync(loginUser, yosanExcel);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku> MsSiKamoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKamoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku>> MsSiKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKamoku_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku> MsSiKamoku_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiKamoku_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKamoku>> MsSiKamoku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiKamoku_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsSiKamoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKamoku m) {
            return base.Channel.MsSiKamoku_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiKamoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKamoku m) {
            return base.Channel.MsSiKamoku_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind> MsSiMenjouKind_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMenjouKind_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind>> MsSiMenjouKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiMenjouKind_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind> MsSiMenjouKind_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiMenjouId, string name, string nameAbbr) {
            return base.Channel.MsSiMenjouKind_SearchRecords(loginUser, msSiMenjouId, name, nameAbbr);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind>> MsSiMenjouKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiMenjouId, string name, string nameAbbr) {
            return base.Channel.MsSiMenjouKind_SearchRecordsAsync(loginUser, msSiMenjouId, name, nameAbbr);
        }
        
        public bool MsSiMenjouKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjouKind m) {
            return base.Channel.MsSiMenjouKind_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiMenjouKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiMenjouKind m) {
            return base.Channel.MsSiMenjouKind_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind> MsSiMenjouKind_GetRecordsByMsSiMenjouID(NBaseData.DAC.MsUser loginUser, int ms_si_menjou_id) {
            return base.Channel.MsSiMenjouKind_GetRecordsByMsSiMenjouID(loginUser, ms_si_menjou_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiMenjouKind>> MsSiMenjouKind_GetRecordsByMsSiMenjouIDAsync(NBaseData.DAC.MsUser loginUser, int ms_si_menjou_id) {
            return base.Channel.MsSiMenjouKind_GetRecordsByMsSiMenjouIDAsync(loginUser, ms_si_menjou_id);
        }
        
        public NBaseData.DAC.PtPortalInfoFormat PtPortalInfoFormat_GetRecordByShubet_Koumoku_Kubun(NBaseData.DAC.MsUser loginUser, string msPortalInfoShubetuId, string msPortalInfoKoumokuId) {
            return base.Channel.PtPortalInfoFormat_GetRecordByShubet_Koumoku_Kubun(loginUser, msPortalInfoShubetuId, msPortalInfoKoumokuId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.PtPortalInfoFormat> PtPortalInfoFormat_GetRecordByShubet_Koumoku_KubunAsync(NBaseData.DAC.MsUser loginUser, string msPortalInfoShubetuId, string msPortalInfoKoumokuId) {
            return base.Channel.PtPortalInfoFormat_GetRecordByShubet_Koumoku_KubunAsync(loginUser, msPortalInfoShubetuId, msPortalInfoKoumokuId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItem> MsVesselItem_SearchRecords(NBaseData.DAC.MsUser loginUser, string msVesselItemId, string vesselItem, int CategoryNumber) {
            return base.Channel.MsVesselItem_SearchRecords(loginUser, msVesselItemId, vesselItem, CategoryNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItem>> MsVesselItem_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string msVesselItemId, string vesselItem, int CategoryNumber) {
            return base.Channel.MsVesselItem_SearchRecordsAsync(loginUser, msVesselItemId, vesselItem, CategoryNumber);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItemCategory> MsVesselItemCategory_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselItemCategory_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemCategory>> MsVesselItemCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselItemCategory_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselType> MsVesselType_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselType_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselType>> MsVesselType_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselType_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsVesselType MsVesselType_GetRecord(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselType_GetRecord(loginUser, id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVesselType> MsVesselType_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselType_GetRecordAsync(loginUser, id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCargo> MsCargo_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCargo_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargo>> MsCargo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCargo_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCargo> MsCargo_GetRecordsByCargoNoAndCargoName(NBaseData.DAC.MsUser loginUser, string CargoNo, string CargoName, int MsYusoItemID) {
            return base.Channel.MsCargo_GetRecordsByCargoNoAndCargoName(loginUser, CargoNo, CargoName, MsYusoItemID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargo>> MsCargo_GetRecordsByCargoNoAndCargoNameAsync(NBaseData.DAC.MsUser loginUser, string CargoNo, string CargoName, int MsYusoItemID) {
            return base.Channel.MsCargo_GetRecordsByCargoNoAndCargoNameAsync(loginUser, CargoNo, CargoName, MsYusoItemID);
        }
        
        public bool MsCargo_ExistCargo(NBaseData.DAC.MsUser loginUser, string CargoNo) {
            return base.Channel.MsCargo_ExistCargo(loginUser, CargoNo);
        }
        
        public System.Threading.Tasks.Task<bool> MsCargo_ExistCargoAsync(NBaseData.DAC.MsUser loginUser, string CargoNo) {
            return base.Channel.MsCargo_ExistCargoAsync(loginUser, CargoNo);
        }
        
        public bool MsCargo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo) {
            return base.Channel.MsCargo_InsertRecord(loginUser, cargo);
        }
        
        public System.Threading.Tasks.Task<bool> MsCargo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo) {
            return base.Channel.MsCargo_InsertRecordAsync(loginUser, cargo);
        }
        
        public bool MsCargo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo) {
            return base.Channel.MsCargo_UpdateRecord(loginUser, cargo);
        }
        
        public System.Threading.Tasks.Task<bool> MsCargo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo cargo) {
            return base.Channel.MsCargo_UpdateRecordAsync(loginUser, cargo);
        }
        
        public bool MsCargo_DeleteRecord(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsCargo cargo) {
            return base.Channel.MsCargo_DeleteRecord(loginUse, cargo);
        }
        
        public System.Threading.Tasks.Task<bool> MsCargo_DeleteRecordAsync(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsCargo cargo) {
            return base.Channel.MsCargo_DeleteRecordAsync(loginUse, cargo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozo> OdChozo_GetRecordsByShubetsu(NBaseData.DAC.MsUser loginUser, int shubetsu) {
            return base.Channel.OdChozo_GetRecordsByShubetsu(loginUser, shubetsu);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozo>> OdChozo_GetRecordsByShubetsuAsync(NBaseData.DAC.MsUser loginUser, int shubetsu) {
            return base.Channel.OdChozo_GetRecordsByShubetsuAsync(loginUser, shubetsu);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozo> OdChozo_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.OdChozo_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozo>> OdChozo_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.OdChozo_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public NBaseData.DAC.OdChozoShousai OdChozoShousai_GetRecord(NBaseData.DAC.MsUser loginUser, string OdChozoShousaiID) {
            return base.Channel.OdChozoShousai_GetRecord(loginUser, OdChozoShousaiID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string OdChozoShousaiID) {
            return base.Channel.OdChozoShousai_GetRecordAsync(loginUser, OdChozoShousaiID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Date(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Date(loginUser, vesselid, sdate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_DateAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_DateAsync(loginUser, vesselid, sdate);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Date_Shubetsu(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate, int syubetsu) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Date_Shubetsu(loginUser, vesselid, sdate, syubetsu);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Date_ShubetsuAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string sdate, int syubetsu) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Date_ShubetsuAsync(loginUser, vesselid, sdate, syubetsu);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Period_Shubetsu(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, int syubetsu) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Period_Shubetsu(loginUser, vesselid, start_date, end_date, syubetsu);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Period_ShubetsuAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, int syubetsu) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Period_ShubetsuAsync(loginUser, vesselid, start_date, end_date, syubetsu);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Period_MsLoID(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_lo_id) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Period_MsLoID(loginUser, vesselid, start_date, end_date, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Period_MsLoIDAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_lo_id) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Period_MsLoIDAsync(loginUser, vesselid, start_date, end_date, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByVesselID_Period_MsVesselItemID(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_item_id) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Period_MsVesselItemID(loginUser, vesselid, start_date, end_date, ms_item_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByVesselID_Period_MsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, int vesselid, string start_date, string end_date, string ms_item_id) {
            return base.Channel.OdChozoShousai_GetRecordsByVesselID_Period_MsVesselItemIDAsync(loginUser, vesselid, start_date, end_date, ms_item_id);
        }
        
        public bool OdChozoShousai_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdChozoShousai data) {
            return base.Channel.OdChozoShousai_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> OdChozoShousai_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdChozoShousai data) {
            return base.Channel.OdChozoShousai_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdChozoShousai_GetRecordsByMsVesselItemID(loginUser, ms_vesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdChozoShousai_GetRecordsByMsVesselItemIDAsync(loginUser, ms_vesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> OdChozoShousai_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdChozoShousai_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> OdChozoShousai_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdChozoShousai_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdFurikaeToritate> OdFurikaeToritate_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdFurikaeToritateFilter filter) {
            return base.Channel.OdFurikaeToritate_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdFurikaeToritate>> OdFurikaeToritate_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdFurikaeToritateFilter filter) {
            return base.Channel.OdFurikaeToritate_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public NBaseData.DAC.OdFurikaeToritate OdFurikaeToritate_GetRecord(NBaseData.DAC.MsUser loginUser, string odFurikaeToritateID) {
            return base.Channel.OdFurikaeToritate_GetRecord(loginUser, odFurikaeToritateID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdFurikaeToritate> OdFurikaeToritate_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odFurikaeToritateID) {
            return base.Channel.OdFurikaeToritate_GetRecordAsync(loginUser, odFurikaeToritateID);
        }
        
        public bool OdFurikaeToritate_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info) {
            return base.Channel.OdFurikaeToritate_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdFurikaeToritate_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info) {
            return base.Channel.OdFurikaeToritate_InsertAsync(loginUser, info);
        }
        
        public bool OdFurikaeToritate_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info) {
            return base.Channel.OdFurikaeToritate_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdFurikaeToritate_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdFurikaeToritate info) {
            return base.Channel.OdFurikaeToritate_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo> OdGaisanKeijo_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdGaisanKeijo_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo>> OdGaisanKeijo_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdGaisanKeijo_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public string OdGaisanKeijo_GetLatestNengetsu(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdGaisanKeijo_GetLatestNengetsu(loginUser);
        }
        
        public System.Threading.Tasks.Task<string> OdGaisanKeijo_GetLatestNengetsuAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdGaisanKeijo_GetLatestNengetsuAsync(loginUser);
        }
        
        public NBaseData.DAC.OdGetsujiShime OdGetsujiShime_GetRecordByLastDate(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdGetsujiShime_GetRecordByLastDate(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdGetsujiShime> OdGetsujiShime_GetRecordByLastDateAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdGetsujiShime_GetRecordByLastDateAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdGetsujiShime> OdGetsujiShime_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdGetsujiShime_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdGetsujiShime>> OdGetsujiShime_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdGetsujiShime_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public NBaseData.DAC.OdHachuMail OdHachuMail_GetRecord(NBaseData.DAC.MsUser loginUser, string odMkId, string tantousha, string mailAdress, string subject) {
            return base.Channel.OdHachuMail_GetRecord(loginUser, odMkId, tantousha, mailAdress, subject);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdHachuMail> OdHachuMail_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odMkId, string tantousha, string mailAdress, string subject) {
            return base.Channel.OdHachuMail_GetRecordAsync(loginUser, odMkId, tantousha, mailAdress, subject);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdHachuMail> OdHachuMail_GetRecords(NBaseData.DAC.MsUser loginUser, string odMkId) {
            return base.Channel.OdHachuMail_GetRecords(loginUser, odMkId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuMail>> OdHachuMail_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string odMkId) {
            return base.Channel.OdHachuMail_GetRecordsAsync(loginUser, odMkId);
        }
        
        public bool OdHachuMail_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info) {
            return base.Channel.OdHachuMail_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdHachuMail_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info) {
            return base.Channel.OdHachuMail_InsertAsync(loginUser, info);
        }
        
        public bool OdHachuMail_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info) {
            return base.Channel.OdHachuMail_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdHachuMail_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdHachuMail info) {
            return base.Channel.OdHachuMail_UpdateAsync(loginUser, info);
        }
        
        public NBaseData.DAC.OdHachuTanka OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_Date(NBaseData.DAC.MsUser loginUser, string mslovesselid, string msvesselitemid, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_Date(loginUser, mslovesselid, msvesselitemid, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_DateAsync(NBaseData.DAC.MsUser loginUser, string mslovesselid, string msvesselitemid, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdHachuTanka_GetRecordByMsLoID_MsVesselItemID_DateAsync(loginUser, mslovesselid, msvesselitemid, startdate, enddate);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMsVesselItemID_Date_LO(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdHachuTanka_GetRecordsByMsVesselItemID_Date_LO(loginUser, msvesselid, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMsVesselItemID_Date_LOAsync(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdHachuTanka_GetRecordsByMsVesselItemID_Date_LOAsync(loginUser, msvesselid, startdate, enddate);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselItem(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselItem(loginUser, msvesselid, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselItemAsync(NBaseData.DAC.MsUser loginUser, int msvesselid, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdHachuTanka_GetRecordsByMsVesselItemID_Date_VesselItemAsync(loginUser, msvesselid, startdate, enddate);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdHachuTanka_GetRecordsByMsVesselItemID(loginUser, ms_vesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdHachuTanka_GetRecordsByMsVesselItemIDAsync(loginUser, ms_vesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka> OdHachuTanka_GetRecordsByMaLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdHachuTanka_GetRecordsByMaLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdHachuTanka>> OdHachuTanka_GetRecordsByMaLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdHachuTanka_GetRecordsByMaLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date(loginUser, syubetsu, status, ms_vessel_id, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_DateAsync(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_DateAsync(loginUser, syubetsu, status, ms_vessel_id, startdate, enddate);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdJryShousaiItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdJryShousaiItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdJryShousaiItem_GetRecordByOdJryID(loginUser, odJryID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdJryShousaiItem_GetRecordByOdJryIDAsync(loginUser, odJryID);
        }
        
        public bool OdJryShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info) {
            return base.Channel.OdJryShousaiItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdJryShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info) {
            return base.Channel.OdJryShousaiItem_InsertAsync(loginUser, info);
        }
        
        public bool OdJryShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info) {
            return base.Channel.OdJryShousaiItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdJryShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJryShousaiItem info) {
            return base.Channel.OdJryShousaiItem_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsLoID(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_lo_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsLoID(loginUser, syubetsu, status, ms_vessel_id, startdate, enddate, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsLoIDAsync(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_lo_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsLoIDAsync(loginUser, syubetsu, status, ms_vessel_id, startdate, enddate, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsVesselItemID(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_ves_item_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsVesselItemID(loginUser, syubetsu, status, ms_vessel_id, startdate, enddate, ms_ves_item_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string syubetsu, int status, int ms_vessel_id, System.DateTime startdate, System.DateTime enddate, string ms_ves_item_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselID_JryStatus_ShousaiID_Date_MsVesselItemIDAsync(loginUser, syubetsu, status, ms_vessel_id, startdate, enddate, ms_ves_item_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselItemID(loginUser, ms_vesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsVesselItemIDAsync(loginUser, ms_vesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem>> OdJryShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdJryShousaiItem_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdThi_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdThi_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdThi_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdThi_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public NBaseData.DAC.OdThi OdThi_GetRecord(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.OdThi_GetRecord(loginUser, odThiID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.OdThi_GetRecordAsync(loginUser, odThiID);
        }
        
        public NBaseData.DAC.OdThi OdThi_GetRecordByOdMkID(NBaseData.DAC.MsUser loginUser, string odOkID) {
            return base.Channel.OdThi_GetRecordByOdMkID(loginUser, odOkID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odOkID) {
            return base.Channel.OdThi_GetRecordByOdMkIDAsync(loginUser, odOkID);
        }
        
        public NBaseData.DAC.OdThi OdThi_GetRecordByOdJryID(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdThi_GetRecordByOdJryID(loginUser, odJryID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordByOdJryIDAsync(NBaseData.DAC.MsUser loginUser, string odJryID) {
            return base.Channel.OdThi_GetRecordByOdJryIDAsync(loginUser, odJryID);
        }
        
        public NBaseData.DAC.OdThi OdThi_GetRecordByOdShrID(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdThi_GetRecordByOdShrID(loginUser, odShrID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdThi> OdThi_GetRecordByOdShrIDAsync(NBaseData.DAC.MsUser loginUser, string odShrID) {
            return base.Channel.OdThi_GetRecordByOdShrIDAsync(loginUser, odShrID);
        }
        
        public bool OdThi_Insert() {
            return base.Channel.OdThi_Insert();
        }
        
        public System.Threading.Tasks.Task<bool> OdThi_InsertAsync() {
            return base.Channel.OdThi_InsertAsync();
        }
        
        public bool OdThi_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi info) {
            return base.Channel.OdThi_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdThi_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi info) {
            return base.Channel.OdThi_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecordsByVesselId(NBaseData.DAC.MsUser loginUser, int vesselId) {
            return base.Channel.OdThi_GetRecordsByVesselId(loginUser, vesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsByVesselIdAsync(NBaseData.DAC.MsUser loginUser, int vesselId) {
            return base.Channel.OdThi_GetRecordsByVesselIdAsync(loginUser, vesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThi> OdThi_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdThi_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThi>> OdThi_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdThi_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsItemSbt> MsItemSbt_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsItemSbt_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsItemSbt>> MsItemSbt_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsItemSbt_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsTani> MsTani_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsTani_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsTani>> MsTani_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsTani_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdThiItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiItem>> OdThiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdThiItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItem_GetRecordByOdThiID(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.OdThiItem_GetRecordByOdThiID(loginUser, odThiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiItem>> OdThiItem_GetRecordByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.OdThiItem_GetRecordByOdThiIDAsync(loginUser, odThiID);
        }
        
        public bool OdThiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info) {
            return base.Channel.OdThiItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdThiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info) {
            return base.Channel.OdThiItem_InsertAsync(loginUser, info);
        }
        
        public bool OdThiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info) {
            return base.Channel.OdThiItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdThiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiItem info) {
            return base.Channel.OdThiItem_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdThiShousaiItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdThiShousaiItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordByOdThiID(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.OdThiShousaiItem_GetRecordByOdThiID(loginUser, odThiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.OdThiShousaiItem_GetRecordByOdThiIDAsync(loginUser, odThiID);
        }
        
        public bool OdThiShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info) {
            return base.Channel.OdThiShousaiItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdThiShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info) {
            return base.Channel.OdThiShousaiItem_InsertAsync(loginUser, info);
        }
        
        public bool OdThiShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info) {
            return base.Channel.OdThiShousaiItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdThiShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThiShousaiItem info) {
            return base.Channel.OdThiShousaiItem_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdThiShousaiItem_GetRecordsByMsVesselItemID(loginUser, ms_vesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdThiShousaiItem_GetRecordsByMsVesselItemIDAsync(loginUser, ms_vesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdThiShousaiItem_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdThiShousaiItem_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItem_GetRecordByThiIraiSbtID(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, int msVesselId) {
            return base.Channel.OdThiShousaiItem_GetRecordByThiIraiSbtID(loginUser, thiIraiSbtId, msVesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem>> OdThiShousaiItem_GetRecordByThiIraiSbtIDAsync(NBaseData.DAC.MsUser loginUser, string thiIraiSbtId, int msVesselId) {
            return base.Channel.OdThiShousaiItem_GetRecordByThiIraiSbtIDAsync(loginUser, thiIraiSbtId, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordByMsVesselID(NBaseData.DAC.MsUser loginUser, int MsVesslID) {
            return base.Channel.MsVesselItemVessel_GetRecordByMsVesselID(loginUser, MsVesslID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID) {
            return base.Channel.MsVesselItemVessel_GetRecordByMsVesselIDAsync(loginUser, MsVesslID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName) {
            return base.Channel.MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName(loginUser, MsVesslID, CategoryNumber, VesselItemName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNameAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName) {
            return base.Channel.MsVesselItemVessel_GetRecordByMsVesselIDVesselItemNameAsync(loginUser, MsVesslID, CategoryNumber, VesselItemName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselItemVessel_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselItemVessel_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName2(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName) {
            return base.Channel.MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName2(loginUser, MsVesslID, CategoryNumber, VesselItemName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName2Async(NBaseData.DAC.MsUser loginUser, int MsVesslID, int CategoryNumber, string VesselItemName) {
            return base.Channel.MsVesselItemVessel_GetRecordByMsVesselIDVesselItemName2Async(loginUser, MsVesslID, CategoryNumber, VesselItemName);
        }
        
        public bool MsVesselItemVessel_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.MsVesselItemVessel_Insert(loginUser, msVesselItemVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselItemVessel_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.MsVesselItemVessel_InsertAsync(loginUser, msVesselItemVessel);
        }
        
        public bool MsVesselItemVessel_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.MsVesselItemVessel_Update(loginUser, msVesselItemVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselItemVessel_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.MsVesselItemVessel_UpdateAsync(loginUser, msVesselItemVessel);
        }
        
        public bool MsVesselItemVessel_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.MsVesselItemVessel_DeleteRecord(loginUser, msVesselItemVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselItemVessel_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.MsVesselItemVessel_DeleteRecordAsync(loginUser, msVesselItemVessel);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel> MsVesselItemVessel_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string msvesselitem_id) {
            return base.Channel.MsVesselItemVessel_GetRecordsByMsVesselItemID(loginUser, msvesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItemVessel>> MsVesselItemVessel_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string msvesselitem_id) {
            return base.Channel.MsVesselItemVessel_GetRecordsByMsVesselItemIDAsync(loginUser, msvesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsNyukyoKamoku> MsNyukyoKamoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsNyukyoKamoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsNyukyoKamoku>> MsNyukyoKamoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsNyukyoKamoku_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShrJouken> MsShrJouken_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsShrJouken_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShrJouken>> MsShrJouken_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsShrJouken_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomer_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomer_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_GetRecords削除を含む(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomer_GetRecords削除を含む(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_GetRecords削除を含むAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomer_GetRecords削除を含むAsync(loginUser);
        }
        
        public NBaseData.DAC.MsCustomer MsCustomer_GetRecord(NBaseData.DAC.MsUser loginUser, string MsCustomerID) {
            return base.Channel.MsCustomer_GetRecord(loginUser, MsCustomerID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsCustomer> MsCustomer_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string MsCustomerID) {
            return base.Channel.MsCustomer_GetRecordAsync(loginUser, MsCustomerID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_SearchRecords(NBaseData.DAC.MsUser loginUser, string customerID, string customerName, bool isClient, bool isAgency, bool isConsignor, bool isComapny, bool isSchool, bool isAppointed, bool isInspection) {
            return base.Channel.MsCustomer_SearchRecords(loginUser, customerID, customerName, isClient, isAgency, isConsignor, isComapny, isSchool, isAppointed, isInspection);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string customerID, string customerName, bool isClient, bool isAgency, bool isConsignor, bool isComapny, bool isSchool, bool isAppointed, bool isInspection) {
            return base.Channel.MsCustomer_SearchRecordsAsync(loginUser, customerID, customerName, isClient, isAgency, isConsignor, isComapny, isSchool, isAppointed, isInspection);
        }
        
        public bool MsCustomer_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer) {
            return base.Channel.MsCustomer_InsertRecord(loginUser, customer);
        }
        
        public System.Threading.Tasks.Task<bool> MsCustomer_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer) {
            return base.Channel.MsCustomer_InsertRecordAsync(loginUser, customer);
        }
        
        public bool MsCustomer_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer) {
            return base.Channel.MsCustomer_UpdateRecord(loginUser, customer);
        }
        
        public System.Threading.Tasks.Task<bool> MsCustomer_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer) {
            return base.Channel.MsCustomer_UpdateRecordAsync(loginUser, customer);
        }
        
        public bool MsCustomer_DeleteFlagRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer) {
            return base.Channel.MsCustomer_DeleteFlagRecord(loginUser, customer);
        }
        
        public System.Threading.Tasks.Task<bool> MsCustomer_DeleteFlagRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCustomer customer) {
            return base.Channel.MsCustomer_DeleteFlagRecordAsync(loginUser, customer);
        }
        
        public NBaseData.DAC.MsCustomer MsCustomer_GetRecordByLoginId(NBaseData.DAC.MsUser loginUser, string LoginId) {
            return base.Channel.MsCustomer_GetRecordByLoginId(loginUser, LoginId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsCustomer> MsCustomer_GetRecordByLoginIdAsync(NBaseData.DAC.MsUser loginUser, string LoginId) {
            return base.Channel.MsCustomer_GetRecordByLoginIdAsync(loginUser, LoginId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCustomer> MsCustomer_GetRecords_代理店(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomer_GetRecords_代理店(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomer>> MsCustomer_GetRecords_代理店Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomer_GetRecords_代理店Async(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou> MsCustomerTantou_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomerTantou_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou>> MsCustomerTantou_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCustomerTantou_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou> MsCustomerTantou_GetRecordsByCustomerID(NBaseData.DAC.MsUser loginUser, string customerId) {
            return base.Channel.MsCustomerTantou_GetRecordsByCustomerID(loginUser, customerId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCustomerTantou>> MsCustomerTantou_GetRecordsByCustomerIDAsync(NBaseData.DAC.MsUser loginUser, string customerId) {
            return base.Channel.MsCustomerTantou_GetRecordsByCustomerIDAsync(loginUser, customerId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMm> OdMm_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMm_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMm>> OdMm_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMm_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMm> OdMm_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdMm_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMm>> OdMm_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdMm_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public NBaseData.DAC.OdMm OdMm_GetRecord(NBaseData.DAC.MsUser loginUser, string odMmID) {
            return base.Channel.OdMm_GetRecord(loginUser, odMmID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdMm> OdMm_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odMmID) {
            return base.Channel.OdMm_GetRecordAsync(loginUser, odMmID);
        }
        
        public bool OdMm_Insert() {
            return base.Channel.OdMm_Insert();
        }
        
        public System.Threading.Tasks.Task<bool> OdMm_InsertAsync() {
            return base.Channel.OdMm_InsertAsync();
        }
        
        public bool OdMm_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm info) {
            return base.Channel.OdMm_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMm_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm info) {
            return base.Channel.OdMm_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMm> OdMm_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdMm_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMm>> OdMm_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.OdMm_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMmItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmItem>> OdMmItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMmItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItem_GetRecordsByOdMmID(NBaseData.DAC.MsUser loginUser, string odMmID) {
            return base.Channel.OdMmItem_GetRecordsByOdMmID(loginUser, odMmID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmItem>> OdMmItem_GetRecordsByOdMmIDAsync(NBaseData.DAC.MsUser loginUser, string odMmID) {
            return base.Channel.OdMmItem_GetRecordsByOdMmIDAsync(loginUser, odMmID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItem_GetRecordsByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMmItem_GetRecordsByOdMkID(loginUser, odMkID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmItem>> OdMmItem_GetRecordsByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMmItem_GetRecordsByOdMkIDAsync(loginUser, odMkID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMmShousaiItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMmShousaiItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordByOdMmID(NBaseData.DAC.MsUser loginUser, string odMmID) {
            return base.Channel.OdMmShousaiItem_GetRecordByOdMmID(loginUser, odMmID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordByOdMmIDAsync(NBaseData.DAC.MsUser loginUser, string odMmID) {
            return base.Channel.OdMmShousaiItem_GetRecordByOdMmIDAsync(loginUser, odMmID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMmShousaiItem_GetRecordByOdMkID(loginUser, odMkID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMmShousaiItem_GetRecordByOdMkIDAsync(loginUser, odMkID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdMmShousaiItem_GetRecordsByMsVesselItemID(loginUser, ms_vesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string ms_vesselitem_id) {
            return base.Channel.OdMmShousaiItem_GetRecordsByMsVesselItemIDAsync(loginUser, ms_vesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdMmShousaiItem_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem>> OdMmShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdMmShousaiItem_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMk> OdMk_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMk_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMk>> OdMk_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMk_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.OdMk OdMk_GetRecordByOdThiID(NBaseData.DAC.MsUser loginUser, string OdThiID) {
            return base.Channel.OdMk_GetRecordByOdThiID(loginUser, OdThiID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdMk> OdMk_GetRecordByOdThiIDAsync(NBaseData.DAC.MsUser loginUser, string OdThiID) {
            return base.Channel.OdMk_GetRecordByOdThiIDAsync(loginUser, OdThiID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMk> OdMk_GetRecordsByOdMmID(NBaseData.DAC.MsUser loginUser, string OdMmID) {
            return base.Channel.OdMk_GetRecordsByOdMmID(loginUser, OdMmID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMk>> OdMk_GetRecordsByOdMmIDAsync(NBaseData.DAC.MsUser loginUser, string OdMmID) {
            return base.Channel.OdMk_GetRecordsByOdMmIDAsync(loginUser, OdMmID);
        }
        
        public NBaseData.DAC.OdMk OdMk_GetRecordByWebKey(NBaseData.DAC.MsUser loginUser, string WebKey) {
            return base.Channel.OdMk_GetRecordByWebKey(loginUser, WebKey);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdMk> OdMk_GetRecordByWebKeyAsync(NBaseData.DAC.MsUser loginUser, string WebKey) {
            return base.Channel.OdMk_GetRecordByWebKeyAsync(loginUser, WebKey);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMk> OdMk_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdMk_GetRecordsByFilter(loginUser, status, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMk>> OdMk_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, int status, NBaseData.DS.OdThiFilter filter) {
            return base.Channel.OdMk_GetRecordsByFilterAsync(loginUser, status, filter);
        }
        
        public NBaseData.DAC.OdMk OdMk_GetRecord(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMk_GetRecord(loginUser, odMkID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdMk> OdMk_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMk_GetRecordAsync(loginUser, odMkID);
        }
        
        public bool OdMk_Insert() {
            return base.Channel.OdMk_Insert();
        }
        
        public System.Threading.Tasks.Task<bool> OdMk_InsertAsync() {
            return base.Channel.OdMk_InsertAsync();
        }
        
        public bool OdMk_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk info) {
            return base.Channel.OdMk_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMk_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk info) {
            return base.Channel.OdMk_UpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMkItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkItem>> OdMkItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMkItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItem_GetRecordsByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMkItem_GetRecordsByOdMkID(loginUser, odMkID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkItem>> OdMkItem_GetRecordsByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMkItem_GetRecordsByOdMkIDAsync(loginUser, odMkID);
        }
        
        public NBaseData.DAC.OdMkItem OdMkItem_GetRecord(NBaseData.DAC.MsUser loginUser, string OdMkItemID) {
            return base.Channel.OdMkItem_GetRecord(loginUser, OdMkItemID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdMkItem> OdMkItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string OdMkItemID) {
            return base.Channel.OdMkItem_GetRecordAsync(loginUser, OdMkItemID);
        }
        
        public bool OdMkItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info) {
            return base.Channel.OdMkItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMkItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info) {
            return base.Channel.OdMkItem_InsertAsync(loginUser, info);
        }
        
        public bool OdMkItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info) {
            return base.Channel.OdMkItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMkItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info) {
            return base.Channel.OdMkItem_UpdateAsync(loginUser, info);
        }
        
        public bool OdMkItem_Delete(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info) {
            return base.Channel.OdMkItem_Delete(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMkItem_DeleteAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkItem info) {
            return base.Channel.OdMkItem_DeleteAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMkShousaiItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdMkShousaiItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordByOdMkID(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMkShousaiItem_GetRecordByOdMkID(loginUser, odMkID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordByOdMkIDAsync(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.OdMkShousaiItem_GetRecordByOdMkIDAsync(loginUser, odMkID);
        }
        
        public NBaseData.DAC.OdMkShousaiItem OdMkShousaiItem_GetRecord(NBaseData.DAC.MsUser loginUser, string OdMkShousaiItemID) {
            return base.Channel.OdMkShousaiItem_GetRecord(loginUser, OdMkShousaiItemID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string OdMkShousaiItemID) {
            return base.Channel.OdMkShousaiItem_GetRecordAsync(loginUser, OdMkShousaiItemID);
        }
        
        public bool OdMkShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info) {
            return base.Channel.OdMkShousaiItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMkShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info) {
            return base.Channel.OdMkShousaiItem_InsertAsync(loginUser, info);
        }
        
        public bool OdMkShousaiItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info) {
            return base.Channel.OdMkShousaiItem_Update(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMkShousaiItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info) {
            return base.Channel.OdMkShousaiItem_UpdateAsync(loginUser, info);
        }
        
        public bool OdMkShousaiItem_Delete(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info) {
            return base.Channel.OdMkShousaiItem_Delete(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> OdMkShousaiItem_DeleteAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMkShousaiItem info) {
            return base.Channel.OdMkShousaiItem_DeleteAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string msvesselitem_id) {
            return base.Channel.OdMkShousaiItem_GetRecordsByMsVesselItemID(loginUser, msvesselitem_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string msvesselitem_id) {
            return base.Channel.OdMkShousaiItem_GetRecordsByMsVesselItemIDAsync(loginUser, msvesselitem_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItem_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdMkShousaiItem_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem>> OdMkShousaiItem_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.OdMkShousaiItem_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdJryItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdJryItem>> OdJryItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.OdJryItem_GetRecordsAsync(loginUser);
        }
        
        public bool KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書ID(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, string ks_shousho_id) {
            return base.Channel.KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書ID(loginUser, ms_shinsa_id, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<bool> KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書IDAsync(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, string ks_shousho_id) {
            return base.Channel.KsShoushoShinsaLink_DeleteRecordBy審査マスタID証書IDAsync(loginUser, ms_shinsa_id, ks_shousho_id);
        }
        
        public bool KsShoushoShinsaLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoShinsaLink data) {
            return base.Channel.KsShoushoShinsaLink_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShoushoShinsaLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoShinsaLink data) {
            return base.Channel.KsShoushoShinsaLink_InsertRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate> MsAlarmDate_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAlarmDate_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate>> MsAlarmDate_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAlarmDate_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsAlarmDate MsAlarmDate_GetRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate.MsAlarmDateIDNo id) {
            return base.Channel.MsAlarmDate_GetRecord(loginUser, id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsAlarmDate> MsAlarmDate_GetRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate.MsAlarmDateIDNo id) {
            return base.Channel.MsAlarmDate_GetRecordAsync(loginUser, id);
        }
        
        public bool MsAlarmDate_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data) {
            return base.Channel.MsAlarmDate_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> MsAlarmDate_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data) {
            return base.Channel.MsAlarmDate_InsertRecordAsync(loginUser, data);
        }
        
        public bool MsAlarmDate_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data) {
            return base.Channel.MsAlarmDate_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> MsAlarmDate_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAlarmDate data) {
            return base.Channel.MsAlarmDate_UpdateRecordAsync(loginUser, data);
        }
        
        public bool MsAlarmDate_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate> datas) {
            return base.Channel.MsAlarmDate_UpdateRecords(loginUser, datas);
        }
        
        public System.Threading.Tasks.Task<bool> MsAlarmDate_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsAlarmDate> datas) {
            return base.Channel.MsAlarmDate_UpdateRecordsAsync(loginUser, datas);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBasho_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBasho_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordsBy港(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBasho_GetRecordsBy港(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsBy港Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBasho_GetRecordsBy港Async(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordLikeBashoName(NBaseData.DAC.MsUser loginUser, string bashoName) {
            return base.Channel.MsBasho_GetRecordLikeBashoName(loginUser, bashoName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordLikeBashoNameAsync(NBaseData.DAC.MsUser loginUser, string bashoName) {
            return base.Channel.MsBasho_GetRecordLikeBashoNameAsync(loginUser, bashoName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordsByBashoNoBashoNameBashoKubun(NBaseData.DAC.MsUser loginUser, string bashoNo, string bashoName, string bashoKubunId) {
            return base.Channel.MsBasho_GetRecordsByBashoNoBashoNameBashoKubun(loginUser, bashoNo, bashoName, bashoKubunId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsByBashoNoBashoNameBashoKubunAsync(NBaseData.DAC.MsUser loginUser, string bashoNo, string bashoName, string bashoKubunId) {
            return base.Channel.MsBasho_GetRecordsByBashoNoBashoNameBashoKubunAsync(loginUser, bashoNo, bashoName, bashoKubunId);
        }
        
        public bool MsBasho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho) {
            return base.Channel.MsBasho_InsertRecord(loginUser, msBasho);
        }
        
        public System.Threading.Tasks.Task<bool> MsBasho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho) {
            return base.Channel.MsBasho_InsertRecordAsync(loginUser, msBasho);
        }
        
        public bool MsBasho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho) {
            return base.Channel.MsBasho_UpdateRecord(loginUser, msBasho);
        }
        
        public System.Threading.Tasks.Task<bool> MsBasho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBasho msBasho) {
            return base.Channel.MsBasho_UpdateRecordAsync(loginUser, msBasho);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBasho> MsBasho_GetRecordsByBashoKubun(NBaseData.DAC.MsUser loginUser, string bashoKubunId) {
            return base.Channel.MsBasho_GetRecordsByBashoKubun(loginUser, bashoKubunId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBasho>> MsBasho_GetRecordsByBashoKubunAsync(NBaseData.DAC.MsUser loginUser, string bashoKubunId) {
            return base.Channel.MsBasho_GetRecordsByBashoKubunAsync(loginUser, bashoKubunId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBerth> MsBerth_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBerth_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBerth>> MsBerth_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBerth_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBerth> MsBerth_GetRecordByBerthCodeBerthName(NBaseData.DAC.MsUser loginUser, string berthCode, string berthName) {
            return base.Channel.MsBerth_GetRecordByBerthCodeBerthName(loginUser, berthCode, berthName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBerth>> MsBerth_GetRecordByBerthCodeBerthNameAsync(NBaseData.DAC.MsUser loginUser, string berthCode, string berthName) {
            return base.Channel.MsBerth_GetRecordByBerthCodeBerthNameAsync(loginUser, berthCode, berthName);
        }
        
        public NBaseData.DAC.MsBerth MsBerth_GetRecordByBerthCode(NBaseData.DAC.MsUser loginUser, string berthCode) {
            return base.Channel.MsBerth_GetRecordByBerthCode(loginUser, berthCode);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsBerth> MsBerth_GetRecordByBerthCodeAsync(NBaseData.DAC.MsUser loginUser, string berthCode) {
            return base.Channel.MsBerth_GetRecordByBerthCodeAsync(loginUser, berthCode);
        }
        
        public bool MsBerth_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth) {
            return base.Channel.MsBerth_InsertRecord(loginUser, berth);
        }
        
        public System.Threading.Tasks.Task<bool> MsBerth_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth) {
            return base.Channel.MsBerth_InsertRecordAsync(loginUser, berth);
        }
        
        public bool MsBerth_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth) {
            return base.Channel.MsBerth_UpdateRecord(loginUser, berth);
        }
        
        public System.Threading.Tasks.Task<bool> MsBerth_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBerth berth) {
            return base.Channel.MsBerth_UpdateRecordAsync(loginUser, berth);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBerth> MsBerth_GetRecordByMsKichiID(NBaseData.DAC.MsUser loginUser, string ms_kichi_id) {
            return base.Channel.MsBerth_GetRecordByMsKichiID(loginUser, ms_kichi_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBerth>> MsBerth_GetRecordByMsKichiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kichi_id) {
            return base.Channel.MsBerth_GetRecordByMsKichiIDAsync(loginUser, ms_kichi_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBumon> MsBumon_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBumon>> MsBumon_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsBumon MsBumon_GetRecordsByBumonID(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_GetRecordsByBumonID(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsBumon> MsBumon_GetRecordsByBumonIDAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_GetRecordsByBumonIDAsync(loginUser);
        }
        
        public bool MsBumon_Insert(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_Insert(loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> MsBumon_InsertAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_InsertAsync(loginUser);
        }
        
        public bool MsBumon_Update(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_Update(loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> MsBumon_UpdateAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBumon_UpdateAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsYusoItem> MsYusoItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsYusoItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsYusoItem>> MsYusoItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsYusoItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsYusoItem> MsYusoItem_GetRecordsByYusoItemName(NBaseData.DAC.MsUser loginUser, string yusoItemName) {
            return base.Channel.MsYusoItem_GetRecordsByYusoItemName(loginUser, yusoItemName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsYusoItem>> MsYusoItem_GetRecordsByYusoItemNameAsync(NBaseData.DAC.MsUser loginUser, string yusoItemName) {
            return base.Channel.MsYusoItem_GetRecordsByYusoItemNameAsync(loginUser, yusoItemName);
        }
        
        public NBaseData.DAC.MsYusoItem MsYusoItem_GetRecord(NBaseData.DAC.MsUser loginUser, int MsYusoItemID) {
            return base.Channel.MsYusoItem_GetRecord(loginUser, MsYusoItemID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsYusoItem> MsYusoItem_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int MsYusoItemID) {
            return base.Channel.MsYusoItem_GetRecordAsync(loginUser, MsYusoItemID);
        }
        
        public bool MsYusoItem_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem) {
            return base.Channel.MsYusoItem_InsertRecord(loginUser, yusoItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsYusoItem_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem) {
            return base.Channel.MsYusoItem_InsertRecordAsync(loginUser, yusoItem);
        }
        
        public bool MsYusoItem_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem) {
            return base.Channel.MsYusoItem_UpdateRecord(loginUser, yusoItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsYusoItem_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsYusoItem yusoItem) {
            return base.Channel.MsYusoItem_UpdateRecordAsync(loginUser, yusoItem);
        }
        
        public bool MsYusoItem_DeleteRecord(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsYusoItem yusoItem) {
            return base.Channel.MsYusoItem_DeleteRecord(loginUse, yusoItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsYusoItem_DeleteRecordAsync(NBaseData.DAC.MsUser loginUse, NBaseData.DAC.MsYusoItem yusoItem) {
            return base.Channel.MsYusoItem_DeleteRecordAsync(loginUse, yusoItem);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsHimoku> MsHimoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsHimoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsHimoku>> MsHimoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsHimoku_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsHimoku MsHimoku_GetRecord(NBaseData.DAC.MsUser loginUser, int msHimokuId) {
            return base.Channel.MsHimoku_GetRecord(loginUser, msHimokuId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsHimoku> MsHimoku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int msHimokuId) {
            return base.Channel.MsHimoku_GetRecordAsync(loginUser, msHimokuId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsHimoku> MsHimoku_GetRecordsWithMsKamoku(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsHimoku_GetRecordsWithMsKamoku(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsHimoku>> MsHimoku_GetRecordsWithMsKamokuAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsHimoku_GetRecordsWithMsKamokuAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsHimoku> MsHimoku_GetRecordsByMsBumonID(NBaseData.DAC.MsUser loginUser, int bumonid) {
            return base.Channel.MsHimoku_GetRecordsByMsBumonID(loginUser, bumonid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsHimoku>> MsHimoku_GetRecordsByMsBumonIDAsync(NBaseData.DAC.MsUser loginUser, int bumonid) {
            return base.Channel.MsHimoku_GetRecordsByMsBumonIDAsync(loginUser, bumonid);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu> MsKanidouseiInfoShubetu_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKanidouseiInfoShubetu_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu>> MsKanidouseiInfoShubetu_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKanidouseiInfoShubetu_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu> MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKanidouseiInfoShubetu>> MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKanidouseiInfoShubetu_GetRecordsByDouseiEnabledAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKensa_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKensa_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecordsBy証書リンクデータ(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.MsKensa_GetRecordsBy証書リンクデータ(loginUser, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsBy証書リンクデータAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.MsKensa_GetRecordsBy証書リンクデータAsync(loginUser, ks_shousho_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecordsBy荷役リンクデータ(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id) {
            return base.Channel.MsKensa_GetRecordsBy荷役リンクデータ(loginUser, ks_niyaku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsBy荷役リンクデータAsync(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id) {
            return base.Channel.MsKensa_GetRecordsBy荷役リンクデータAsync(loginUser, ks_niyaku_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensa> MsKensa_GetRecordsBy検査名(NBaseData.DAC.MsUser loginUser, string kensa_name) {
            return base.Channel.MsKensa_GetRecordsBy検査名(loginUser, kensa_name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensa>> MsKensa_GetRecordsBy検査名Async(NBaseData.DAC.MsUser loginUser, string kensa_name) {
            return base.Channel.MsKensa_GetRecordsBy検査名Async(loginUser, kensa_name);
        }
        
        public NBaseData.DAC.MsKensa MsKensa_GetRecord(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.MsKensa_GetRecord(loginUser, ms_kensa_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsKensa> MsKensa_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.MsKensa_GetRecordAsync(loginUser, ms_kensa_id);
        }
        
        public bool MsKensa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data) {
            return base.Channel.MsKensa_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> MsKensa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data) {
            return base.Channel.MsKensa_InsertRecordAsync(loginUser, data);
        }
        
        public bool MsKensa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data) {
            return base.Channel.MsKensa_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> MsKensa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensa data) {
            return base.Channel.MsKensa_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensen> MsKensen_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKensen_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensen>> MsKensen_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKensen_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensen> MsKensen_GetRecordsBy証書リンク(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.MsKensen_GetRecordsBy証書リンク(loginUser, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensen>> MsKensen_GetRecordsBy証書リンクAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.MsKensen_GetRecordsBy証書リンクAsync(loginUser, ks_shousho_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKensen> MsKensen_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsKensen_GetRecordsByName(loginUser, Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKensen>> MsKensen_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsKensen_GetRecordsByNameAsync(loginUser, Name);
        }
        
        public bool MsKensen_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen) {
            return base.Channel.MsKensen_InsertRecord(loginUser, msKensen);
        }
        
        public System.Threading.Tasks.Task<bool> MsKensen_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen) {
            return base.Channel.MsKensen_InsertRecordAsync(loginUser, msKensen);
        }
        
        public bool MsKensen_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen) {
            return base.Channel.MsKensen_UpdateRecord(loginUser, msKensen);
        }
        
        public System.Threading.Tasks.Task<bool> MsKensen_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKensen msKensen) {
            return base.Channel.MsKensen_UpdateRecordAsync(loginUser, msKensen);
        }
        
        public NBaseData.DAC.MsKichi MsKichi_GetRecordByKichiNo(NBaseData.DAC.MsUser loginUser, string kichiNo) {
            return base.Channel.MsKichi_GetRecordByKichiNo(loginUser, kichiNo);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsKichi> MsKichi_GetRecordByKichiNoAsync(NBaseData.DAC.MsUser loginUser, string kichiNo) {
            return base.Channel.MsKichi_GetRecordByKichiNoAsync(loginUser, kichiNo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKichi> MsKichi_GetRecordsByKichiNoKichiName(NBaseData.DAC.MsUser loginUser, string kichiNo, string kichiName) {
            return base.Channel.MsKichi_GetRecordsByKichiNoKichiName(loginUser, kichiNo, kichiName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKichi>> MsKichi_GetRecordsByKichiNoKichiNameAsync(NBaseData.DAC.MsUser loginUser, string kichiNo, string kichiName) {
            return base.Channel.MsKichi_GetRecordsByKichiNoKichiNameAsync(loginUser, kichiNo, kichiName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKichi> MsKichi_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKichi_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKichi>> MsKichi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKichi_GetRecordsAsync(loginUser);
        }
        
        public bool MsKichi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi) {
            return base.Channel.MsKichi_InsertRecord(loginUser, msKichi);
        }
        
        public System.Threading.Tasks.Task<bool> MsKichi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi) {
            return base.Channel.MsKichi_InsertRecordAsync(loginUser, msKichi);
        }
        
        public bool MsKichi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi) {
            return base.Channel.MsKichi_UpdateRecord(loginUser, msKichi);
        }
        
        public System.Threading.Tasks.Task<bool> MsKichi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKichi msKichi) {
            return base.Channel.MsKichi_UpdateRecordAsync(loginUser, msKichi);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKichi> MsKiti_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKiti_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKichi>> MsKiti_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKiti_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi> MsKyumeisetsubi_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKyumeisetsubi_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi>> MsKyumeisetsubi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKyumeisetsubi_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi> MsKyumeisetsubi_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsKyumeisetsubi_GetRecordsByName(loginUser, Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKyumeisetsubi>> MsKyumeisetsubi_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsKyumeisetsubi_GetRecordsByNameAsync(loginUser, Name);
        }
        
        public bool MsKyumeisetsubi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi) {
            return base.Channel.MsKyumeisetsubi_InsertRecord(loginUser, msKyumeisetsubi);
        }
        
        public System.Threading.Tasks.Task<bool> MsKyumeisetsubi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi) {
            return base.Channel.MsKyumeisetsubi_InsertRecordAsync(loginUser, msKyumeisetsubi);
        }
        
        public bool MsKyumeisetsubi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi) {
            return base.Channel.MsKyumeisetsubi_UpdateRecord(loginUser, msKyumeisetsubi);
        }
        
        public System.Threading.Tasks.Task<bool> MsKyumeisetsubi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKyumeisetsubi msKyumeisetsubi) {
            return base.Channel.MsKyumeisetsubi_UpdateRecordAsync(loginUser, msKyumeisetsubi);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsLo> MsLo_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsLo_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLo>> MsLo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsLo_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsLo MsLo_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string msLoId) {
            return base.Channel.MsLo_GetRecordsByMsLoID(loginUser, msLoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsLo> MsLo_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string msLoId) {
            return base.Channel.MsLo_GetRecordsByMsLoIDAsync(loginUser, msLoId);
        }
        
        public bool MsLo_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo) {
            return base.Channel.MsLo_Insert(loginUser, msLo);
        }
        
        public System.Threading.Tasks.Task<bool> MsLo_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo) {
            return base.Channel.MsLo_InsertAsync(loginUser, msLo);
        }
        
        public bool MsLo_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo) {
            return base.Channel.MsLo_Update(loginUser, msLo);
        }
        
        public System.Threading.Tasks.Task<bool> MsLo_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo) {
            return base.Channel.MsLo_UpdateAsync(loginUser, msLo);
        }
        
        public bool MsLo_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo) {
            return base.Channel.MsLo_DeleteRecord(loginUser, msLo);
        }
        
        public System.Threading.Tasks.Task<bool> MsLo_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLo msLo) {
            return base.Channel.MsLo_DeleteRecordAsync(loginUser, msLo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsLo> MsLo_SearchRecords(NBaseData.DAC.MsUser loginUser, string msLoId, string loName) {
            return base.Channel.MsLo_SearchRecords(loginUser, msLoId, loName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLo>> MsLo_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string msLoId, string loName) {
            return base.Channel.MsLo_SearchRecordsAsync(loginUser, msLoId, loName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsLoVessel> MsLoVessel_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int vesselid) {
            return base.Channel.MsLoVessel_GetRecordsByMsVesselID(loginUser, vesselid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLoVessel>> MsLoVessel_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int vesselid) {
            return base.Channel.MsLoVessel_GetRecordsByMsVesselIDAsync(loginUser, vesselid);
        }
        
        public bool MsLoVessel_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel) {
            return base.Channel.MsLoVessel_Insert(loginUser, msLoVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsLoVessel_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel) {
            return base.Channel.MsLoVessel_InsertAsync(loginUser, msLoVessel);
        }
        
        public bool MsLoVessel_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel) {
            return base.Channel.MsLoVessel_DeleteRecord(loginUser, msLoVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsLoVessel_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel) {
            return base.Channel.MsLoVessel_DeleteRecordAsync(loginUser, msLoVessel);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsLoVessel> MsLoVessel_GetRecordsByMsVesselIDAndLoName(NBaseData.DAC.MsUser loginUser, int MsVesslID, string loName) {
            return base.Channel.MsLoVessel_GetRecordsByMsVesselIDAndLoName(loginUser, MsVesslID, loName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLoVessel>> MsLoVessel_GetRecordsByMsVesselIDAndLoNameAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID, string loName) {
            return base.Channel.MsLoVessel_GetRecordsByMsVesselIDAndLoNameAsync(loginUser, MsVesslID, loName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsLoVessel> MsLoVessel_GetRecordsByMsLoID(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.MsLoVessel_GetRecordsByMsLoID(loginUser, ms_lo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsLoVessel>> MsLoVessel_GetRecordsByMsLoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_lo_id) {
            return base.Channel.MsLoVessel_GetRecordsByMsLoIDAsync(loginUser, ms_lo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsNiyaku> MsNiyaku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsNiyaku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsNiyaku>> MsNiyaku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsNiyaku_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsNiyaku> MsNiyaku_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsNiyaku_GetRecordsByName(loginUser, Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsNiyaku>> MsNiyaku_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsNiyaku_GetRecordsByNameAsync(loginUser, Name);
        }
        
        public bool MsNiyaku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku) {
            return base.Channel.MsNiyaku_InsertRecord(loginUser, niyaku);
        }
        
        public System.Threading.Tasks.Task<bool> MsNiyaku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku) {
            return base.Channel.MsNiyaku_InsertRecordAsync(loginUser, niyaku);
        }
        
        public bool MsNiyaku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku) {
            return base.Channel.MsNiyaku_UpdateRecord(loginUser, niyaku);
        }
        
        public System.Threading.Tasks.Task<bool> MsNiyaku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsNiyaku niyaku) {
            return base.Channel.MsNiyaku_UpdateRecordAsync(loginUser, niyaku);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsRole> MsRole_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsRole_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRole>> MsRole_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsRole_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsRole> MsRole_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsRole_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRole>> MsRole_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsRole_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsRole_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsRole> roles) {
            return base.Channel.MsRole_InsertOrUpdate(loginUser, roles);
        }
        
        public System.Threading.Tasks.Task<bool> MsRole_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsRole> roles) {
            return base.Channel.MsRole_InsertOrUpdateAsync(loginUser, roles);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShinsa> MsShinsa_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsShinsa_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShinsa>> MsShinsa_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsShinsa_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShinsa> MsShinsa_GetRecordsBy証書リンク(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.MsShinsa_GetRecordsBy証書リンク(loginUser, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShinsa>> MsShinsa_GetRecordsBy証書リンクAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.MsShinsa_GetRecordsBy証書リンクAsync(loginUser, ks_shousho_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShinsa> MsShinsa_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsShinsa_GetRecordsByName(loginUser, Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShinsa>> MsShinsa_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsShinsa_GetRecordsByNameAsync(loginUser, Name);
        }
        
        public bool MsShinsa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa) {
            return base.Channel.MsShinsa_InsertRecord(loginUser, msShinsa);
        }
        
        public System.Threading.Tasks.Task<bool> MsShinsa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa) {
            return base.Channel.MsShinsa_InsertRecordAsync(loginUser, msShinsa);
        }
        
        public bool MsShinsa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa) {
            return base.Channel.MsShinsa_UpdateRecord(loginUser, msShinsa);
        }
        
        public System.Threading.Tasks.Task<bool> MsShinsa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShinsa msShinsa) {
            return base.Channel.MsShinsa_UpdateRecordAsync(loginUser, msShinsa);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordsByMsShinsaID(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id) {
            return base.Channel.KsShinsa_GetRecordsByMsShinsaID(loginUser, ms_shinsa_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShinsa>> KsShinsa_GetRecordsByMsShinsaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id) {
            return base.Channel.KsShinsa_GetRecordsByMsShinsaIDAsync(loginUser, ms_shinsa_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShousho> MsShousho_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsShousho_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShousho>> MsShousho_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsShousho_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShousho> MsShousho_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsShousho_GetRecordsByName(loginUser, Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShousho>> MsShousho_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string Name) {
            return base.Channel.MsShousho_GetRecordsByNameAsync(loginUser, Name);
        }
        
        public bool MsShousho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho) {
            return base.Channel.MsShousho_InsertRecord(loginUser, msShousho);
        }
        
        public System.Threading.Tasks.Task<bool> MsShousho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho) {
            return base.Channel.MsShousho_InsertRecordAsync(loginUser, msShousho);
        }
        
        public bool MsShousho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho) {
            return base.Channel.MsShousho_UpdateRecord(loginUser, msShousho);
        }
        
        public System.Threading.Tasks.Task<bool> MsShousho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShousho msShousho) {
            return base.Channel.MsShousho_UpdateRecordAsync(loginUser, msShousho);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsShoushuriItem> MsShoushuriItem_GetRecordByMsVesselID(NBaseData.DAC.MsUser loginUser, int MsVesslID) {
            return base.Channel.MsShoushuriItem_GetRecordByMsVesselID(loginUser, MsVesslID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsShoushuriItem>> MsShoushuriItem_GetRecordByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID) {
            return base.Channel.MsShoushuriItem_GetRecordByMsVesselIDAsync(loginUser, MsVesslID);
        }
        
        public bool MsShoushuriItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShoushuriItem info) {
            return base.Channel.MsShoushuriItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsShoushuriItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsShoushuriItem info) {
            return base.Channel.MsShoushuriItem_InsertAsync(loginUser, info);
        }
        
        public System.DateTime SiGetsujiShimeBi_ToFrom_船員_月次締日(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.SiGetsujiShimeBi_ToFrom_船員_月次締日(loginUser, date);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> SiGetsujiShimeBi_ToFrom_船員_月次締日Async(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.SiGetsujiShimeBi_ToFrom_船員_月次締日Async(loginUser, date);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiShokumei> MsSiShokumei_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShokumei_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShokumei>> MsSiShokumei_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShokumei_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSsShousaiItem> MsSsShousaiItem_GetRecordByMsVesselID(NBaseData.DAC.MsUser loginUser, int MsVesslID) {
            return base.Channel.MsSsShousaiItem_GetRecordByMsVesselID(loginUser, MsVesslID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSsShousaiItem>> MsSsShousaiItem_GetRecordByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int MsVesslID) {
            return base.Channel.MsSsShousaiItem_GetRecordByMsVesselIDAsync(loginUser, MsVesslID);
        }
        
        public bool MsSsShousaiItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSsShousaiItem info) {
            return base.Channel.MsSsShousaiItem_Insert(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsSsShousaiItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSsShousaiItem info) {
            return base.Channel.MsSsShousaiItem_InsertAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUser_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUser_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_GetRecordsByUserKbn事務所(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUser_GetRecordsByUserKbn事務所(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_GetRecordsByUserKbn事務所Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUser_GetRecordsByUserKbn事務所Async(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_GetRecordsByUserKbn船員(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUser_GetRecordsByUserKbn船員(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_GetRecordsByUserKbn船員Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUser_GetRecordsByUserKbn船員Async(loginUser);
        }
        
        public NBaseData.DAC.MsUser MsUser_GetRecordsByUserID(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsUser_GetRecordsByUserID(loginUser, msUserID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsUser_GetRecordsByUserIDAsync(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsUser_GetRecordsByUserIDAsync(loginUser, msUserID);
        }
        
        public NBaseData.DAC.MsUser MsUser_GetRecordsByLoginIDPassword(string loginID, string password) {
            return base.Channel.MsUser_GetRecordsByLoginIDPassword(loginID, password);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsUser_GetRecordsByLoginIDPasswordAsync(string loginID, string password) {
            return base.Channel.MsUser_GetRecordsByLoginIDPasswordAsync(loginID, password);
        }
        
        public NBaseData.DAC.MsUser MsUser_GetRecordsByLoginID(NBaseData.DAC.MsUser loginUser, string loginID) {
            return base.Channel.MsUser_GetRecordsByLoginID(loginUser, loginID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsUser> MsUser_GetRecordsByLoginIDAsync(NBaseData.DAC.MsUser loginUser, string loginID) {
            return base.Channel.MsUser_GetRecordsByLoginIDAsync(loginUser, loginID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_SearchRecords(NBaseData.DAC.MsUser loginUser, string loginID, int kbnID, int adminFlag, string bumonID, string sei, string mei) {
            return base.Channel.MsUser_SearchRecords(loginUser, loginID, kbnID, adminFlag, bumonID, sei, mei);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string loginID, int kbnID, int adminFlag, string bumonID, string sei, string mei) {
            return base.Channel.MsUser_SearchRecordsAsync(loginUser, loginID, kbnID, adminFlag, bumonID, sei, mei);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUser> MsUser_SearchRecords2(NBaseData.DAC.MsUser loginUser, string seiKana, string meiKana) {
            return base.Channel.MsUser_SearchRecords2(loginUser, seiKana, meiKana);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUser>> MsUser_SearchRecords2Async(NBaseData.DAC.MsUser loginUser, string seiKana, string meiKana) {
            return base.Channel.MsUser_SearchRecords2Async(loginUser, seiKana, meiKana);
        }
        
        public NBaseData.DAC.MsUserBumon MsUserBumon_GetRecordsByUserID(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsUserBumon_GetRecordsByUserID(loginUser, msUserID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsUserBumon> MsUserBumon_GetRecordsByUserIDAsync(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsUserBumon_GetRecordsByUserIDAsync(loginUser, msUserID);
        }
        
        public bool MsUserBumon_InsertRecord(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUserBumon_InsertRecord(loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> MsUserBumon_InsertRecordAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUserBumon_InsertRecordAsync(loginUser);
        }
        
        public bool MsUserBumon_UpdateRecord(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUserBumon_UpdateRecord(loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> MsUserBumon_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsUserBumon_UpdateRecordAsync(loginUser);
        }
        
        public bool MsUserBumon_DeleteRecord(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsUserBumon_DeleteRecord(loginUser, msUserID);
        }
        
        public System.Threading.Tasks.Task<bool> MsUserBumon_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, string msUserID) {
            return base.Channel.MsUserBumon_DeleteRecordAsync(loginUser, msUserID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUserBumon> MsUserBumon_GetRecordsByUserIDList(NBaseData.DAC.MsUser loginUser, string MsUserId) {
            return base.Channel.MsUserBumon_GetRecordsByUserIDList(loginUser, MsUserId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUserBumon>> MsUserBumon_GetRecordsByUserIDListAsync(NBaseData.DAC.MsUser loginUser, string MsUserId) {
            return base.Channel.MsUserBumon_GetRecordsByUserIDListAsync(loginUser, MsUserId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsUserPassHis> MsUserPassHis_GetRecords(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser) {
            return base.Channel.MsUserPassHis_GetRecords(loginUser, ChangeUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsUserPassHis>> MsUserPassHis_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser) {
            return base.Channel.MsUserPassHis_GetRecordsAsync(loginUser, ChangeUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByHachuEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByHachuEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByHachuEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByHachuEnabledAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByYojitsuEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByYojitsuEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByYojitsuEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByYojitsuEnabledAsync(loginUser);
        }
        
        public NBaseData.DAC.MsVessel MsVessel_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int msVesselID) {
            return base.Channel.MsVessel_GetRecordsByMsVesselID(loginUser, msVesselID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int msVesselID) {
            return base.Channel.MsVessel_GetRecordsByMsVesselIDAsync(loginUser, msVesselID);
        }
        
        public bool MsVessel_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel) {
            return base.Channel.MsVessel_Insert(loginUser, msVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsVessel_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel) {
            return base.Channel.MsVessel_InsertAsync(loginUser, msVessel);
        }
        
        public bool MsVessel_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel) {
            return base.Channel.MsVessel_Update(loginUser, msVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsVessel_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel) {
            return base.Channel.MsVessel_UpdateAsync(loginUser, msVessel);
        }
        
        public bool MsVessel_DeleteFlagRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel) {
            return base.Channel.MsVessel_DeleteFlagRecord(loginUser, msVessel);
        }
        
        public System.Threading.Tasks.Task<bool> MsVessel_DeleteFlagRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel) {
            return base.Channel.MsVessel_DeleteFlagRecordAsync(loginUser, msVessel);
        }
        
        public NBaseData.DAC.MsVessel MsVessel_GetRecordsByVesselNo(NBaseData.DAC.MsUser loginUser, string vesselNo) {
            return base.Channel.MsVessel_GetRecordsByVesselNo(loginUser, vesselNo);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByVesselNoAsync(NBaseData.DAC.MsUser loginUser, string vesselNo) {
            return base.Channel.MsVessel_GetRecordsByVesselNoAsync(loginUser, vesselNo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_SearchRecords(NBaseData.DAC.MsUser loginUser, string vesselNo, string vesselName) {
            return base.Channel.MsVessel_SearchRecords(loginUser, vesselNo, vesselName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string vesselNo, string vesselName) {
            return base.Channel.MsVessel_SearchRecordsAsync(loginUser, vesselNo, vesselName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByKanidouseiEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByKanidouseiEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByKanidouseiEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByKanidouseiEnabledAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByDocumentEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByDocumentEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByDocumentEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByDocumentEnabledAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsBySeninEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsBySeninEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsBySeninEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsBySeninEnabledAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVessel> MsVessel_GetRecordsByKensaEnabled(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByKensaEnabled(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVessel>> MsVessel_GetRecordsByKensaEnabledAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVessel_GetRecordsByKensaEnabledAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsThiIraiStatus> MsThiIraiStatus_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsThiIraiStatus_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsThiIraiStatus>> MsThiIraiStatus_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsThiIraiStatus_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsThiIraiStatus MsThiIraiStatus_GetRecord(NBaseData.DAC.MsUser loginUser, string MsThiIraiStatusID) {
            return base.Channel.MsThiIraiStatus_GetRecord(loginUser, MsThiIraiStatusID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsThiIraiStatus> MsThiIraiStatus_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string MsThiIraiStatusID) {
            return base.Channel.MsThiIraiStatus_GetRecordAsync(loginUser, MsThiIraiStatusID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsThiIraiSbt> MsThiIraiSbt_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsThiIraiSbt_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsThiIraiSbt>> MsThiIraiSbt_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsThiIraiSbt_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsThiIraiShousai> MsThiIraiShousai_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsThiIraiShousai_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsThiIraiShousai>> MsThiIraiShousai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsThiIraiShousai_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselItem> MsVesselItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselItem>> MsVesselItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselItem_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsVesselItem MsVesselItem_GetRecordsByMsVesselItemID(NBaseData.DAC.MsUser loginUser, string MsVesselItemId) {
            return base.Channel.MsVesselItem_GetRecordsByMsVesselItemID(loginUser, MsVesselItemId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVesselItem> MsVesselItem_GetRecordsByMsVesselItemIDAsync(NBaseData.DAC.MsUser loginUser, string MsVesselItemId) {
            return base.Channel.MsVesselItem_GetRecordsByMsVesselItemIDAsync(loginUser, MsVesselItemId);
        }
        
        public bool MsVesselItem_Insert(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem) {
            return base.Channel.MsVesselItem_Insert(loginUser, MsVesselItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselItem_InsertAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem) {
            return base.Channel.MsVesselItem_InsertAsync(loginUser, MsVesselItem);
        }
        
        public bool MsVesselItem_Update(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem) {
            return base.Channel.MsVesselItem_Update(loginUser, MsVesselItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselItem_UpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem) {
            return base.Channel.MsVesselItem_UpdateAsync(loginUser, MsVesselItem);
        }
        
        public bool MsVesselItem_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem) {
            return base.Channel.MsVesselItem_DeleteRecord(loginUser, MsVesselItem);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselItem_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItem MsVesselItem) {
            return base.Channel.MsVesselItem_DeleteRecordAsync(loginUser, MsVesselItem);
        }
        
        public NBaseData.DAC.MsSeninAddress MsSeninAddress_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSeninAddress_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSeninAddress> MsSeninAddress_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSeninAddress_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSeninCompany> MsSeninCompany_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSeninCompany_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSeninCompany>> MsSeninCompany_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSeninCompany_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiAdvancedSearchCondition> MsSiAdvancedSearchCondition_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiAdvancedSearchCondition_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiAdvancedSearchCondition>> MsSiAdvancedSearchCondition_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiAdvancedSearchCondition_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiSalary> MsSiSalary_SearchRecords(NBaseData.DAC.MsUser loginUser, bool kind0, bool kind1, bool kind2) {
            return base.Channel.MsSiSalary_SearchRecords(loginUser, kind0, kind1, kind2);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiSalary>> MsSiSalary_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, bool kind0, bool kind1, bool kind2) {
            return base.Channel.MsSiSalary_SearchRecordsAsync(loginUser, kind0, kind1, kind2);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance> MsSiAllowance_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiAllowance_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance>> MsSiAllowance_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiAllowance_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance> MsSiAllowance_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiAllowance_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiAllowance>> MsSiAllowance_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsSiAllowance_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsSiAllowance_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiAllowance m) {
            return base.Channel.MsSiAllowance_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiAllowance_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiAllowance m) {
            return base.Channel.MsSiAllowance_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiExcludeMenjouKind> MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindID(NBaseData.DAC.MsUser loginUser, int msSiMenjouKindId) {
            return base.Channel.MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindID(loginUser, msSiMenjouKindId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiExcludeMenjouKind>> MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindIDAsync(NBaseData.DAC.MsUser loginUser, int msSiMenjouKindId) {
            return base.Channel.MsSiExcludeMenjouKind_GetRecordsByMsSiMenjouKindIDAsync(loginUser, msSiMenjouKindId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsItemKind> MsItemKind_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsItemKind_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsItemKind>> MsItemKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsItemKind_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsItemKind> MsItemKind_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsItemKind_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsItemKind>> MsItemKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsItemKind_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsItemKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsItemKind m) {
            return base.Channel.MsItemKind_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsItemKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsItemKind m) {
            return base.Channel.MsItemKind_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiOptions> MsSiOptions_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiOptions_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiOptions>> MsSiOptions_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiOptions_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiPresentationItem> MsSiPresentationItem_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiPresentationItem_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiPresentationItem>> MsSiPresentationItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiPresentationItem_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsListItem> MsListItem_GetRecords(NBaseData.DAC.MsUser loginUser, int kind) {
            return base.Channel.MsListItem_GetRecords(loginUser, kind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsListItem>> MsListItem_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, int kind) {
            return base.Channel.MsListItem_GetRecordsAsync(loginUser, kind);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiShokumeiShousai> MsSiShokumeiShousai_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShokumeiShousai_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShokumeiShousai>> MsSiShokumeiShousai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShokumeiShousai_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsuShousai> MsSiShubetsuShousai_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShubetsuShousai_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiShubetsuShousai>> MsSiShubetsuShousai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiShubetsuShousai_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselCategory> MsVesselCategory_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselCategory_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselCategory>> MsVesselCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselCategory_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsVesselCategory MsVesselCategory_GetRecord(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselCategory_GetRecord(loginUser, id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVesselCategory> MsVesselCategory_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselCategory_GetRecordAsync(loginUser, id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselSection> MsVesselSection_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselSection_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselSection>> MsVesselSection_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselSection_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsVesselSection MsVesselSection_GetRecord(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselSection_GetRecord(loginUser, id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVesselSection> MsVesselSection_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselSection_GetRecordAsync(loginUser, id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselKind> MsVesselKind_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselKind_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselKind>> MsVesselKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselKind_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsVesselKind MsVesselKind_GetRecord(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselKind_GetRecord(loginUser, id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsVesselKind> MsVesselKind_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string id) {
            return base.Channel.MsVesselKind_GetRecordAsync(loginUser, id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> MsVesselScheduleKindDetailEnable_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselScheduleKindDetailEnable_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable>> MsVesselScheduleKindDetailEnable_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsVesselScheduleKindDetailEnable_GetRecordsAsync(loginUser);
        }
        
        public bool MsVesselScheduleKindDetailEnable_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselScheduleKindDetailEnable m) {
            return base.Channel.MsVesselScheduleKindDetailEnable_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsVesselScheduleKindDetailEnable_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselScheduleKindDetailEnable m) {
            return base.Channel.MsVesselScheduleKindDetailEnable_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqCode> MsViqCode_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqCode_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCode>> MsViqCode_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqCode_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqCode> MsViqCode_SearchRecords(NBaseData.DAC.MsUser loginUser, int nameId, string name) {
            return base.Channel.MsViqCode_SearchRecords(loginUser, nameId, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCode>> MsViqCode_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int nameId, string name) {
            return base.Channel.MsViqCode_SearchRecordsAsync(loginUser, nameId, name);
        }
        
        public bool MsViqCode_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCode m) {
            return base.Channel.MsViqCode_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsViqCode_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCode m) {
            return base.Channel.MsViqCode_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName> MsViqCodeName_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqCodeName_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName>> MsViqCodeName_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqCodeName_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName> MsViqCodeName_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsViqCodeName_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqCodeName>> MsViqCodeName_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsViqCodeName_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsViqCodeName_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCodeName m) {
            return base.Channel.MsViqCodeName_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsViqCodeName_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqCodeName m) {
            return base.Channel.MsViqCodeName_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqVersion> MsViqVersion_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqVersion_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqVersion>> MsViqVersion_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqVersion_GetRecordsAsync(loginUser);
        }
        
        public bool MsViqVersion_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqVersion m) {
            return base.Channel.MsViqVersion_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsViqVersion_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqVersion m) {
            return base.Channel.MsViqVersion_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqNo> MsViqNo_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqNo_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqNo>> MsViqNo_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsViqNo_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsViqNo> MsViqNo_SearchRecords(NBaseData.DAC.MsUser loginUser, int codeId, string name) {
            return base.Channel.MsViqNo_SearchRecords(loginUser, codeId, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsViqNo>> MsViqNo_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int codeId, string name) {
            return base.Channel.MsViqNo_SearchRecordsAsync(loginUser, codeId, name);
        }
        
        public bool MsViqNo_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqNo m) {
            return base.Channel.MsViqNo_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsViqNo_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsViqNo m) {
            return base.Channel.MsViqNo_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.NbaseContractFunction> NbaseContractFunction_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.NbaseContractFunction_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.NbaseContractFunction>> NbaseContractFunction_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.NbaseContractFunction_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.SiAllowance SiAllowance_GetRecord(NBaseData.DAC.MsUser loginUser, string siAllowanceId) {
            return base.Channel.SiAllowance_GetRecord(loginUser, siAllowanceId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiAllowance> SiAllowance_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string siAllowanceId) {
            return base.Channel.SiAllowance_GetRecordAsync(loginUser, siAllowanceId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiAllowance> SiAllowance_SearchRecords(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName) {
            return base.Channel.SiAllowance_SearchRecords(loginUser, from, to, vesselId, allowanceName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiAllowance>> SiAllowance_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName) {
            return base.Channel.SiAllowance_SearchRecordsAsync(loginUser, from, to, vesselId, allowanceName);
        }
        
        public bool SiAllowance_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, string id, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details) {
            return base.Channel.SiAllowance_InsertOrUpdate(loginUser, id, allowance, details);
        }
        
        public System.Threading.Tasks.Task<bool> SiAllowance_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, string id, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details) {
            return base.Channel.SiAllowance_InsertOrUpdateAsync(loginUser, id, allowance, details);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> SiAllowanceDetail_GetRecords(NBaseData.DAC.MsUser loginUser, string allowanceName) {
            return base.Channel.SiAllowanceDetail_GetRecords(loginUser, allowanceName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail>> SiAllowanceDetail_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, string allowanceName) {
            return base.Channel.SiAllowanceDetail_GetRecordsAsync(loginUser, allowanceName);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead> SiCardPlanHead_GetRecordsByYearMonth(NBaseData.DAC.MsUser loginUser, System.DateTime dt, int vessel_kind) {
            return base.Channel.SiCardPlanHead_GetRecordsByYearMonth(loginUser, dt, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>> SiCardPlanHead_GetRecordsByYearMonthAsync(NBaseData.DAC.MsUser loginUser, System.DateTime dt, int vessel_kind) {
            return base.Channel.SiCardPlanHead_GetRecordsByYearMonthAsync(loginUser, dt, vessel_kind);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCardPlan> SiCardPlan_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiCardPlan_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlan>> SiCardPlan_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiCardPlan_GetRecordsAsync(loginUser);
        }
        
        public bool SiCardPlan_DeleteRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan) {
            return base.Channel.SiCardPlan_DeleteRecord(loginUser, plan);
        }
        
        public System.Threading.Tasks.Task<bool> SiCardPlan_DeleteRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan) {
            return base.Channel.SiCardPlan_DeleteRecordAsync(loginUser, plan);
        }
        
        public NBaseData.DAC.SiKenshinPmhKa SiKenshinPmhKa_GetRecordByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiKenshinPmhKa_GetRecordByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiKenshinPmhKa> SiKenshinPmhKa_GetRecordByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiKenshinPmhKa_GetRecordByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKyuyoTeate> SiKyuyoTeate_SearchRecords(NBaseData.DAC.MsUser loginUser, int vesselId, string ym) {
            return base.Channel.SiKyuyoTeate_SearchRecords(loginUser, vesselId, ym);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKyuyoTeate>> SiKyuyoTeate_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int vesselId, string ym) {
            return base.Channel.SiKyuyoTeate_SearchRecordsAsync(loginUser, vesselId, ym);
        }
        
        public NBaseData.DAC.SiKyuyoTeate SiKyuyoTeate_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKyuyoTeate k) {
            return base.Channel.SiKyuyoTeate_InsertOrUpdate(loginUser, k);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiKyuyoTeate> SiKyuyoTeate_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiKyuyoTeate k) {
            return base.Channel.SiKyuyoTeate_InsertOrUpdateAsync(loginUser, k);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeate> MsSiKyuyoTeate_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKyuyoTeate_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeate>> MsSiKyuyoTeate_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKyuyoTeate_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet> MsSiKyuyoTeateSet_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKyuyoTeateSet_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet>> MsSiKyuyoTeateSet_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsSiKyuyoTeateSet_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet> MsSiKyuyoTeateSet_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiKyuyoTeateId, int msSiShokumeiId) {
            return base.Channel.MsSiKyuyoTeateSet_SearchRecords(loginUser, msSiKyuyoTeateId, msSiShokumeiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSiKyuyoTeateSet>> MsSiKyuyoTeateSet_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiKyuyoTeateId, int msSiShokumeiId) {
            return base.Channel.MsSiKyuyoTeateSet_SearchRecordsAsync(loginUser, msSiKyuyoTeateId, msSiShokumeiId);
        }
        
        public bool MsSiKyuyoTeateSet_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKyuyoTeateSet m) {
            return base.Channel.MsSiKyuyoTeateSet_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsSiKyuyoTeateSet_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiKyuyoTeateSet m) {
            return base.Channel.MsSiKyuyoTeateSet_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsTax> MsTax_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsTax_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsTax>> MsTax_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsTax_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCrewMatrixType> MsCrewMatrixType_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCrewMatrixType_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCrewMatrixType>> MsCrewMatrixType_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCrewMatrixType_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.PtJimushokoushinInfo> PtJimushokoushinInfo_GetRecordsByCondition(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtJimushokoushinInfoCondition condition) {
            return base.Channel.PtJimushokoushinInfo_GetRecordsByCondition(loginUser, condition);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.PtJimushokoushinInfo>> PtJimushokoushinInfo_GetRecordsByConditionAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtJimushokoushinInfoCondition condition) {
            return base.Channel.PtJimushokoushinInfo_GetRecordsByConditionAsync(loginUser, condition);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience> MsBoardingExperience_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBoardingExperience_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience>> MsBoardingExperience_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsBoardingExperience_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience> MsBoardingExperience_SearchRecords(NBaseData.DAC.MsUser loginUser, int kubun, int vesselId, int shokumeiId) {
            return base.Channel.MsBoardingExperience_SearchRecords(loginUser, kubun, vesselId, shokumeiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsBoardingExperience>> MsBoardingExperience_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int kubun, int vesselId, int shokumeiId) {
            return base.Channel.MsBoardingExperience_SearchRecordsAsync(loginUser, kubun, vesselId, shokumeiId);
        }
        
        public bool MsBoardingExperience_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBoardingExperience s) {
            return base.Channel.MsBoardingExperience_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<bool> MsBoardingExperience_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsBoardingExperience s) {
            return base.Channel.MsBoardingExperience_InsertOrUpdateAsync(loginUser, s);
        }
        
        public NBaseData.DAC.SiLaborManagementRecordBook SiLaborManagementRecordBook_GetRecord(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiLaborManagementRecordBook_GetRecord(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiLaborManagementRecordBook> SiLaborManagementRecordBook_GetRecordAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiLaborManagementRecordBook_GetRecordAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiNightSetting> SiNightSetting_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiNightSetting_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiNightSetting>> SiNightSetting_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiNightSetting_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> SiPersonalSchedule_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiPersonalSchedule_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule>> SiPersonalSchedule_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiPersonalSchedule_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> SiPersonalSchedule_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiPersonalSchedule_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule>> SiPersonalSchedule_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiPersonalSchedule_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> SiPersonalSchedule_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.SiPersonalSchedule_SearchRecords(loginUser, msSiShokumeiId, name, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule>> SiPersonalSchedule_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.SiPersonalSchedule_SearchRecordsAsync(loginUser, msSiShokumeiId, name, fromDate, toDate);
        }
        
        public bool SiPersonalSchedule_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiPersonalSchedule s) {
            return base.Channel.SiPersonalSchedule_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<bool> SiPersonalSchedule_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiPersonalSchedule s) {
            return base.Channel.SiPersonalSchedule_InsertOrUpdateAsync(loginUser, s);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> SiFellowPassengers_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiFellowPassengers_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers>> SiFellowPassengers_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiFellowPassengers_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> SiFellowPassengers_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiFellowPassengers_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers>> SiFellowPassengers_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiFellowPassengers_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> SiFellowPassengers_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name) {
            return base.Channel.SiFellowPassengers_SearchRecords(loginUser, msSiShokumeiId, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers>> SiFellowPassengers_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, string name) {
            return base.Channel.SiFellowPassengers_SearchRecordsAsync(loginUser, msSiShokumeiId, name);
        }
        
        public bool SiFellowPassengers_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiFellowPassengers s) {
            return base.Channel.SiFellowPassengers_InsertOrUpdate(loginUser, s);
        }
        
        public System.Threading.Tasks.Task<bool> SiFellowPassengers_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiFellowPassengers s) {
            return base.Channel.SiFellowPassengers_InsertOrUpdateAsync(loginUser, s);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays> SiRequiredNumberOfDays_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiRequiredNumberOfDays_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays>> SiRequiredNumberOfDays_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.SiRequiredNumberOfDays_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiSalary> SiSalary_SearchRecords(NBaseData.DAC.MsUser loginUser, int msSeninId, System.DateTime start, System.DateTime end, bool kind0, bool kind1, bool kind2) {
            return base.Channel.SiSalary_SearchRecords(loginUser, msSeninId, start, end, kind0, kind1, kind2);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSalary>> SiSalary_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, System.DateTime start, System.DateTime end, bool kind0, bool kind1, bool kind2) {
            return base.Channel.SiSalary_SearchRecordsAsync(loginUser, msSeninId, start, end, kind0, kind1, kind2);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiRemarks> SiRemarks_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiRemarks_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiRemarks>> SiRemarks_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiRemarks_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiShobatsu> SiShobatsu_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiShobatsu_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiShobatsu>> SiShobatsu_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiShobatsu_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiShobyo> SiShobyo_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiShobyo_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiShobyo>> SiShobyo_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiShobyo_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKenshin> SiKenshin_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiKenshin_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKenshin>> SiKenshin_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.SiKenshin_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public NBaseData.DAC.SnParameter SnParameter_GetRecord(NBaseData.DAC.MsUser loginUserd) {
            return base.Channel.SnParameter_GetRecord(loginUserd);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SnParameter> SnParameter_GetRecordAsync(NBaseData.DAC.MsUser loginUserd) {
            return base.Channel.SnParameter_GetRecordAsync(loginUserd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.KsKensa_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.KsKensa_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.KsKensa KsKensa_GetRecord(NBaseData.DAC.MsUser loginUser, string kensa_id) {
            return base.Channel.KsKensa_GetRecord(loginUser, kensa_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.KsKensa> KsKensa_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kensa_id) {
            return base.Channel.KsKensa_GetRecordAsync(loginUser, kensa_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsKensa_GetRecordsBy船ID(loginUser, msvessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsKensa_GetRecordsBy船IDAsync(loginUser, msvessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecordsBy船ID予定データ(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsKensa_GetRecordsBy船ID予定データ(loginUser, msvessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsBy船ID予定データAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsKensa_GetRecordsBy船ID予定データAsync(loginUser, msvessel_id);
        }
        
        public bool KsKensa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data) {
            return base.Channel.KsKensa_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsKensa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data) {
            return base.Channel.KsKensa_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsKensa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data) {
            return base.Channel.KsKensa_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsKensa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensa data) {
            return base.Channel.KsKensa_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensa> KsKensa_GetRecordsByMsKensaID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.KsKensa_GetRecordsByMsKensaID(loginUser, ms_kensa_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensa>> KsKensa_GetRecordsByMsKensaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.KsKensa_GetRecordsByMsKensaIDAsync(loginUser, ms_kensa_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensen> KsKensen_GetRecordBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKensen_GetRecordBy船ID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensen>> KsKensen_GetRecordBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKensen_GetRecordBy船IDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensen> KsKensen_GetRecordBy船ID予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKensen_GetRecordBy船ID予定データ(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensen>> KsKensen_GetRecordBy船ID予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKensen_GetRecordBy船ID予定データAsync(loginUser, ms_vessel_id);
        }
        
        public NBaseData.DAC.KsKensen KsKensen_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_kensen_id) {
            return base.Channel.KsKensen_GetRecord(loginUser, ks_kensen_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.KsKensen> KsKensen_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_kensen_id) {
            return base.Channel.KsKensen_GetRecordAsync(loginUser, ks_kensen_id);
        }
        
        public bool KsKensen_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data) {
            return base.Channel.KsKensen_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsKensen_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data) {
            return base.Channel.KsKensen_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsKensen_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data) {
            return base.Channel.KsKensen_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsKensen_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKensen data) {
            return base.Channel.KsKensen_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKensen> KsKensen_GetRecordsByMsKensenID(NBaseData.DAC.MsUser loginUser, string ms_kensen_id) {
            return base.Channel.KsKensen_GetRecordsByMsKensenID(loginUser, ms_kensen_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKensen>> KsKensen_GetRecordsByMsKensenIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensen_id) {
            return base.Channel.KsKensen_GetRecordsByMsKensenIDAsync(loginUser, ms_kensen_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordsBy船ID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordsBy船IDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordsBy船ID_救命設備ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordsBy船ID_救命設備ID(loginUser, ms_vessel_id, ms_kyumei_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordsBy船ID_救命設備IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordsBy船ID_救命設備IDAsync(loginUser, ms_vessel_id, ms_kyumei_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordBy船ID予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordBy船ID予定データ(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordBy船ID予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordBy船ID予定データAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備ID(loginUser, ms_vessel_id, ms_kyumei_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_kyumei_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordBy船ID予定データ_救命設備IDAsync(loginUser, ms_vessel_id, ms_kyumei_id);
        }
        
        public NBaseData.DAC.KsKyumeisetsubi KsKyumeisetsubi_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_kyumeisetsubi_id) {
            return base.Channel.KsKyumeisetsubi_GetRecord(loginUser, ks_kyumeisetsubi_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_kyumeisetsubi_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordAsync(loginUser, ks_kyumeisetsubi_id);
        }
        
        public bool KsKyumeisetsubi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data) {
            return base.Channel.KsKyumeisetsubi_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsKyumeisetsubi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data) {
            return base.Channel.KsKyumeisetsubi_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsKyumeisetsubi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data) {
            return base.Channel.KsKyumeisetsubi_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsKyumeisetsubi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsKyumeisetsubi data) {
            return base.Channel.KsKyumeisetsubi_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi> KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiID(NBaseData.DAC.MsUser loginUser, string ms_kyu_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiID(loginUser, ms_kyu_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsKyumeisetsubi>> KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kyu_id) {
            return base.Channel.KsKyumeisetsubi_GetRecordsByMsKyumeisetsubiIDAsync(loginUser, ms_kyu_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船IDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID_荷役ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID_荷役ID(loginUser, ms_vessel_id, ms_niyaku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船ID_荷役IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID_荷役IDAsync(loginUser, ms_vessel_id, ms_niyaku_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID_予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID_予定データ(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船ID_予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID_予定データAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsBy船ID_予定データ_荷役ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID_予定データ_荷役ID(loginUser, ms_vessel_id, ms_niyaku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsBy船ID_予定データ_荷役IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id, string ms_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordsBy船ID_予定データ_荷役IDAsync(loginUser, ms_vessel_id, ms_niyaku_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsFor船_指定検査_予定(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id) {
            return base.Channel.KsNiyaku_GetRecordsFor船_指定検査_予定(loginUser, ms_kensa_id, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsFor船_指定検査_予定Async(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id) {
            return base.Channel.KsNiyaku_GetRecordsFor船_指定検査_予定Async(loginUser, ms_kensa_id, ms_vessel_id);
        }
        
        public NBaseData.DAC.KsNiyaku KsNiyaku_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecord(loginUser, ks_niyaku_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordAsync(loginUser, ks_niyaku_id);
        }
        
        public bool KsNiyaku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data) {
            return base.Channel.KsNiyaku_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsNiyaku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data) {
            return base.Channel.KsNiyaku_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsNiyaku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data) {
            return base.Channel.KsNiyaku_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsNiyaku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyaku data) {
            return base.Channel.KsNiyaku_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyaku> KsNiyaku_GetRecordsByMsNiyakuID(NBaseData.DAC.MsUser loginUser, string ms_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordsByMsNiyakuID(loginUser, ms_niyaku_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyaku>> KsNiyaku_GetRecordsByMsNiyakuIDAsync(NBaseData.DAC.MsUser loginUser, string ms_niyaku_id) {
            return base.Channel.KsNiyaku_GetRecordsByMsNiyakuIDAsync(loginUser, ms_niyaku_id);
        }
        
        public bool KsNiyakuKensaLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data) {
            return base.Channel.KsNiyakuKensaLink_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsNiyakuKensaLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data) {
            return base.Channel.KsNiyakuKensaLink_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsNiyakuKensaLink_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data) {
            return base.Channel.KsNiyakuKensaLink_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsNiyakuKensaLink_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsNiyakuKensaLink data) {
            return base.Channel.KsNiyakuKensaLink_UpdateRecordAsync(loginUser, data);
        }
        
        public bool KsNiyakuKensaLink_DeleteRecordBy検査_荷役(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id, string ms_kensa_id) {
            return base.Channel.KsNiyakuKensaLink_DeleteRecordBy検査_荷役(loginUser, ks_niyaku_id, ms_kensa_id);
        }
        
        public System.Threading.Tasks.Task<bool> KsNiyakuKensaLink_DeleteRecordBy検査_荷役Async(NBaseData.DAC.MsUser loginUser, string ks_niyaku_id, string ms_kensa_id) {
            return base.Channel.KsNiyakuKensaLink_DeleteRecordBy検査_荷役Async(loginUser, ks_niyaku_id, ms_kensa_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsNiyakuKensaLink> KsNiyakuKensaLink_GetRecordsByMsKensaID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.KsNiyakuKensaLink_GetRecordsByMsKensaID(loginUser, ms_kensa_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsNiyakuKensaLink>> KsNiyakuKensaLink_GetRecordsByMsKensaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.KsNiyakuKensaLink_GetRecordsByMsKensaIDAsync(loginUser, ms_kensa_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsShinsa_GetRecordsBy船ID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShinsa>> KsShinsa_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsShinsa_GetRecordsBy船IDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordsBy船ID_予定データ(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsShinsa_GetRecordsBy船ID_予定データ(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShinsa>> KsShinsa_GetRecordsBy船ID_予定データAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.KsShinsa_GetRecordsBy船ID_予定データAsync(loginUser, ms_vessel_id);
        }
        
        public NBaseData.DAC.KsShinsa KsShinsa_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_shinsa_id) {
            return base.Channel.KsShinsa_GetRecord(loginUser, ks_shinsa_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.KsShinsa> KsShinsa_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_shinsa_id) {
            return base.Channel.KsShinsa_GetRecordAsync(loginUser, ks_shinsa_id);
        }
        
        public bool KsShinsa_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data) {
            return base.Channel.KsShinsa_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShinsa_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data) {
            return base.Channel.KsShinsa_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsShinsa_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data) {
            return base.Channel.KsShinsa_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShinsa_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShinsa data) {
            return base.Channel.KsShinsa_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShoushoShinsaLink> KsShoushoShinsaLink_GetRecordsByMsShinsaID(NBaseData.DAC.MsUser loginUser, string ms_shisa_id) {
            return base.Channel.KsShoushoShinsaLink_GetRecordsByMsShinsaID(loginUser, ms_shisa_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShoushoShinsaLink>> KsShoushoShinsaLink_GetRecordsByMsShinsaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_shisa_id) {
            return base.Channel.KsShoushoShinsaLink_GetRecordsByMsShinsaIDAsync(loginUser, ms_shisa_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsBy船ID(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsShousho_GetRecordsBy船ID(loginUser, msvessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsBy船IDAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsShousho_GetRecordsBy船IDAsync(loginUser, msvessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsBy船ID_予定データ(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsShousho_GetRecordsBy船ID_予定データ(loginUser, msvessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsBy船ID_予定データAsync(NBaseData.DAC.MsUser loginUser, int msvessel_id) {
            return base.Channel.KsShousho_GetRecordsBy船ID_予定データAsync(loginUser, msvessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsFor船_指定検査_予定(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id) {
            return base.Channel.KsShousho_GetRecordsFor船_指定検査_予定(loginUser, ms_kensa_id, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsFor船_指定検査_予定Async(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, int ms_vessel_id) {
            return base.Channel.KsShousho_GetRecordsFor船_指定検査_予定Async(loginUser, ms_kensa_id, ms_vessel_id);
        }
        
        public NBaseData.DAC.KsShousho KsShousho_GetRecord(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.KsShousho_GetRecord(loginUser, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.KsShousho> KsShousho_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string ks_shousho_id) {
            return base.Channel.KsShousho_GetRecordAsync(loginUser, ks_shousho_id);
        }
        
        public bool KsShousho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data) {
            return base.Channel.KsShousho_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShousho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data) {
            return base.Channel.KsShousho_InsertRecordAsync(loginUser, data);
        }
        
        public bool KsShousho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data) {
            return base.Channel.KsShousho_UpdateRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShousho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShousho data) {
            return base.Channel.KsShousho_UpdateRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsFor船_指定検船_予定(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, int ms_vessel_id) {
            return base.Channel.KsShousho_GetRecordsFor船_指定検船_予定(loginUser, ms_kensen_id, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsFor船_指定検船_予定Async(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, int ms_vessel_id) {
            return base.Channel.KsShousho_GetRecordsFor船_指定検船_予定Async(loginUser, ms_kensen_id, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsFor船_指定審査_予定(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, int ms_vessel_id) {
            return base.Channel.KsShousho_GetRecordsFor船_指定審査_予定(loginUser, ms_shinsa_id, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsFor船_指定審査_予定Async(NBaseData.DAC.MsUser loginUser, string ms_shinsa_id, int ms_vessel_id) {
            return base.Channel.KsShousho_GetRecordsFor船_指定審査_予定Async(loginUser, ms_shinsa_id, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShousho> KsShousho_GetRecordsByMsShoushoID(NBaseData.DAC.MsUser loginUser, string ms_shousho_id) {
            return base.Channel.KsShousho_GetRecordsByMsShoushoID(loginUser, ms_shousho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShousho>> KsShousho_GetRecordsByMsShoushoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_shousho_id) {
            return base.Channel.KsShousho_GetRecordsByMsShoushoIDAsync(loginUser, ms_shousho_id);
        }
        
        public bool KsShoushoKensaLink_DeleteRecordBy検査マスタID証書ID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, string ks_shousho_id) {
            return base.Channel.KsShoushoKensaLink_DeleteRecordBy検査マスタID証書ID(loginUser, ms_kensa_id, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<bool> KsShoushoKensaLink_DeleteRecordBy検査マスタID証書IDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id, string ks_shousho_id) {
            return base.Channel.KsShoushoKensaLink_DeleteRecordBy検査マスタID証書IDAsync(loginUser, ms_kensa_id, ks_shousho_id);
        }
        
        public bool KsShoushoKensaLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensaLink data) {
            return base.Channel.KsShoushoKensaLink_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShoushoKensaLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensaLink data) {
            return base.Channel.KsShoushoKensaLink_InsertRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensaLink> KsShoushoKensaLink_GetRecordsByMsKensaID(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.KsShoushoKensaLink_GetRecordsByMsKensaID(loginUser, ms_kensa_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensaLink>> KsShoushoKensaLink_GetRecordsByMsKensaIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensa_id) {
            return base.Channel.KsShoushoKensaLink_GetRecordsByMsKensaIDAsync(loginUser, ms_kensa_id);
        }
        
        public bool KsShoushoKensenLink_DeleteRecordBy検船マスタID証書ID(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, string ks_shousho_id) {
            return base.Channel.KsShoushoKensenLink_DeleteRecordBy検船マスタID証書ID(loginUser, ms_kensen_id, ks_shousho_id);
        }
        
        public System.Threading.Tasks.Task<bool> KsShoushoKensenLink_DeleteRecordBy検船マスタID証書IDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensen_id, string ks_shousho_id) {
            return base.Channel.KsShoushoKensenLink_DeleteRecordBy検船マスタID証書IDAsync(loginUser, ms_kensen_id, ks_shousho_id);
        }
        
        public bool KsShoushoKensenLink_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensenLink data) {
            return base.Channel.KsShoushoKensenLink_InsertRecord(loginUser, data);
        }
        
        public System.Threading.Tasks.Task<bool> KsShoushoKensenLink_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.KsShoushoKensenLink data) {
            return base.Channel.KsShoushoKensenLink_InsertRecordAsync(loginUser, data);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensenLink> KsShoushoKensenLink_GetRecordsByMsKensenID(NBaseData.DAC.MsUser loginUser, string ms_kensen_ID) {
            return base.Channel.KsShoushoKensenLink_GetRecordsByMsKensenID(loginUser, ms_kensen_ID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.KsShoushoKensenLink>> KsShoushoKensenLink_GetRecordsByMsKensenIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kensen_ID) {
            return base.Channel.KsShoushoKensenLink_GetRecordsByMsKensenIDAsync(loginUser, ms_kensen_ID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.BgYosanHead_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanHead>> BgYosanHead_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.BgYosanHead_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanMemo> BgYosanMemo_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser msUser, int p) {
            return base.Channel.BgYosanMemo_GetRecordsByYosanHeadID(msUser, p);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanMemo>> BgYosanMemo_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser msUser, int p) {
            return base.Channel.BgYosanMemo_GetRecordsByYosanHeadIDAsync(msUser, p);
        }
        
        public bool BgYosanMemo_UpdateRecord(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgYosanMemo editedYosanMemo) {
            return base.Channel.BgYosanMemo_UpdateRecord(msUser, editedYosanMemo);
        }
        
        public System.Threading.Tasks.Task<bool> BgYosanMemo_UpdateRecordAsync(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgYosanMemo editedYosanMemo) {
            return base.Channel.BgYosanMemo_UpdateRecordAsync(msUser, editedYosanMemo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanSbt> BgYosanSbt_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BgYosanSbt_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanSbt>> BgYosanSbt_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BgYosanSbt_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDouseiCargo> DjDouseiCargo_GetRecordsMsCargoID(NBaseData.DAC.MsUser loginUser, int ms_cargo_id) {
            return base.Channel.DjDouseiCargo_GetRecordsMsCargoID(loginUser, ms_cargo_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDouseiCargo>> DjDouseiCargo_GetRecordsMsCargoIDAsync(NBaseData.DAC.MsUser loginUser, int ms_cargo_id) {
            return base.Channel.DjDouseiCargo_GetRecordsMsCargoIDAsync(loginUser, ms_cargo_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsByHead(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel Vessel, System.DateTime FromDate, System.DateTime ToDate, int KikanrenkeiJisseki, System.Collections.Generic.List<int> cargoIds, System.Collections.Generic.List<string> bashoIds, System.Collections.Generic.List<string> kichiIds, System.Collections.Generic.List<string> dairitenIds, System.Collections.Generic.List<string> ninushiIds) {
            return base.Channel.DjDousei_GetRecordsByHead(loginUser, Vessel, FromDate, ToDate, KikanrenkeiJisseki, cargoIds, bashoIds, kichiIds, dairitenIds, ninushiIds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsByHeadAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel Vessel, System.DateTime FromDate, System.DateTime ToDate, int KikanrenkeiJisseki, System.Collections.Generic.List<int> cargoIds, System.Collections.Generic.List<string> bashoIds, System.Collections.Generic.List<string> kichiIds, System.Collections.Generic.List<string> dairitenIds, System.Collections.Generic.List<string> ninushiIds) {
            return base.Channel.DjDousei_GetRecordsByHeadAsync(loginUser, Vessel, FromDate, ToDate, KikanrenkeiJisseki, cargoIds, bashoIds, kichiIds, dairitenIds, ninushiIds);
        }
        
        public bool DjDousei_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei) {
            return base.Channel.DjDousei_InsertRecord(loginUser, djDousei);
        }
        
        public System.Threading.Tasks.Task<bool> DjDousei_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei) {
            return base.Channel.DjDousei_InsertRecordAsync(loginUser, djDousei);
        }
        
        public bool DjDousei_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei) {
            return base.Channel.DjDousei_UpdateRecord(loginUser, djDousei);
        }
        
        public System.Threading.Tasks.Task<bool> DjDousei_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei) {
            return base.Channel.DjDousei_UpdateRecordAsync(loginUser, djDousei);
        }
        
        public bool DjDousei_UpdateDetailRecords(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei) {
            return base.Channel.DjDousei_UpdateDetailRecords(loginUser, djDousei);
        }
        
        public System.Threading.Tasks.Task<bool> DjDousei_UpdateDetailRecordsAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDousei djDousei) {
            return base.Channel.DjDousei_UpdateDetailRecordsAsync(loginUser, djDousei);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecords(NBaseData.DAC.MsUser loginUser, int MsVesselID, System.Nullable<System.DateTime> Date) {
            return base.Channel.DjDousei_GetRecords(loginUser, MsVesselID, Date);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsAsync(NBaseData.DAC.MsUser loginUser, int MsVesselID, System.Nullable<System.DateTime> Date) {
            return base.Channel.DjDousei_GetRecordsAsync(loginUser, MsVesselID, Date);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsByMsKichiID(NBaseData.DAC.MsUser loginUser, string ms_kichi_id) {
            return base.Channel.DjDousei_GetRecordsByMsKichiID(loginUser, ms_kichi_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsByMsKichiIDAsync(NBaseData.DAC.MsUser loginUser, string ms_kichi_id) {
            return base.Channel.DjDousei_GetRecordsByMsKichiIDAsync(loginUser, ms_kichi_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsByMsBashoID(NBaseData.DAC.MsUser loginUser, string ms_basho_id) {
            return base.Channel.DjDousei_GetRecordsByMsBashoID(loginUser, ms_basho_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsByMsBashoIDAsync(NBaseData.DAC.MsUser loginUser, string ms_basho_id) {
            return base.Channel.DjDousei_GetRecordsByMsBashoIDAsync(loginUser, ms_basho_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDousei> DjDousei_GetRecordsBySameVoaygeNo(NBaseData.DAC.MsUser loginUser, string DjDouseiId) {
            return base.Channel.DjDousei_GetRecordsBySameVoaygeNo(loginUser, DjDouseiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDousei>> DjDousei_GetRecordsBySameVoaygeNoAsync(NBaseData.DAC.MsUser loginUser, string DjDouseiId) {
            return base.Channel.DjDousei_GetRecordsBySameVoaygeNoAsync(loginUser, DjDouseiId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku> DjDouseiHoukoku_GetRecordsByHoukokuDate(NBaseData.DAC.MsUser loginUser, System.DateTime houkokuDate) {
            return base.Channel.DjDouseiHoukoku_GetRecordsByHoukokuDate(loginUser, houkokuDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku>> DjDouseiHoukoku_GetRecordsByHoukokuDateAsync(NBaseData.DAC.MsUser loginUser, System.DateTime houkokuDate) {
            return base.Channel.DjDouseiHoukoku_GetRecordsByHoukokuDateAsync(loginUser, houkokuDate);
        }
        
        public NBaseData.DAC.DjDouseiHoukoku DjDouseiHoukoku_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku) {
            return base.Channel.DjDouseiHoukoku_InsertOrUpdate(loginUser, houkoku);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DjDouseiHoukoku> DjDouseiHoukoku_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku) {
            return base.Channel.DjDouseiHoukoku_InsertOrUpdateAsync(loginUser, houkoku);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui> MsDmBunrui_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmBunrui_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui>> MsDmBunrui_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmBunrui_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui> MsDmBunrui_GetRecordsByName(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsDmBunrui_GetRecordsByName(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmBunrui>> MsDmBunrui_GetRecordsByNameAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsDmBunrui_GetRecordsByNameAsync(loginUser, name);
        }
        
        public NBaseData.DAC.MsDmBunrui MsDmBunrui_GetRecord(NBaseData.DAC.MsUser loginUser, string msDmBunruiId) {
            return base.Channel.MsDmBunrui_GetRecord(loginUser, msDmBunruiId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsDmBunrui> MsDmBunrui_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string msDmBunruiId) {
            return base.Channel.MsDmBunrui_GetRecordAsync(loginUser, msDmBunruiId);
        }
        
        public bool MsDmBunrui_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info) {
            return base.Channel.MsDmBunrui_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmBunrui_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info) {
            return base.Channel.MsDmBunrui_InsertRecordAsync(loginUser, info);
        }
        
        public bool MsDmBunrui_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info) {
            return base.Channel.MsDmBunrui_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmBunrui_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmBunrui info) {
            return base.Channel.MsDmBunrui_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmShoubunrui_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui>> MsDmShoubunrui_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmShoubunrui_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecordsByBunruiID(NBaseData.DAC.MsUser loginUser, string msDmBunruiID) {
            return base.Channel.MsDmShoubunrui_GetRecordsByBunruiID(loginUser, msDmBunruiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui>> MsDmShoubunrui_GetRecordsByBunruiIDAsync(NBaseData.DAC.MsUser loginUser, string msDmBunruiID) {
            return base.Channel.MsDmShoubunrui_GetRecordsByBunruiIDAsync(loginUser, msDmBunruiID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecordsByNameAndBunruiID(NBaseData.DAC.MsUser loginUser, string name, string msDmBunruiID) {
            return base.Channel.MsDmShoubunrui_GetRecordsByNameAndBunruiID(loginUser, name, msDmBunruiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmShoubunrui>> MsDmShoubunrui_GetRecordsByNameAndBunruiIDAsync(NBaseData.DAC.MsUser loginUser, string name, string msDmBunruiID) {
            return base.Channel.MsDmShoubunrui_GetRecordsByNameAndBunruiIDAsync(loginUser, name, msDmBunruiID);
        }
        
        public NBaseData.DAC.MsDmShoubunrui MsDmShoubunrui_GetRecord(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiId) {
            return base.Channel.MsDmShoubunrui_GetRecord(loginUser, msDmShoubunruiId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsDmShoubunrui> MsDmShoubunrui_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiId) {
            return base.Channel.MsDmShoubunrui_GetRecordAsync(loginUser, msDmShoubunruiId);
        }
        
        public bool MsDmShoubunrui_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info) {
            return base.Channel.MsDmShoubunrui_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmShoubunrui_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info) {
            return base.Channel.MsDmShoubunrui_InsertRecordAsync(loginUser, info);
        }
        
        public bool MsDmShoubunrui_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info) {
            return base.Channel.MsDmShoubunrui_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmShoubunrui_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmShoubunrui info) {
            return base.Channel.MsDmShoubunrui_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> MsDmHoukokusho_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmHoukokusho_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho>> MsDmHoukokusho_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmHoukokusho_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> MsDmHoukokusho_SearchRecords(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName) {
            return base.Channel.MsDmHoukokusho_SearchRecords(loginUser, bunruiId, shoubunruiId, bunshoNo, bunshoName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho>> MsDmHoukokusho_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName) {
            return base.Channel.MsDmHoukokusho_SearchRecordsAsync(loginUser, bunruiId, shoubunruiId, bunshoNo, bunshoName);
        }
        
        public NBaseData.DAC.MsDmHoukokusho MsDmHoukokusho_GetRecord(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId) {
            return base.Channel.MsDmHoukokusho_GetRecord(loginUser, msDmHoukokushoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsDmHoukokusho> MsDmHoukokusho_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId) {
            return base.Channel.MsDmHoukokusho_GetRecordAsync(loginUser, msDmHoukokushoId);
        }
        
        public bool MsDmHoukokusho_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info) {
            return base.Channel.MsDmHoukokusho_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmHoukokusho_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info) {
            return base.Channel.MsDmHoukokusho_InsertRecordAsync(loginUser, info);
        }
        
        public bool MsDmHoukokusho_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info) {
            return base.Channel.MsDmHoukokusho_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmHoukokusho_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho info) {
            return base.Channel.MsDmHoukokusho_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDmTemplateFile> MsDmTemplateFile_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmTemplateFile_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDmTemplateFile>> MsDmTemplateFile_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDmTemplateFile_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.MsDmTemplateFile MsDmTemplateFile_GetRecordByHoukokushoID(NBaseData.DAC.MsUser loginUser, string houkokushoId) {
            return base.Channel.MsDmTemplateFile_GetRecordByHoukokushoID(loginUser, houkokushoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsDmTemplateFile> MsDmTemplateFile_GetRecordByHoukokushoIDAsync(NBaseData.DAC.MsUser loginUser, string houkokushoId) {
            return base.Channel.MsDmTemplateFile_GetRecordByHoukokushoIDAsync(loginUser, houkokushoId);
        }
        
        public NBaseData.DAC.MsDmTemplateFile MsDmTemplateFile_GetRecord(NBaseData.DAC.MsUser loginUser, string houkokushoId) {
            return base.Channel.MsDmTemplateFile_GetRecord(loginUser, houkokushoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsDmTemplateFile> MsDmTemplateFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string houkokushoId) {
            return base.Channel.MsDmTemplateFile_GetRecordAsync(loginUser, houkokushoId);
        }
        
        public bool MsDmTemplateFile_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info) {
            return base.Channel.MsDmTemplateFile_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmTemplateFile_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info) {
            return base.Channel.MsDmTemplateFile_InsertRecordAsync(loginUser, info);
        }
        
        public bool MsDmTemplateFile_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info) {
            return base.Channel.MsDmTemplateFile_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> MsDmTemplateFile_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmTemplateFile info) {
            return base.Channel.MsDmTemplateFile_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmPublisher> DmPublisher_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmPublisher_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmPublisher>> DmPublisher_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmPublisher_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmPublisher> DmPublisher_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, string linkSakiId) {
            return base.Channel.DmPublisher_GetRecordsByLinkSakiID(loginUser, linkSakiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmPublisher>> DmPublisher_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, string linkSakiId) {
            return base.Channel.DmPublisher_GetRecordsByLinkSakiIDAsync(loginUser, linkSakiId);
        }
        
        public NBaseData.DAC.DmPublisher DmPublisher_GetRecord(NBaseData.DAC.MsUser loginUser, string publisherId) {
            return base.Channel.DmPublisher_GetRecord(loginUser, publisherId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmPublisher> DmPublisher_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string publisherId) {
            return base.Channel.DmPublisher_GetRecordAsync(loginUser, publisherId);
        }
        
        public bool DmPublisher_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info) {
            return base.Channel.DmPublisher_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmPublisher_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info) {
            return base.Channel.DmPublisher_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmPublisher_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info) {
            return base.Channel.DmPublisher_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmPublisher_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmPublisher info) {
            return base.Channel.DmPublisher_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> DmKoukaiSaki_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKoukaiSaki_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki>> DmKoukaiSaki_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKoukaiSaki_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> DmKoukaiSaki_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, string linkSakiId) {
            return base.Channel.DmKoukaiSaki_GetRecordsByLinkSakiID(loginUser, linkSakiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki>> DmKoukaiSaki_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, string linkSakiId) {
            return base.Channel.DmKoukaiSaki_GetRecordsByLinkSakiIDAsync(loginUser, linkSakiId);
        }
        
        public NBaseData.DAC.DmKoukaiSaki DmKoukaiSaki_GetRecord(NBaseData.DAC.MsUser loginUser, string koukaiSakiId) {
            return base.Channel.DmKoukaiSaki_GetRecord(loginUser, koukaiSakiId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKoukaiSaki> DmKoukaiSaki_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string koukaiSakiId) {
            return base.Channel.DmKoukaiSaki_GetRecordAsync(loginUser, koukaiSakiId);
        }
        
        public bool DmKoukaiSaki_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info) {
            return base.Channel.DmKoukaiSaki_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKoukaiSaki_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info) {
            return base.Channel.DmKoukaiSaki_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKoukaiSaki_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info) {
            return base.Channel.DmKoukaiSaki_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKoukaiSaki_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoukaiSaki info) {
            return base.Channel.DmKoukaiSaki_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKanriKiroku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku>> DmKanriKiroku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKanriKiroku_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.DmKanriKiroku DmKanriKiroku_GetRecord(NBaseData.DAC.MsUser loginUser, string kanriKirokuId) {
            return base.Channel.DmKanriKiroku_GetRecord(loginUser, kanriKirokuId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kanriKirokuId) {
            return base.Channel.DmKanriKiroku_GetRecordAsync(loginUser, kanriKirokuId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetRecordsByHoukokushoID(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId) {
            return base.Channel.DmKanriKiroku_GetRecordsByHoukokushoID(loginUser, msDmHoukokushoId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku>> DmKanriKiroku_GetRecordsByHoukokushoIDAsync(NBaseData.DAC.MsUser loginUser, string msDmHoukokushoId) {
            return base.Channel.DmKanriKiroku_GetRecordsByHoukokushoIDAsync(loginUser, msDmHoukokushoId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku> DmKanriKiroku_GetPastRecords(NBaseData.DAC.MsUser loginUser, string houkokushoId, string userId, int role) {
            return base.Channel.DmKanriKiroku_GetPastRecords(loginUser, houkokushoId, userId, role);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKiroku>> DmKanriKiroku_GetPastRecordsAsync(NBaseData.DAC.MsUser loginUser, string houkokushoId, string userId, int role) {
            return base.Channel.DmKanriKiroku_GetPastRecordsAsync(loginUser, houkokushoId, userId, role);
        }
        
        public bool DmKanriKiroku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info) {
            return base.Channel.DmKanriKiroku_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKanriKiroku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info) {
            return base.Channel.DmKanriKiroku_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKanriKiroku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info) {
            return base.Channel.DmKanriKiroku_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKanriKiroku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku info) {
            return base.Channel.DmKanriKiroku_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.HoukokushoKanriKiroku> HoukokushoKanriKiroku_SearchRecords(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName, string userId, int role) {
            return base.Channel.HoukokushoKanriKiroku_SearchRecords(loginUser, bunruiId, shoubunruiId, bunshoNo, bunshoName, userId, role);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.HoukokushoKanriKiroku>> HoukokushoKanriKiroku_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string bunruiId, string shoubunruiId, string bunshoNo, string bunshoName, string userId, int role) {
            return base.Channel.HoukokushoKanriKiroku_SearchRecordsAsync(loginUser, bunruiId, shoubunruiId, bunshoNo, bunshoName, userId, role);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKanriKirokuFile> DmKanriKirokuFile_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKanriKirokuFile_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanriKirokuFile>> DmKanriKirokuFile_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKanriKirokuFile_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.DmKanriKirokuFile DmKanriKirokuFile_GetRecordByKanriKirokuID(NBaseData.DAC.MsUser loginUser, string kanriKirokuId) {
            return base.Channel.DmKanriKirokuFile_GetRecordByKanriKirokuID(loginUser, kanriKirokuId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKanriKirokuFile> DmKanriKirokuFile_GetRecordByKanriKirokuIDAsync(NBaseData.DAC.MsUser loginUser, string kanriKirokuId) {
            return base.Channel.DmKanriKirokuFile_GetRecordByKanriKirokuIDAsync(loginUser, kanriKirokuId);
        }
        
        public NBaseData.DAC.DmKanriKirokuFile DmKanriKirokuFile_GetRecord(NBaseData.DAC.MsUser loginUser, string kanriKirokuFileId) {
            return base.Channel.DmKanriKirokuFile_GetRecord(loginUser, kanriKirokuFileId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKanriKirokuFile> DmKanriKirokuFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kanriKirokuFileId) {
            return base.Channel.DmKanriKirokuFile_GetRecordAsync(loginUser, kanriKirokuFileId);
        }
        
        public bool DmKanriKirokuFile_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info) {
            return base.Channel.DmKanriKirokuFile_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKanriKirokuFile_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info) {
            return base.Channel.DmKanriKirokuFile_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKanriKirokuFile_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info) {
            return base.Channel.DmKanriKirokuFile_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKanriKirokuFile_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKirokuFile info) {
            return base.Channel.DmKanriKirokuFile_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKakuninJokyo> DmKakuninJokyo_GetRecordsByLinkSaki(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId) {
            return base.Channel.DmKakuninJokyo_GetRecordsByLinkSaki(loginUser, linkSaki, linkSakiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKakuninJokyo>> DmKakuninJokyo_GetRecordsByLinkSakiAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId) {
            return base.Channel.DmKakuninJokyo_GetRecordsByLinkSakiAsync(loginUser, linkSaki, linkSakiId);
        }
        
        public NBaseData.DAC.DmKakuninJokyo DmKakuninJokyo_GetRecordByLinkSakiUser(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId, string userId) {
            return base.Channel.DmKakuninJokyo_GetRecordByLinkSakiUser(loginUser, linkSaki, linkSakiId, userId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKakuninJokyo> DmKakuninJokyo_GetRecordByLinkSakiUserAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId, string userId) {
            return base.Channel.DmKakuninJokyo_GetRecordByLinkSakiUserAsync(loginUser, linkSaki, linkSakiId, userId);
        }
        
        public NBaseData.DAC.DmKakuninJokyo DmKakuninJokyo_GetRecord(NBaseData.DAC.MsUser loginUser, string kakuninJokyoId) {
            return base.Channel.DmKakuninJokyo_GetRecord(loginUser, kakuninJokyoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKakuninJokyo> DmKakuninJokyo_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kakuninJokyoId) {
            return base.Channel.DmKakuninJokyo_GetRecordAsync(loginUser, kakuninJokyoId);
        }
        
        public bool DmKakuninJokyo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info) {
            return base.Channel.DmKakuninJokyo_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKakuninJokyo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info) {
            return base.Channel.DmKakuninJokyo_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKakuninJokyo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info) {
            return base.Channel.DmKakuninJokyo_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKakuninJokyo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKakuninJokyo info) {
            return base.Channel.DmKakuninJokyo_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmDocComment> DmDocComment_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId) {
            return base.Channel.DmDocComment_GetRecordsByLinkSakiID(loginUser, linkSaki, linkSakiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmDocComment>> DmDocComment_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId) {
            return base.Channel.DmDocComment_GetRecordsByLinkSakiIDAsync(loginUser, linkSaki, linkSakiId);
        }
        
        public NBaseData.DAC.DmDocComment DmDocComment_GetRecord(NBaseData.DAC.MsUser loginUser, string docCommentId) {
            return base.Channel.DmDocComment_GetRecord(loginUser, docCommentId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmDocComment> DmDocComment_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string docCommentId) {
            return base.Channel.DmDocComment_GetRecordAsync(loginUser, docCommentId);
        }
        
        public bool DmDocComment_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info) {
            return base.Channel.DmDocComment_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmDocComment_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info) {
            return base.Channel.DmDocComment_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmDocComment_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info) {
            return base.Channel.DmDocComment_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmDocComment_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment info) {
            return base.Channel.DmDocComment_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKoubunshoKisoku_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku>> DmKoubunshoKisoku_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKoubunshoKisoku_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.DmKoubunshoKisoku DmKoubunshoKisoku_GetRecord(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuID) {
            return base.Channel.DmKoubunshoKisoku_GetRecord(loginUser, koubunshoKisokuID);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuID) {
            return base.Channel.DmKoubunshoKisoku_GetRecordAsync(loginUser, koubunshoKisokuID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecordsByBunruiID(NBaseData.DAC.MsUser loginUser, string msDmBunruiID) {
            return base.Channel.DmKoubunshoKisoku_GetRecordsByBunruiID(loginUser, msDmBunruiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku>> DmKoubunshoKisoku_GetRecordsByBunruiIDAsync(NBaseData.DAC.MsUser loginUser, string msDmBunruiID) {
            return base.Channel.DmKoubunshoKisoku_GetRecordsByBunruiIDAsync(loginUser, msDmBunruiID);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku> DmKoubunshoKisoku_GetRecordsByShoubunruiID(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiID) {
            return base.Channel.DmKoubunshoKisoku_GetRecordsByShoubunruiID(loginUser, msDmShoubunruiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisoku>> DmKoubunshoKisoku_GetRecordsByShoubunruiIDAsync(NBaseData.DAC.MsUser loginUser, string msDmShoubunruiID) {
            return base.Channel.DmKoubunshoKisoku_GetRecordsByShoubunruiIDAsync(loginUser, msDmShoubunruiID);
        }
        
        public bool DmKoubunshoKisoku_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info) {
            return base.Channel.DmKoubunshoKisoku_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKoubunshoKisoku_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info) {
            return base.Channel.DmKoubunshoKisoku_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKoubunshoKisoku_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info) {
            return base.Channel.DmKoubunshoKisoku_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKoubunshoKisoku_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku info) {
            return base.Channel.DmKoubunshoKisoku_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisokuFile> DmKoubunshoKisokuFile_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKoubunshoKisokuFile_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKoubunshoKisokuFile>> DmKoubunshoKisokuFile_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.DmKoubunshoKisokuFile_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.DmKoubunshoKisokuFile DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuID(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId) {
            return base.Channel.DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuID(loginUser, koubunshoKisokuId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKoubunshoKisokuFile> DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuIDAsync(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId) {
            return base.Channel.DmKoubunshoKisokuFile_GetRecordByKoubunshoKisokuIDAsync(loginUser, koubunshoKisokuId);
        }
        
        public NBaseData.DAC.DmKoubunshoKisokuFile DmKoubunshoKisokuFile_GetRecord(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuFileId) {
            return base.Channel.DmKoubunshoKisokuFile_GetRecord(loginUser, koubunshoKisokuFileId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKoubunshoKisokuFile> DmKoubunshoKisokuFile_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuFileId) {
            return base.Channel.DmKoubunshoKisokuFile_GetRecordAsync(loginUser, koubunshoKisokuFileId);
        }
        
        public bool DmKoubunshoKisokuFile_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info) {
            return base.Channel.DmKoubunshoKisokuFile_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKoubunshoKisokuFile_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info) {
            return base.Channel.DmKoubunshoKisokuFile_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKoubunshoKisokuFile_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info) {
            return base.Channel.DmKoubunshoKisokuFile_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKoubunshoKisokuFile_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisokuFile info) {
            return base.Channel.DmKoubunshoKisokuFile_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.DmKanryoInfo> DmKanryoInfo_GetRecordsByLinkSakiID(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId) {
            return base.Channel.DmKanryoInfo_GetRecordsByLinkSakiID(loginUser, linkSaki, linkSakiId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.DmKanryoInfo>> DmKanryoInfo_GetRecordsByLinkSakiIDAsync(NBaseData.DAC.MsUser loginUser, int linkSaki, string linkSakiId) {
            return base.Channel.DmKanryoInfo_GetRecordsByLinkSakiIDAsync(loginUser, linkSaki, linkSakiId);
        }
        
        public NBaseData.DAC.DmKanryoInfo DmKanryoInfo_GetRecord(NBaseData.DAC.MsUser loginUser, string kanryoInfoId) {
            return base.Channel.DmKanryoInfo_GetRecord(loginUser, kanryoInfoId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.DmKanryoInfo> DmKanryoInfo_GetRecordAsync(NBaseData.DAC.MsUser loginUser, string kanryoInfoId) {
            return base.Channel.DmKanryoInfo_GetRecordAsync(loginUser, kanryoInfoId);
        }
        
        public bool DmKanryoInfo_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info) {
            return base.Channel.DmKanryoInfo_InsertRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKanryoInfo_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info) {
            return base.Channel.DmKanryoInfo_InsertRecordAsync(loginUser, info);
        }
        
        public bool DmKanryoInfo_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info) {
            return base.Channel.DmKanryoInfo_UpdateRecord(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> DmKanryoInfo_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo info) {
            return base.Channel.DmKanryoInfo_UpdateRecordAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance> MsAccidentImportance_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAccidentImportance_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance>> MsAccidentImportance_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAccidentImportance_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance> MsAccidentImportance_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsAccidentImportance_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentImportance>> MsAccidentImportance_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsAccidentImportance_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsAccidentImportance_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentImportance m) {
            return base.Channel.MsAccidentImportance_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsAccidentImportance_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentImportance m) {
            return base.Channel.MsAccidentImportance_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind> MsAccidentKind_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAccidentKind_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind>> MsAccidentKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAccidentKind_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind> MsAccidentKind_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsAccidentKind_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentKind>> MsAccidentKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsAccidentKind_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsAccidentKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentKind m) {
            return base.Channel.MsAccidentKind_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsAccidentKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentKind m) {
            return base.Channel.MsAccidentKind_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation> MsAccidentSituation_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAccidentSituation_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation>> MsAccidentSituation_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsAccidentSituation_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation> MsAccidentSituation_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsAccidentSituation_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsAccidentSituation>> MsAccidentSituation_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsAccidentSituation_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsAccidentSituation_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentSituation m) {
            return base.Channel.MsAccidentSituation_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsAccidentSituation_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsAccidentSituation m) {
            return base.Channel.MsAccidentSituation_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsActionCode> MsActionCode_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsActionCode_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsActionCode>> MsActionCode_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsActionCode_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsActionCode> MsActionCode_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsActionCode_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsActionCode>> MsActionCode_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsActionCode_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsActionCode_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsActionCode m) {
            return base.Channel.MsActionCode_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsActionCode_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsActionCode m) {
            return base.Channel.MsActionCode_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsCargoGroup> MsCargoGroup_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCargoGroup_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsCargoGroup>> MsCargoGroup_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsCargoGroup_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory> MsDeficiencyCategory_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDeficiencyCategory_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory>> MsDeficiencyCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDeficiencyCategory_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory> MsDeficiencyCategory_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsDeficiencyCategory_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCategory>> MsDeficiencyCategory_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsDeficiencyCategory_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsDeficiencyCategory_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCategory m) {
            return base.Channel.MsDeficiencyCategory_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsDeficiencyCategory_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCategory m) {
            return base.Channel.MsDeficiencyCategory_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode> MsDeficiencyCode_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDeficiencyCode_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode>> MsDeficiencyCode_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDeficiencyCode_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode> MsDeficiencyCode_SearchRecords(NBaseData.DAC.MsUser loginUser, int categoryId, string name, string defectiveItem) {
            return base.Channel.MsDeficiencyCode_SearchRecords(loginUser, categoryId, name, defectiveItem);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDeficiencyCode>> MsDeficiencyCode_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int categoryId, string name, string defectiveItem) {
            return base.Channel.MsDeficiencyCode_SearchRecordsAsync(loginUser, categoryId, name, defectiveItem);
        }
        
        public bool MsDeficiencyCode_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCode m) {
            return base.Channel.MsDeficiencyCode_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsDeficiencyCode_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDeficiencyCode m) {
            return base.Channel.MsDeficiencyCode_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDjKazamuki> MsDjKazamuki_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjKazamuki_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjKazamuki>> MsDjKazamuki_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjKazamuki_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDjKenkoujyoutai> MsDjKenkoujyoutai_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjKenkoujyoutai_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjKenkoujyoutai>> MsDjKenkoujyoutai_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjKenkoujyoutai_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDjSentaisetsubi> MsDjSentaisetsubi_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjSentaisetsubi_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjSentaisetsubi>> MsDjSentaisetsubi_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjSentaisetsubi_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDjTani> MsDjTani_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjTani_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjTani>> MsDjTani_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjTani_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsDjTenkou> MsDjTenkou_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjTenkou_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsDjTenkou>> MsDjTenkou_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsDjTenkou_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory> MsInspectionCategory_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsInspectionCategory_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory>> MsInspectionCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsInspectionCategory_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory> MsInspectionCategory_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsInspectionCategory_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsInspectionCategory>> MsInspectionCategory_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsInspectionCategory_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsInspectionCategory_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsInspectionCategory m) {
            return base.Channel.MsInspectionCategory_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsInspectionCategory_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsInspectionCategory m) {
            return base.Channel.MsInspectionCategory_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident> MsKindOfAccident_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKindOfAccident_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident>> MsKindOfAccident_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsKindOfAccident_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident> MsKindOfAccident_SearchRecords(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsKindOfAccident_SearchRecords(loginUser, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsKindOfAccident>> MsKindOfAccident_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string name) {
            return base.Channel.MsKindOfAccident_SearchRecordsAsync(loginUser, name);
        }
        
        public bool MsKindOfAccident_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKindOfAccident m) {
            return base.Channel.MsKindOfAccident_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsKindOfAccident_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsKindOfAccident m) {
            return base.Channel.MsKindOfAccident_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsRegional> MsRegional_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsRegional_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRegional>> MsRegional_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsRegional_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsRegional> MsRegional_SearchRecords(NBaseData.DAC.MsUser loginUser, string regionalCode, string regionalName) {
            return base.Channel.MsRegional_SearchRecords(loginUser, regionalCode, regionalName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsRegional>> MsRegional_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, string regionalCode, string regionalName) {
            return base.Channel.MsRegional_SearchRecordsAsync(loginUser, regionalCode, regionalName);
        }
        
        public bool MsRegional_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional) {
            return base.Channel.MsRegional_InsertRecord(loginUser, msRegional);
        }
        
        public System.Threading.Tasks.Task<bool> MsRegional_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional) {
            return base.Channel.MsRegional_InsertRecordAsync(loginUser, msRegional);
        }
        
        public bool MsRegional_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional) {
            return base.Channel.MsRegional_UpdateRecord(loginUser, msRegional);
        }
        
        public System.Threading.Tasks.Task<bool> MsRegional_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsRegional msRegional) {
            return base.Channel.MsRegional_UpdateRecordAsync(loginUser, msRegional);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsScheduleCategory> MsScheduleCategory_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsScheduleCategory_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleCategory>> MsScheduleCategory_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsScheduleCategory_GetRecordsAsync(loginUser);
        }
        
        public bool MsScheduleCategory_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleCategory m) {
            return base.Channel.MsScheduleCategory_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsScheduleCategory_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleCategory m) {
            return base.Channel.MsScheduleCategory_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind> MsScheduleKind_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsScheduleKind_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind>> MsScheduleKind_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsScheduleKind_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind> MsScheduleKind_SearchRecords(NBaseData.DAC.MsUser loginUser, int categoryId, string name) {
            return base.Channel.MsScheduleKind_SearchRecords(loginUser, categoryId, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKind>> MsScheduleKind_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int categoryId, string name) {
            return base.Channel.MsScheduleKind_SearchRecordsAsync(loginUser, categoryId, name);
        }
        
        public bool MsScheduleKind_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKind m) {
            return base.Channel.MsScheduleKind_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsScheduleKind_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKind m) {
            return base.Channel.MsScheduleKind_InsertOrUpdateAsync(loginUser, m);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail> MsScheduleKindDetail_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsScheduleKindDetail_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail>> MsScheduleKindDetail_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.MsScheduleKindDetail_GetRecordsAsync(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail> MsScheduleKindDetail_SearchRecords(NBaseData.DAC.MsUser loginUser, int kindId, string name) {
            return base.Channel.MsScheduleKindDetail_SearchRecords(loginUser, kindId, name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsScheduleKindDetail>> MsScheduleKindDetail_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, int kindId, string name) {
            return base.Channel.MsScheduleKindDetail_SearchRecordsAsync(loginUser, kindId, name);
        }
        
        public bool MsScheduleKindDetail_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKindDetail m) {
            return base.Channel.MsScheduleKindDetail_InsertOrUpdate(loginUser, m);
        }
        
        public System.Threading.Tasks.Task<bool> MsScheduleKindDetail_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsScheduleKindDetail m) {
            return base.Channel.MsScheduleKindDetail_InsertOrUpdateAsync(loginUser, m);
        }
        
        public NBaseData.DAC.MsSeninEtc MsSeninEtc_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSeninEtc_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSeninEtc> MsSeninEtc_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSeninEtc_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public bool MsSeninEtc_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninEtc seninEtc) {
            return base.Channel.MsSeninEtc_InsertOrUpdate(loginUser, msSeninId, seninEtc);
        }
        
        public System.Threading.Tasks.Task<bool> MsSeninEtc_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninEtc seninEtc) {
            return base.Channel.MsSeninEtc_InsertOrUpdateAsync(loginUser, msSeninId, seninEtc);
        }
        
        public NBaseData.DAC.MsSeninCareer MsSeninCareer_GetRecordsByMsSeninID(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSeninCareer_GetRecordsByMsSeninID(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSeninCareer> MsSeninCareer_GetRecordsByMsSeninIDAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.MsSeninCareer_GetRecordsByMsSeninIDAsync(loginUser, msSeninId);
        }
        
        public bool MsSeninCareer_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninCareer seninCareer) {
            return base.Channel.MsSeninCareer_InsertOrUpdate(loginUser, msSeninId, seninCareer);
        }
        
        public System.Threading.Tasks.Task<bool> MsSeninCareer_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, int msSeninId, NBaseData.DAC.MsSeninCareer seninCareer) {
            return base.Channel.MsSeninCareer_InsertOrUpdateAsync(loginUser, msSeninId, seninCareer);
        }
        
        public byte[] BLC_Excel_休暇消化状況出力(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_休暇消化状況出力(loginUser, date);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_休暇消化状況出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_休暇消化状況出力Async(loginUser, date);
        }
        
        public byte[] BLC_Excel_乗下船記録書出力(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_乗下船記録書出力(loginUser, date);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_乗下船記録書出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_乗下船記録書出力Async(loginUser, date);
        }
        
        public byte[] BLC_Excel_乗下船カード出力(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_乗下船カード出力(loginUser, date);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_乗下船カード出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_乗下船カード出力Async(loginUser, date);
        }
        
        public byte[] BLC_Excel_個人情報一覧出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_個人情報一覧出力(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_個人情報一覧出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_個人情報一覧出力Async(loginUser, date, msVesselId);
        }
        
        public byte[] BLC_Excel_クルーリスト出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_クルーリスト出力(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_クルーリスト出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_クルーリスト出力Async(loginUser, date, msVesselId);
        }
        
        public byte[] BLC_Excel_配乗表出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou) {
            return base.Channel.BLC_Excel_配乗表出力(loginUser, haijou);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_配乗表出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou) {
            return base.Channel.BLC_Excel_配乗表出力Async(loginUser, haijou);
        }
        
        public bool BLC_免状免許_アラーム削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou) {
            return base.Channel.BLC_免状免許_アラーム削除(loginUser, menjou);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_免状免許_アラーム削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou) {
            return base.Channel.BLC_免状免許_アラーム削除Async(loginUser, menjou);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsSenin> BLC_船員検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter) {
            return base.Channel.BLC_船員検索(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsSenin>> BLC_船員検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.MsSeninFilter filter) {
            return base.Channel.BLC_船員検索Async(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> BLC_船員カード検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_船員カード検索(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> BLC_船員カード検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_船員カード検索Async(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> BLC_交代者検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_交代者検索(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> BLC_交代者検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_交代者検索Async(loginUser, filter);
        }
        
        public byte[] BLC_Excel_船員カード出力(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.BLC_Excel_船員カード出力(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_船員カード出力Async(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.BLC_Excel_船員カード出力Async(loginUser, msSeninId);
        }
        
        public NBaseData.DAC.SiHaijou BLC_配乗表作成(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_配乗表作成(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiHaijou> BLC_配乗表作成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_配乗表作成Async(loginUser, filter);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiSimulationDetail> BLC_GetCrewMatrix(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.BLC_GetCrewMatrix(loginUser, msSeninId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiSimulationDetail>> BLC_GetCrewMatrixAsync(NBaseData.DAC.MsUser loginUser, int msSeninId) {
            return base.Channel.BLC_GetCrewMatrixAsync(loginUser, msSeninId);
        }
        
        public byte[] BLC_Excel_傷病一覧出力(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId) {
            return base.Channel.BLC_Excel_傷病一覧出力(loginUser, fromDate, toDate, msSiShokumeiId, msSeninId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_傷病一覧出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId) {
            return base.Channel.BLC_Excel_傷病一覧出力Async(loginUser, fromDate, toDate, msSiShokumeiId, msSeninId);
        }
        
        public byte[] BLC_Excel_健康診断一覧出力(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId) {
            return base.Channel.BLC_Excel_健康診断一覧出力(loginUser, fromDate, toDate, msSiShokumeiId, msSeninId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_健康診断一覧出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime fromDate, System.DateTime toDate, int msSiShokumeiId, int msSeninId) {
            return base.Channel.BLC_Excel_健康診断一覧出力Async(loginUser, fromDate, toDate, msSiShokumeiId, msSeninId);
        }
        
        public byte[] BLC_Excel_職別海技免許等資格一覧出力(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, int msSeninId) {
            return base.Channel.BLC_Excel_職別海技免許等資格一覧出力(loginUser, msSiShokumeiId, msSeninId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_職別海技免許等資格一覧出力Async(NBaseData.DAC.MsUser loginUser, int msSiShokumeiId, int msSeninId) {
            return base.Channel.BLC_Excel_職別海技免許等資格一覧出力Async(loginUser, msSiShokumeiId, msSeninId);
        }
        
        public System.Collections.Generic.List<NBaseData.DS.MsSeninPlus> BLC_船員検索Advanced(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiAdvancedSearchFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionItem> conditionItems, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionValue> conditionValues) {
            return base.Channel.BLC_船員検索Advanced(loginUser, filter, conditionItems, conditionValues);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DS.MsSeninPlus>> BLC_船員検索AdvancedAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiAdvancedSearchFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionItem> conditionItems, System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionValue> conditionValues) {
            return base.Channel.BLC_船員検索AdvancedAsync(loginUser, filter, conditionItems, conditionValues);
        }
        
        public bool BLC_船員検索条件登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAdvancedSearchConditionHead conditionHead) {
            return base.Channel.BLC_船員検索条件登録(loginUser, conditionHead);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_船員検索条件登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAdvancedSearchConditionHead conditionHead) {
            return base.Channel.BLC_船員検索条件登録Async(loginUser, conditionHead);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionHead> BLC_Get船員検索条件(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_Get船員検索条件(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiAdvancedSearchConditionHead>> BLC_Get船員検索条件Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_Get船員検索条件Async(loginUser);
        }
        
        public byte[] BLC_Excel_給与手当一覧表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_給与手当一覧表出力(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_給与手当一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_給与手当一覧表出力Async(loginUser, date, msVesselId);
        }
        
        public byte[] BLC_Excel_船員交代予定表出力(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_Excel_船員交代予定表出力(loginUser);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_船員交代予定表出力Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_Excel_船員交代予定表出力Async(loginUser);
        }
        
        public int BLC_船員基本給登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiSalary salary) {
            return base.Channel.BLC_船員基本給登録(loginUser, senin, salary);
        }
        
        public System.Threading.Tasks.Task<int> BLC_船員基本給登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiSalary salary) {
            return base.Channel.BLC_船員基本給登録Async(loginUser, senin, salary);
        }
        
        public int BLC_船員既往歴登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiKenshinPmhKa kenshinPmhKa) {
            return base.Channel.BLC_船員既往歴登録(loginUser, senin, kenshinPmhKa);
        }
        
        public System.Threading.Tasks.Task<int> BLC_船員既往歴登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiKenshinPmhKa kenshinPmhKa) {
            return base.Channel.BLC_船員既往歴登録Async(loginUser, senin, kenshinPmhKa);
        }
        
        public int BLC_船員特記事項登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiRemarks remarks) {
            return base.Channel.BLC_船員特記事項登録(loginUser, senin, remarks);
        }
        
        public System.Threading.Tasks.Task<int> BLC_船員特記事項登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.SiRemarks remarks) {
            return base.Channel.BLC_船員特記事項登録Async(loginUser, senin, remarks);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCard> BLC_船員カード検索2(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_船員カード検索2(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCard>> BLC_船員カード検索2Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiCardFilter filter) {
            return base.Channel.BLC_船員カード検索2Async(loginUser, filter);
        }
        
        public bool BLC_船員カード登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCard card) {
            return base.Channel.BLC_船員カード登録(loginUser, card);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_船員カード登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCard card) {
            return base.Channel.BLC_船員カード登録Async(loginUser, card);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdThiItem> BLC_入渠_直近ドックオーダー品目(NBaseData.DAC.MsUser loginUser, int msVesselID, string msThiIraiShousaiID) {
            return base.Channel.BLC_入渠_直近ドックオーダー品目(loginUser, msVesselID, msThiIraiShousaiID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdThiItem>> BLC_入渠_直近ドックオーダー品目Async(NBaseData.DAC.MsUser loginUser, int msVesselID, string msThiIraiShousaiID) {
            return base.Channel.BLC_入渠_直近ドックオーダー品目Async(loginUser, msVesselID, msThiIraiShousaiID);
        }
        
        public byte[] BLC_Excel入渠費用管理表_取得(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excel入渠費用管理表_取得(loginUser, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel入渠費用管理表_取得Async(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excel入渠費用管理表_取得Async(loginUser, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public byte[] BLC_Excel動静表_取得(NBaseData.DAC.MsUser loginUser, System.DateTime today) {
            return base.Channel.BLC_Excel動静表_取得(loginUser, today);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel動静表_取得Async(NBaseData.DAC.MsUser loginUser, System.DateTime today) {
            return base.Channel.BLC_Excel動静表_取得Async(loginUser, today);
        }
        
        public byte[] BLC_Excel月次収支報告書_取得(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, decimal unit, string month, bool is累計) {
            return base.Channel.BLC_Excel月次収支報告書_取得(loginUser, selectedYosanHead, unit, month, is累計);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel月次収支報告書_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, decimal unit, string month, bool is累計) {
            return base.Channel.BLC_Excel月次収支報告書_取得Async(loginUser, selectedYosanHead, unit, month, is累計);
        }
        
        public bool BLC月次計上処理_実行(NBaseData.DAC.MsUser loginUser, string YearMonth) {
            return base.Channel.BLC月次計上処理_実行(loginUser, YearMonth);
        }
        
        public System.Threading.Tasks.Task<bool> BLC月次計上処理_実行Async(NBaseData.DAC.MsUser loginUser, string YearMonth) {
            return base.Channel.BLC月次計上処理_実行Async(loginUser, YearMonth);
        }
        
        public bool BLC_新規発注処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems) {
            return base.Channel.BLC_新規発注処理_新規(loginUser, OdThi, OdMm, OdMk, OdJry, OdThiItems, OdThiShousaiItems, OdJryItems, OdJryShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_新規発注処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems) {
            return base.Channel.BLC_新規発注処理_新規Async(loginUser, OdThi, OdMm, OdMk, OdJry, OdThiItems, OdThiShousaiItems, OdJryItems, OdJryShousaiItems);
        }
        
        public bool BLC_新規発注処理_手配あり(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems) {
            return base.Channel.BLC_新規発注処理_手配あり(loginUser, OdThi, OdMm, OdMk, OdJry, OdThiItems, OdThiShousaiItems, OdJryItems, OdJryShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_新規発注処理_手配ありAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems) {
            return base.Channel.BLC_新規発注処理_手配ありAsync(loginUser, OdThi, OdMm, OdMk, OdJry, OdThiItems, OdThiShousaiItems, OdJryItems, OdJryShousaiItems);
        }
        
        public bool BLC_新規発注処理_保存(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems) {
            return base.Channel.BLC_新規発注処理_保存(loginUser, OdThi, OdMm, OdMk, OdThiItems, OdThiShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_新規発注処理_保存Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems) {
            return base.Channel.BLC_新規発注処理_保存Async(loginUser, OdThi, OdMm, OdMk, OdThiItems, OdThiShousaiItems);
        }
        
        public bool BLC_新規発注処理_保存情報削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk) {
            return base.Channel.BLC_新規発注処理_保存情報削除(loginUser, OdThi, OdMm, OdMk);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_新規発注処理_保存情報削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk) {
            return base.Channel.BLC_新規発注処理_保存情報削除Async(loginUser, OdThi, OdMm, OdMk);
        }
        
        public bool BLC_予算作成(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> kadouVessels) {
            return base.Channel.BLC_予算作成(loginUser, yosanHead, kadouVessels);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_予算作成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> kadouVessels) {
            return base.Channel.BLC_予算作成Async(loginUser, yosanHead, kadouVessels);
        }
        
        public bool BLC_予算Revアップ(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead) {
            return base.Channel.BLC_予算Revアップ(loginUser, yosanHead);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_予算RevアップAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead) {
            return base.Channel.BLC_予算RevアップAsync(loginUser, yosanHead);
        }
        
        public bool BLC_予算保存(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems, NBaseData.DAC.BgNrkKanryou nrkKanryou) {
            return base.Channel.BLC_予算保存(loginUser, yosanItems, nrkKanryou);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_予算保存Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgYosanItem> yosanItems, NBaseData.DAC.BgNrkKanryou nrkKanryou) {
            return base.Channel.BLC_予算保存Async(loginUser, yosanItems, nrkKanryou);
        }
        
        public bool BLC_販管費保存(NBaseData.DAC.MsUser loginUser, int year, NBaseData.DAC.BgYosanHead yosanHead, int eigyo, int kanri, int nenkan, int keiei, System.Collections.Generic.List<int> msVesselIds, System.Collections.Generic.List<decimal> amounts) {
            return base.Channel.BLC_販管費保存(loginUser, year, yosanHead, eigyo, kanri, nenkan, keiei, msVesselIds, amounts);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_販管費保存Async(NBaseData.DAC.MsUser loginUser, int year, NBaseData.DAC.BgYosanHead yosanHead, int eigyo, int kanri, int nenkan, int keiei, System.Collections.Generic.List<int> msVesselIds, System.Collections.Generic.List<decimal> amounts) {
            return base.Channel.BLC_販管費保存Async(loginUser, year, yosanHead, eigyo, kanri, nenkan, keiei, msVesselIds, amounts);
        }
        
        public bool BLC_運航費保存(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year, NBaseData.DAC.BgUnkouhi unkouhi, bool doCopy) {
            return base.Channel.BLC_運航費保存(loginUser, yosanHeadId, msVesselId, year, unkouhi, doCopy);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_運航費保存Async(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int year, NBaseData.DAC.BgUnkouhi unkouhi, bool doCopy) {
            return base.Channel.BLC_運航費保存Async(loginUser, yosanHeadId, msVesselId, year, unkouhi, doCopy);
        }
        
        public bool BLC_修繕費保存(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem> uchiwakeYosanItems, NBaseData.DAC.BgYosanBikou yosanBikou) {
            return base.Channel.BLC_修繕費保存(loginUser, uchiwakeYosanItems, yosanBikou);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_修繕費保存Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgUchiwakeYosanItem> uchiwakeYosanItems, NBaseData.DAC.BgYosanBikou yosanBikou) {
            return base.Channel.BLC_修繕費保存Async(loginUser, uchiwakeYosanItems, yosanBikou);
        }
        
        public bool BLC_実績取込(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_実績取込(loginUser);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_実績取込Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_実績取込Async(loginUser);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row> BLC_概算計上一覧Row_SearchRecords(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.BLC_概算計上一覧Row_SearchRecords(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row>> BLC_概算計上一覧Row_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.OdJryFilter filter) {
            return base.Channel.BLC_概算計上一覧Row_SearchRecordsAsync(loginUser, filter);
        }
        
        public byte[] BLC_Excel概算計上一覧_取得(NBaseData.DAC.MsUser loginUser, int year, int month, System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row> rows) {
            return base.Channel.BLC_Excel概算計上一覧_取得(loginUser, year, month, rows);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel概算計上一覧_取得Async(NBaseData.DAC.MsUser loginUser, int year, int month, System.Collections.Generic.List<NBaseData.BLC.概算計上一覧Row> rows) {
            return base.Channel.BLC_Excel概算計上一覧_取得Async(loginUser, year, month, rows);
        }
        
        public bool BLC概算計上処理_実行(NBaseData.DAC.MsUser loginUser, string YearMonth, System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo> odGaisanKeijos) {
            return base.Channel.BLC概算計上処理_実行(loginUser, YearMonth, odGaisanKeijos);
        }
        
        public System.Threading.Tasks.Task<bool> BLC概算計上処理_実行Async(NBaseData.DAC.MsUser loginUser, string YearMonth, System.Collections.Generic.List<NBaseData.DAC.OdGaisanKeijo> odGaisanKeijos) {
            return base.Channel.BLC概算計上処理_実行Async(loginUser, YearMonth, odGaisanKeijos);
        }
        
        public byte[] BLC_Excelランニング管理表_取得(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excelランニング管理表_取得(loginUser, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excelランニング管理表_取得Async(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excelランニング管理表_取得Async(loginUser, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public bool BLC_支払更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems) {
            return base.Channel.BLC_支払更新処理_新規(loginUser, OdShr, OdShrItems, OdShrShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_支払更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems) {
            return base.Channel.BLC_支払更新処理_新規Async(loginUser, OdShr, OdShrItems, OdShrShousaiItems);
        }
        
        public bool BLC_支払更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> newOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> chgOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> delOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> newOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> chgOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> delOdShrShousaiItems) {
            return base.Channel.BLC_支払更新処理_更新(loginUser, OdShr, newOdShrItems, chgOdShrItems, delOdShrItems, newOdShrShousaiItems, chgOdShrShousaiItems, delOdShrShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_支払更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> newOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> chgOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> delOdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> newOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> chgOdShrShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> delOdShrShousaiItems) {
            return base.Channel.BLC_支払更新処理_更新Async(loginUser, OdShr, newOdShrItems, chgOdShrItems, delOdShrItems, newOdShrShousaiItems, chgOdShrShousaiItems, delOdShrShousaiItems);
        }
        
        public bool BLC_支払更新処理_落成(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr_R, NBaseData.DAC.OdShr OdShr_S, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems) {
            return base.Channel.BLC_支払更新処理_落成(loginUser, OdShr_R, OdShr_S, OdShrItems, OdShrShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_支払更新処理_落成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr OdShr_R, NBaseData.DAC.OdShr OdShr_S, System.Collections.Generic.List<NBaseData.DAC.OdShrItem> OdShrItems, System.Collections.Generic.List<NBaseData.DAC.OdShrShousaiItem> OdShrShousaiItems) {
            return base.Channel.BLC_支払更新処理_落成Async(loginUser, OdShr_R, OdShr_S, OdShrItems, OdShrShousaiItems);
        }
        
        public bool BLC_注文書_準備(NBaseData.DAC.MsUser loginUser, string odMkId, string telNo, string faxNo, System.DateTime nouki, string okurisaki) {
            return base.Channel.BLC_注文書_準備(loginUser, odMkId, telNo, faxNo, nouki, okurisaki);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_注文書_準備Async(NBaseData.DAC.MsUser loginUser, string odMkId, string telNo, string faxNo, System.DateTime nouki, string okurisaki) {
            return base.Channel.BLC_注文書_準備Async(loginUser, odMkId, telNo, faxNo, nouki, okurisaki);
        }
        
        public byte[] BLC_PDF注文書_取得(string odMkId, string telNo, string faxNo, string headerBikou) {
            return base.Channel.BLC_PDF注文書_取得(odMkId, telNo, faxNo, headerBikou);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_PDF注文書_取得Async(string odMkId, string telNo, string faxNo, string headerBikou) {
            return base.Channel.BLC_PDF注文書_取得Async(odMkId, telNo, faxNo, headerBikou);
        }
        
        public bool BLC_手配状況変更_受領済(NBaseData.DAC.MsUser loginUser, string OdJryId) {
            return base.Channel.BLC_手配状況変更_受領済(loginUser, OdJryId);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_手配状況変更_受領済Async(NBaseData.DAC.MsUser loginUser, string OdJryId) {
            return base.Channel.BLC_手配状況変更_受領済Async(loginUser, OdJryId);
        }
        
        public bool BLC_新規見積依頼処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> OdAttachFiles) {
            return base.Channel.BLC_新規見積依頼処理_新規(loginUser, OdThi, OdMm, OdMk, OdThiItems, OdThiShousaiItems, OdAttachFiles);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_新規見積依頼処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, NBaseData.DAC.OdMm OdMm, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> OdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> OdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> OdAttachFiles) {
            return base.Channel.BLC_新規見積依頼処理_新規Async(loginUser, OdThi, OdMm, OdMk, OdThiItems, OdThiShousaiItems, OdAttachFiles);
        }
        
        public bool BLC_受領更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems) {
            return base.Channel.BLC_受領更新処理_新規(loginUser, OdJry, OdJryItems, OdJryShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_受領更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> OdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> OdJryShousaiItems) {
            return base.Channel.BLC_受領更新処理_新規Async(loginUser, OdJry, OdJryItems, OdJryShousaiItems);
        }
        
        public bool BLC_受領更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> newOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> chgOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> delOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> newOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> chgOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> delOdJryShousaiItems) {
            return base.Channel.BLC_受領更新処理_更新(loginUser, OdJry, newOdJryItems, chgOdJryItems, delOdJryItems, newOdJryShousaiItems, chgOdJryShousaiItems, delOdJryShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_受領更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdJry OdJry, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> newOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> chgOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryItem> delOdJryItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> newOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> chgOdJryShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdJryShousaiItem> delOdJryShousaiItems) {
            return base.Channel.BLC_受領更新処理_更新Async(loginUser, OdJry, newOdJryItems, chgOdJryItems, delOdJryItems, newOdJryShousaiItems, chgOdJryShousaiItems, delOdJryShousaiItems);
        }
        
        public byte[] BLC_Excel船用品発注管理表_取得(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excel船用品発注管理表_取得(loginUser, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel船用品発注管理表_取得Async(NBaseData.DAC.MsUser loginUser, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excel船用品発注管理表_取得Async(loginUser, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public byte[] BLC_PDF見積り依頼書_取得(string odMkId) {
            return base.Channel.BLC_PDF見積り依頼書_取得(odMkId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_PDF見積り依頼書_取得Async(string odMkId) {
            return base.Channel.BLC_PDF見積り依頼書_取得Async(odMkId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReferences.NBaseService.BLC_見積依頼メール送信Response ServiceReferences.NBaseService.IService.BLC_見積依頼メール送信(ServiceReferences.NBaseService.BLC_見積依頼メール送信Request request) {
            return base.Channel.BLC_見積依頼メール送信(request);
        }
        
        public bool BLC_見積依頼メール送信(NBaseData.DAC.MsUser loginUser, string odMkId, string customerName, string tantousha, string subject, string mailAddress, string mkNo, string mkKigen, string webKey, System.DateTime mmDate, System.DateTime kiboubi, ref string errMessage) {
            ServiceReferences.NBaseService.BLC_見積依頼メール送信Request inValue = new ServiceReferences.NBaseService.BLC_見積依頼メール送信Request();
            inValue.loginUser = loginUser;
            inValue.odMkId = odMkId;
            inValue.customerName = customerName;
            inValue.tantousha = tantousha;
            inValue.subject = subject;
            inValue.mailAddress = mailAddress;
            inValue.mkNo = mkNo;
            inValue.mkKigen = mkKigen;
            inValue.webKey = webKey;
            inValue.mmDate = mmDate;
            inValue.kiboubi = kiboubi;
            inValue.errMessage = errMessage;
            ServiceReferences.NBaseService.BLC_見積依頼メール送信Response retVal = ((ServiceReferences.NBaseService.IService)(this)).BLC_見積依頼メール送信(inValue);
            errMessage = retVal.errMessage;
            return retVal.BLC_見積依頼メール送信Result;
        }
        
        public System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_見積依頼メール送信Response> BLC_見積依頼メール送信Async(ServiceReferences.NBaseService.BLC_見積依頼メール送信Request request) {
            return base.Channel.BLC_見積依頼メール送信Async(request);
        }
        
        public bool BLC_燃料_潤滑油メール送信_同期用(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.BLC_燃料_潤滑油メール送信_同期用(loginUser, odThiID);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_燃料_潤滑油メール送信_同期用Async(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.BLC_燃料_潤滑油メール送信_同期用Async(loginUser, odThiID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Response ServiceReferences.NBaseService.IService.BLC_燃料_潤滑油メール送信(ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Request request) {
            return base.Channel.BLC_燃料_潤滑油メール送信(request);
        }
        
        public bool BLC_燃料_潤滑油メール送信(NBaseData.DAC.MsUser loginUser, string odThiID, ref string errMessage) {
            ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Request inValue = new ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Request();
            inValue.loginUser = loginUser;
            inValue.odThiID = odThiID;
            inValue.errMessage = errMessage;
            ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Response retVal = ((ServiceReferences.NBaseService.IService)(this)).BLC_燃料_潤滑油メール送信(inValue);
            errMessage = retVal.errMessage;
            return retVal.BLC_燃料_潤滑油メール送信Result;
        }
        
        public System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Response> BLC_燃料_潤滑油メール送信Async(ServiceReferences.NBaseService.BLC_燃料_潤滑油メール送信Request request) {
            return base.Channel.BLC_燃料_潤滑油メール送信Async(request);
        }
        
        public bool BLC_手配依頼メール送信_同期用(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.BLC_手配依頼メール送信_同期用(loginUser, odThiID);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_手配依頼メール送信_同期用Async(NBaseData.DAC.MsUser loginUser, string odThiID) {
            return base.Channel.BLC_手配依頼メール送信_同期用Async(loginUser, odThiID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Response ServiceReferences.NBaseService.IService.BLC_燃料_潤滑油以外メール送信(ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Request request) {
            return base.Channel.BLC_燃料_潤滑油以外メール送信(request);
        }
        
        public bool BLC_燃料_潤滑油以外メール送信(NBaseData.DAC.MsUser loginUser, string odThiID, ref string errMessage) {
            ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Request inValue = new ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Request();
            inValue.loginUser = loginUser;
            inValue.odThiID = odThiID;
            inValue.errMessage = errMessage;
            ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Response retVal = ((ServiceReferences.NBaseService.IService)(this)).BLC_燃料_潤滑油以外メール送信(inValue);
            errMessage = retVal.errMessage;
            return retVal.BLC_燃料_潤滑油以外メール送信Result;
        }
        
        public System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Response> BLC_燃料_潤滑油以外メール送信Async(ServiceReferences.NBaseService.BLC_燃料_潤滑油以外メール送信Request request) {
            return base.Channel.BLC_燃料_潤滑油以外メール送信Async(request);
        }
        
        public bool BLC_見積回答更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItems) {
            return base.Channel.BLC_見積回答更新処理_新規(loginUser, OdMk, OdMkItems, OdMkShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_見積回答更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> OdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> OdMkShousaiItems) {
            return base.Channel.BLC_見積回答更新処理_新規Async(loginUser, OdMk, OdMkItems, OdMkShousaiItems);
        }
        
        public bool BLC_見積回答更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> newOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> chgOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> delOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> newOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> chgOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> delOdMkShousaiItems) {
            return base.Channel.BLC_見積回答更新処理_更新(loginUser, OdMk, newOdMkItems, chgOdMkItems, delOdMkItems, newOdMkShousaiItems, chgOdMkShousaiItems, delOdMkShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_見積回答更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMk OdMk, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> newOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> chgOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkItem> delOdMkItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> newOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> chgOdMkShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdMkShousaiItem> delOdMkShousaiItems) {
            return base.Channel.BLC_見積回答更新処理_更新Async(loginUser, OdMk, newOdMkItems, chgOdMkItems, delOdMkItems, newOdMkShousaiItems, chgOdMkShousaiItems, delOdMkShousaiItems);
        }
        
        public bool BLC_見積依頼更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm, System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItems, System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItems) {
            return base.Channel.BLC_見積依頼更新処理_新規(loginUser, OdMm, OdMmItems, OdMmShousaiItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_見積依頼更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm, System.Collections.Generic.List<NBaseData.DAC.OdMmItem> OdMmItems, System.Collections.Generic.List<NBaseData.DAC.OdMmShousaiItem> OdMmShousaiItems) {
            return base.Channel.BLC_見積依頼更新処理_新規Async(loginUser, OdMm, OdMmItems, OdMmShousaiItems);
        }
        
        public bool BLC_見積依頼更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm) {
            return base.Channel.BLC_見積依頼更新処理_更新(loginUser, OdMm);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_見積依頼更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdMm OdMm) {
            return base.Channel.BLC_見積依頼更新処理_更新Async(loginUser, OdMm);
        }
        
        public bool BLC_ユーザ情報更新処理_新規作成(NBaseData.DAC.MsUser loingUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin) {
            return base.Channel.BLC_ユーザ情報更新処理_新規作成(loingUser, user, Ubumon, msSenin);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_ユーザ情報更新処理_新規作成Async(NBaseData.DAC.MsUser loingUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin) {
            return base.Channel.BLC_ユーザ情報更新処理_新規作成Async(loingUser, user, Ubumon, msSenin);
        }
        
        public bool BLC_ユーザ情報更新処理_削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin) {
            return base.Channel.BLC_ユーザ情報更新処理_削除(loginUser, user, Ubumon, msSenin);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_ユーザ情報更新処理_削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin) {
            return base.Channel.BLC_ユーザ情報更新処理_削除Async(loginUser, user, Ubumon, msSenin);
        }
        
        public bool BLC_ユーザ情報更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin) {
            return base.Channel.BLC_ユーザ情報更新処理_更新(loginUser, user, Ubumon, msSenin);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_ユーザ情報更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser user, NBaseData.DAC.MsUserBumon Ubumon, NBaseData.DAC.MsSenin msSenin) {
            return base.Channel.BLC_ユーザ情報更新処理_更新Async(loginUser, user, Ubumon, msSenin);
        }
        
        public NBaseData.DAC.MsUser BLC_ログイン処理_ログインチェック(string UserID, string Password) {
            return base.Channel.BLC_ログイン処理_ログインチェック(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsUser> BLC_ログイン処理_ログインチェックAsync(string UserID, string Password) {
            return base.Channel.BLC_ログイン処理_ログインチェックAsync(UserID, Password);
        }
        
        public bool BLC_手配依頼更新処理_新規(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> newOdAttachFiles) {
            return base.Channel.BLC_手配依頼更新処理_新規(loginUser, OdThi, newOdThiItems, newOdThiShousaiItems, newOdAttachFiles);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_手配依頼更新処理_新規Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> newOdAttachFiles) {
            return base.Channel.BLC_手配依頼更新処理_新規Async(loginUser, OdThi, newOdThiItems, newOdThiShousaiItems, newOdAttachFiles);
        }
        
        public bool BLC_手配依頼更新処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> chgOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> delOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> chgOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> delOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> odAttachFiles) {
            return base.Channel.BLC_手配依頼更新処理_更新(loginUser, OdThi, newOdThiItems, chgOdThiItems, delOdThiItems, newOdThiShousaiItems, chgOdThiShousaiItems, delOdThiShousaiItems, odAttachFiles);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_手配依頼更新処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi OdThi, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> newOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> chgOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiItem> delOdThiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> newOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> chgOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdThiShousaiItem> delOdThiShousaiItems, System.Collections.Generic.List<NBaseData.DAC.OdAttachFile> odAttachFiles) {
            return base.Channel.BLC_手配依頼更新処理_更新Async(loginUser, OdThi, newOdThiItems, chgOdThiItems, delOdThiItems, newOdThiShousaiItems, chgOdThiShousaiItems, delOdThiShousaiItems, odAttachFiles);
        }
        
        public System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ> BLC_貯蔵品年間管理表_潤滑油受入_取得(NBaseData.DAC.MsUser loginUser, int msVesselId, int year) {
            return base.Channel.BLC_貯蔵品年間管理表_潤滑油受入_取得(loginUser, msVesselId, year);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ>> BLC_貯蔵品年間管理表_潤滑油受入_取得Async(NBaseData.DAC.MsUser loginUser, int msVesselId, int year) {
            return base.Channel.BLC_貯蔵品年間管理表_潤滑油受入_取得Async(loginUser, msVesselId, year);
        }
        
        public System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ> BLC_貯蔵品年間管理表_船用品受入_取得(NBaseData.DAC.MsUser loginUser, int msVesselId, int year) {
            return base.Channel.BLC_貯蔵品年間管理表_船用品受入_取得(loginUser, msVesselId, year);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, NBaseData.BLC.年間管理表受入データ>> BLC_貯蔵品年間管理表_船用品受入_取得Async(NBaseData.DAC.MsUser loginUser, int msVesselId, int year) {
            return base.Channel.BLC_貯蔵品年間管理表_船用品受入_取得Async(loginUser, msVesselId, year);
        }
        
        public bool BLC_貯蔵品詳細保存処理(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> savelist) {
            return base.Channel.BLC_貯蔵品詳細保存処理(loginUser, savelist);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_貯蔵品詳細保存処理Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> savelist) {
            return base.Channel.BLC_貯蔵品詳細保存処理Async(loginUser, savelist);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiKoushu> BLC_講習管理_検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter) {
            return base.Channel.BLC_講習管理_検索(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiKoushu>> BLC_講習管理_検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter) {
            return base.Channel.BLC_講習管理_検索Async(loginUser, filter);
        }
        
        public byte[] BLC_Excel_講習一覧出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList) {
            return base.Channel.BLC_Excel_講習一覧出力(loginUser, koushuList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_講習一覧出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList) {
            return base.Channel.BLC_Excel_講習一覧出力Async(loginUser, koushuList);
        }
        
        public byte[] BLC_Excel_未受講者一覧出力(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList) {
            return base.Channel.BLC_Excel_未受講者一覧出力(loginUser, filter, koushuList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_未受講者一覧出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiKoushuFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiKoushu> koushuList) {
            return base.Channel.BLC_Excel_未受講者一覧出力Async(loginUser, filter, koushuList);
        }
        
        public bool BLC_貨物マスタ更新処理_追加処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo) {
            return base.Channel.BLC_貨物マスタ更新処理_追加処理(loginUser, Cargo);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_貨物マスタ更新処理_追加処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo) {
            return base.Channel.BLC_貨物マスタ更新処理_追加処理Async(loginUser, Cargo);
        }
        
        public bool BLC_貨物マスタ更新処理_更新処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo) {
            return base.Channel.BLC_貨物マスタ更新処理_更新処理(loginUser, Cargo);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_貨物マスタ更新処理_更新処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsCargo Cargo) {
            return base.Channel.BLC_貨物マスタ更新処理_更新処理Async(loginUser, Cargo);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.MsVesselRankLicense> BLC_乗船資格_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_乗船資格_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.MsVesselRankLicense>> BLC_乗船資格_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_乗船資格_GetRecordsAsync(loginUser);
        }
        
        public bool BLC_乗船資格_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselRankLicense info) {
            return base.Channel.BLC_乗船資格_InsertOrUpdate(loginUser, info);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_乗船資格_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselRankLicense info) {
            return base.Channel.BLC_乗船資格_InsertOrUpdateAsync(loginUser, info);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション> BLC_配乗シミュレーション_下船者検索(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, bool personalScheduleCheck) {
            return base.Channel.BLC_配乗シミュレーション_下船者検索(loginUser, baseDate, vesselId, shokumeiId, days, personalScheduleCheck);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション>> BLC_配乗シミュレーション_下船者検索Async(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, bool personalScheduleCheck) {
            return base.Channel.BLC_配乗シミュレーション_下船者検索Async(loginUser, baseDate, vesselId, shokumeiId, days, personalScheduleCheck);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション> BLC_配乗シミュレーション_乗船者検索(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, System.Collections.Generic.List<int> shubetsuIds, bool vesselCheck, bool shokumeiCheck, bool menjouCheck, bool koushuCheck, bool personalScheduleCheck, bool fellowPassengersCheck, bool experienceCheck) {
            return base.Channel.BLC_配乗シミュレーション_乗船者検索(loginUser, baseDate, vesselId, shokumeiId, days, shubetsuIds, vesselCheck, shokumeiCheck, menjouCheck, koushuCheck, personalScheduleCheck, fellowPassengersCheck, experienceCheck);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.配乗シミュレーション>> BLC_配乗シミュレーション_乗船者検索Async(NBaseData.DAC.MsUser loginUser, System.DateTime baseDate, int vesselId, int shokumeiId, int days, System.Collections.Generic.List<int> shubetsuIds, bool vesselCheck, bool shokumeiCheck, bool menjouCheck, bool koushuCheck, bool personalScheduleCheck, bool fellowPassengersCheck, bool experienceCheck) {
            return base.Channel.BLC_配乗シミュレーション_乗船者検索Async(loginUser, baseDate, vesselId, shokumeiId, days, shubetsuIds, vesselCheck, shokumeiCheck, menjouCheck, koushuCheck, personalScheduleCheck, fellowPassengersCheck, experienceCheck);
        }
        
        public NBaseData.DAC.SiBoardingSchedule BLC_配乗シミュレーション_交代者決定(NBaseData.DAC.MsUser loginUser, System.DateTime signOnDate, string signOffSiCardId, int vesselId, int shokumeiId, int signOnCrewId) {
            return base.Channel.BLC_配乗シミュレーション_交代者決定(loginUser, signOnDate, signOffSiCardId, vesselId, shokumeiId, signOnCrewId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiBoardingSchedule> BLC_配乗シミュレーション_交代者決定Async(NBaseData.DAC.MsUser loginUser, System.DateTime signOnDate, string signOffSiCardId, int vesselId, int shokumeiId, int signOnCrewId) {
            return base.Channel.BLC_配乗シミュレーション_交代者決定Async(loginUser, signOnDate, signOffSiCardId, vesselId, shokumeiId, signOnCrewId);
        }
        
        public bool BLC_配乗シミュレーション_交代者解除(NBaseData.DAC.MsUser loginUser, string boardingScheduleId) {
            return base.Channel.BLC_配乗シミュレーション_交代者解除(loginUser, boardingScheduleId);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_配乗シミュレーション_交代者解除Async(NBaseData.DAC.MsUser loginUser, string boardingScheduleId) {
            return base.Channel.BLC_配乗シミュレーション_交代者解除Async(loginUser, boardingScheduleId);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>> BLC_配乗計画_SearchRevision(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchRevision(loginUser, month, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>>> BLC_配乗計画_SearchRevisionAsync(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchRevisionAsync(loginUser, month, vessel_kind);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>> BLC_配乗計画_SearchRevisions(NBaseData.DAC.MsUser loginUser, System.DateTime date1, System.DateTime date2, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchRevisions(loginUser, date1, date2, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<NBaseData.DAC.SiCardPlanHead>>> BLC_配乗計画_SearchRevisionsAsync(NBaseData.DAC.MsUser loginUser, System.DateTime date1, System.DateTime date2, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchRevisionsAsync(loginUser, date1, date2, vessel_kind);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCardPlan> BLC_配乗計画_SearchPlan(NBaseData.DAC.MsUser loginUser, System.DateTime startdate, System.DateTime enddate, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchPlan(loginUser, startdate, enddate, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlan>> BLC_配乗計画_SearchPlanAsync(NBaseData.DAC.MsUser loginUser, System.DateTime startdate, System.DateTime enddate, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchPlanAsync(loginUser, startdate, enddate, vessel_kind);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiCardPlan> BLC_配乗計画_SearchPlanByHeder(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlanHead head, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchPlanByHeder(loginUser, head, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiCardPlan>> BLC_配乗計画_SearchPlanByHederAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlanHead head, int vessel_kind) {
            return base.Channel.BLC_配乗計画_SearchPlanByHederAsync(loginUser, head, vessel_kind);
        }
        
        public NBaseData.DAC.MsSenin BLC_配乗計画_GetMsSenin(NBaseData.DAC.MsUser loginUser, string cardID, bool isPlan) {
            return base.Channel.BLC_配乗計画_GetMsSenin(loginUser, cardID, isPlan);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSenin> BLC_配乗計画_GetMsSeninAsync(NBaseData.DAC.MsUser loginUser, string cardID, bool isPlan) {
            return base.Channel.BLC_配乗計画_GetMsSeninAsync(loginUser, cardID, isPlan);
        }
        
        public bool BLC_配乗計画_RevisionUp(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind) {
            return base.Channel.BLC_配乗計画_RevisionUp(loginUser, month, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_配乗計画_RevisionUpAsync(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind) {
            return base.Channel.BLC_配乗計画_RevisionUpAsync(loginUser, month, vessel_kind);
        }
        
        public bool BLC_配乗計画_Shime(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind) {
            return base.Channel.BLC_配乗計画_Shime(loginUser, month, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_配乗計画_ShimeAsync(NBaseData.DAC.MsUser loginUser, System.DateTime month, int vessel_kind) {
            return base.Channel.BLC_配乗計画_ShimeAsync(loginUser, month, vessel_kind);
        }
        
        public string BLC_配乗計画_CheckValidate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime startdate, int pmstart, System.DateTime enddate, int pmend, int vessel_kind) {
            return base.Channel.BLC_配乗計画_CheckValidate(loginUser, plan, startdate, pmstart, enddate, pmend, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<string> BLC_配乗計画_CheckValidateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime startdate, int pmstart, System.DateTime enddate, int pmend, int vessel_kind) {
            return base.Channel.BLC_配乗計画_CheckValidateAsync(loginUser, plan, startdate, pmstart, enddate, pmend, vessel_kind);
        }
        
        public bool BLC_配乗計画_Check交代者予定(NBaseData.DAC.MsUser loginUser, string repracementID, NBaseData.DAC.MsSenin senin, System.DateTime startdate) {
            return base.Channel.BLC_配乗計画_Check交代者予定(loginUser, repracementID, senin, startdate);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_配乗計画_Check交代者予定Async(NBaseData.DAC.MsUser loginUser, string repracementID, NBaseData.DAC.MsSenin senin, System.DateTime startdate) {
            return base.Channel.BLC_配乗計画_Check交代者予定Async(loginUser, repracementID, senin, startdate);
        }
        
        public bool BLC_配乗計画_Is交代乗船(NBaseData.DAC.MsUser loginUser, string planID) {
            return base.Channel.BLC_配乗計画_Is交代乗船(loginUser, planID);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_配乗計画_Is交代乗船Async(NBaseData.DAC.MsUser loginUser, string planID) {
            return base.Channel.BLC_配乗計画_Is交代乗船Async(loginUser, planID);
        }
        
        public NBaseData.DAC.SiCardPlan BLC_配乗計画_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime dt, int vessel_kind) {
            return base.Channel.BLC_配乗計画_InsertOrUpdate(loginUser, plan, dt, vessel_kind);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiCardPlan> BLC_配乗計画_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan, System.DateTime dt, int vessel_kind) {
            return base.Channel.BLC_配乗計画_InsertOrUpdateAsync(loginUser, plan, dt, vessel_kind);
        }
        
        public NBaseData.DAC.SiCardPlan BLC_配乗計画_Delete(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan) {
            return base.Channel.BLC_配乗計画_Delete(loginUser, plan);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiCardPlan> BLC_配乗計画_DeleteAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiCardPlan plan) {
            return base.Channel.BLC_配乗計画_DeleteAsync(loginUser, plan);
        }
        
        public byte[] BLC_Excel_配乗計画表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan) {
            return base.Channel.BLC_Excel_配乗計画表出力(loginUser, date, isPlan);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_配乗計画表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan) {
            return base.Channel.BLC_Excel_配乗計画表出力Async(loginUser, date, isPlan);
        }
        
        public byte[] BLC_Excel_配乗計画表内航乗下船出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan) {
            return base.Channel.BLC_Excel_配乗計画表内航乗下船出力(loginUser, date, isPlan);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_配乗計画表内航乗下船出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, bool isPlan) {
            return base.Channel.BLC_Excel_配乗計画表内航乗下船出力Async(loginUser, date, isPlan);
        }
        
        public NBaseData.DAC.BgHankanhi BgHankanhi_GetRecordByYosanHeadIDYear(NBaseData.DAC.MsUser loginUser, int headid, int year) {
            return base.Channel.BgHankanhi_GetRecordByYosanHeadIDYear(loginUser, headid, year);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgHankanhi> BgHankanhi_GetRecordByYosanHeadIDYearAsync(NBaseData.DAC.MsUser loginUser, int headid, int year) {
            return base.Channel.BgHankanhi_GetRecordByYosanHeadIDYearAsync(loginUser, headid, year);
        }
        
        public bool BgHankanhi_InsertRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi) {
            return base.Channel.BgHankanhi_InsertRecord(loginUser, hankanhi);
        }
        
        public System.Threading.Tasks.Task<bool> BgHankanhi_InsertRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi) {
            return base.Channel.BgHankanhi_InsertRecordAsync(loginUser, hankanhi);
        }
        
        public bool BgHankanhi_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi) {
            return base.Channel.BgHankanhi_UpdateRecord(loginUser, hankanhi);
        }
        
        public System.Threading.Tasks.Task<bool> BgHankanhi_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgHankanhi hankanhi) {
            return base.Channel.BgHankanhi_UpdateRecordAsync(loginUser, hankanhi);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_年単位_船(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd) {
            return base.Channel.BgJiseki_GetRecords_年単位_船(loginUser, msVesselId, jisekiDateStart, jisekiDateEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_年単位_船Async(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd) {
            return base.Channel.BgJiseki_GetRecords_年単位_船Async(loginUser, msVesselId, jisekiDateStart, jisekiDateEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_月単位_船(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd) {
            return base.Channel.BgJiseki_GetRecords_月単位_船(loginUser, msVesselId, jisekiDateStart, jisekiDateEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_月単位_船Async(NBaseData.DAC.MsUser loginUser, int msVesselId, string jisekiDateStart, string jisekiDateEnd) {
            return base.Channel.BgJiseki_GetRecords_月単位_船Async(loginUser, msVesselId, jisekiDateStart, jisekiDateEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_年単位_全社(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_年単位_全社(loginUser, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_年単位_全社Async(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_年単位_全社Async(loginUser, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_年単位_グループ(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_年単位_グループ(loginUser, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_年単位_グループAsync(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_年単位_グループAsync(loginUser, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecordsByVesselTypePriodBumonHimokus(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end, int bumonid) {
            return base.Channel.BgJiseki_GetRecordsByVesselTypePriodBumonHimokus(loginUser, vesseltype, start, end, bumonid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecordsByVesselTypePriodBumonHimokusAsync(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end, int bumonid) {
            return base.Channel.BgJiseki_GetRecordsByVesselTypePriodBumonHimokusAsync(loginUser, vesseltype, start, end, bumonid);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecordsByVesselTypePriodHimokus(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end) {
            return base.Channel.BgJiseki_GetRecordsByVesselTypePriodHimokus(loginUser, vesseltype, start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecordsByVesselTypePriodHimokusAsync(NBaseData.DAC.MsUser loginUser, string vesseltype, string start, string end) {
            return base.Channel.BgJiseki_GetRecordsByVesselTypePriodHimokusAsync(loginUser, vesseltype, start, end);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_月単位_グループ(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_月単位_グループ(loginUser, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_月単位_グループAsync(NBaseData.DAC.MsUser loginUser, string msVesselTypeId, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_月単位_グループAsync(loginUser, msVesselTypeId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecords_月単位_全社(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_月単位_全社(loginUser, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecords_月単位_全社Async(NBaseData.DAC.MsUser loginUser, string yearStart, string yearEnd) {
            return base.Channel.BgJiseki_GetRecords_月単位_全社Async(loginUser, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgJiseki> BgJiseki_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgJiseki_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgJiseki>> BgJiseki_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgJiseki_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselID(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselID(loginUser, yosanHeadId, msVesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAsync(loginUser, yosanHeadId, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAndYearRange(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int yearStart, int yearEnd) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAndYearRange(loginUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAndYearRangeAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId, int msVesselId, int yearStart, int yearEnd) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadIDAndMsVesselIDAndYearRangeAsync(loginUser, yosanHeadId, msVesselId, yearStart, yearEnd);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser loginUser, int yosanHeadId) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadID(loginUser, yosanHeadId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadIDAsync(loginUser, yosanHeadId);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByYosanHeadAndYearRange(NBaseData.DAC.MsUser loginUser, int yosanhead, int yearStart, int yearEnd) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadAndYearRange(loginUser, yosanhead, yearStart, yearEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByYosanHeadAndYearRangeAsync(NBaseData.DAC.MsUser loginUser, int yosanhead, int yearStart, int yearEnd) {
            return base.Channel.BgKadouVessel_GetRecordsByYosanHeadAndYearRangeAsync(loginUser, yosanhead, yearStart, yearEnd);
        }
        
        public bool BgKadouVessel_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> list) {
            return base.Channel.BgKadouVessel_UpdateRecords(loginUser, list);
        }
        
        public System.Threading.Tasks.Task<bool> BgKadouVessel_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> list) {
            return base.Channel.BgKadouVessel_UpdateRecordsAsync(loginUser, list);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel> BgKadouVessel_GetRecordsByMsVesselID(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgKadouVessel_GetRecordsByMsVesselID(loginUser, ms_vessel_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgKadouVessel>> BgKadouVessel_GetRecordsByMsVesselIDAsync(NBaseData.DAC.MsUser loginUser, int ms_vessel_id) {
            return base.Channel.BgKadouVessel_GetRecordsByMsVesselIDAsync(loginUser, ms_vessel_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou> BgNrkKanryou_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser msUser, int p) {
            return base.Channel.BgNrkKanryou_GetRecordsByYosanHeadID(msUser, p);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou>> BgNrkKanryou_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser msUser, int p) {
            return base.Channel.BgNrkKanryou_GetRecordsByYosanHeadIDAsync(msUser, p);
        }
        
        public bool BgNrkKanryou_UpdateRecord(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgNrkKanryou k) {
            return base.Channel.BgNrkKanryou_UpdateRecord(msUser, k);
        }
        
        public System.Threading.Tasks.Task<bool> BgNrkKanryou_UpdateRecordAsync(NBaseData.DAC.MsUser msUser, NBaseData.DAC.BgNrkKanryou k) {
            return base.Channel.BgNrkKanryou_UpdateRecordAsync(msUser, k);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou> BgNrkKanryou_GetRecordsByMsUserID(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.BgNrkKanryou_GetRecordsByMsUserID(loginUser, ms_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgNrkKanryou>> BgNrkKanryou_GetRecordsByMsUserIDAsync(NBaseData.DAC.MsUser loginUser, string ms_user_id) {
            return base.Channel.BgNrkKanryou_GetRecordsByMsUserIDAsync(loginUser, ms_user_id);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgRate> BgRate_GetRecordsByYosanHeadID(NBaseData.DAC.MsUser loginUser, int yosanHeadId) {
            return base.Channel.BgRate_GetRecordsByYosanHeadID(loginUser, yosanHeadId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgRate>> BgRate_GetRecordsByYosanHeadIDAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId) {
            return base.Channel.BgRate_GetRecordsByYosanHeadIDAsync(loginUser, yosanHeadId);
        }
        
        public bool BgRate_UpdateRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgRate> rates) {
            return base.Channel.BgRate_UpdateRecords(loginUser, rates);
        }
        
        public System.Threading.Tasks.Task<bool> BgRate_UpdateRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.BgRate> rates) {
            return base.Channel.BgRate_UpdateRecordsAsync(loginUser, rates);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecords(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BgYosanHead_GetRecords(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.BgYosanHead>> BgYosanHead_GetRecordsAsync(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BgYosanHead_GetRecordsAsync(loginUser);
        }
        
        public NBaseData.DAC.BgYosanHead BgYosanHead_GetRecord(NBaseData.DAC.MsUser loginUser, int yosanHeadId) {
            return base.Channel.BgYosanHead_GetRecord(loginUser, yosanHeadId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecordAsync(NBaseData.DAC.MsUser loginUser, int yosanHeadId) {
            return base.Channel.BgYosanHead_GetRecordAsync(loginUser, yosanHeadId);
        }
        
        public bool BgYosanHead_UpdateRecord(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead) {
            return base.Channel.BgYosanHead_UpdateRecord(loginUser, yosanHead);
        }
        
        public System.Threading.Tasks.Task<bool> BgYosanHead_UpdateRecordAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead) {
            return base.Channel.BgYosanHead_UpdateRecordAsync(loginUser, yosanHead);
        }
        
        public NBaseData.DAC.BgYosanHead BgYosanHead_GetRecordByYear(NBaseData.DAC.MsUser loginUser, string year) {
            return base.Channel.BgYosanHead_GetRecordByYear(loginUser, year);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecordByYearAsync(NBaseData.DAC.MsUser loginUser, string year) {
            return base.Channel.BgYosanHead_GetRecordByYearAsync(loginUser, year);
        }
        
        public NBaseData.DAC.BgYosanHead BgYosanHead_GetRecord_直近(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BgYosanHead_GetRecord_直近(loginUser);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.BgYosanHead> BgYosanHead_GetRecord_直近Async(NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BgYosanHead_GetRecord_直近Async(loginUser);
        }
        
        public bool Alarm処理_検査証書_検査_90日前_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa) {
            return base.Channel.Alarm処理_検査証書_検査_90日前_登録(logiuser, kensa);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_90日前_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa) {
            return base.Channel.Alarm処理_検査証書_検査_90日前_登録Async(logiuser, kensa);
        }
        
        public bool Alarm処理_検査証書_検査_180日前_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa) {
            return base.Channel.Alarm処理_検査証書_検査_180日前_登録(logiuser, kensa);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_180日前_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa) {
            return base.Channel.Alarm処理_検査証書_検査_180日前_登録Async(logiuser, kensa);
        }
        
        public bool Alarm処理_検査証書_検査_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_登録(logiuser, kensa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_登録Async(logiuser, kensa, kubunName);
        }
        
        public bool Alarm処理_検査証書_検査_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_更新(logiuser, kensa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_更新Async(logiuser, kensa, kubunName);
        }
        
        public bool Alarm処理_検査証書_検査_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_停止(logiuser, kensa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_停止Async(logiuser, kensa, kubunName);
        }
        
        public bool Alarm処理_検査証書_検査_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_削除(logiuser, kensa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検査_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensa kensa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_検査_削除Async(logiuser, kensa, kubunName);
        }
        
        public bool Alarm処理_検査証書_証書_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_登録(logiuser, shousho);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_登録Async(logiuser, shousho);
        }
        
        public bool Alarm処理_検査証書_証書_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_更新(logiuser, shousho);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_更新Async(logiuser, shousho);
        }
        
        public bool Alarm処理_検査証書_証書_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_停止(logiuser, shousho);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_停止Async(logiuser, shousho);
        }
        
        public bool Alarm処理_検査証書_証書_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_削除(logiuser, shousho);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_証書_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShousho shousho) {
            return base.Channel.Alarm処理_検査証書_証書_削除Async(logiuser, shousho);
        }
        
        public bool Alarm処理_検査証書_審査_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_登録(logiuser, shinsa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_登録Async(logiuser, shinsa, kubunName);
        }
        
        public bool Alarm処理_検査証書_審査_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_更新(logiuser, shinsa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_更新Async(logiuser, shinsa, kubunName);
        }
        
        public bool Alarm処理_検査証書_審査_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_停止(logiuser, shinsa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_停止Async(logiuser, shinsa, kubunName);
        }
        
        public bool Alarm処理_検査証書_審査_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_削除(logiuser, shinsa, kubunName);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_審査_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsShinsa shinsa, string kubunName) {
            return base.Channel.Alarm処理_検査証書_審査_削除Async(logiuser, shinsa, kubunName);
        }
        
        public bool Alarm処理_検査証書_救命設備_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_登録(logiuser, kyumei);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_登録Async(logiuser, kyumei);
        }
        
        public bool Alarm処理_検査証書_救命設備_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_更新(logiuser, kyumei);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_更新Async(logiuser, kyumei);
        }
        
        public bool Alarm処理_検査証書_救命設備_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_停止(logiuser, kyumei);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_停止Async(logiuser, kyumei);
        }
        
        public bool Alarm処理_検査証書_救命設備_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_削除(logiuser, kyumei);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_救命設備_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKyumeisetsubi kyumei) {
            return base.Channel.Alarm処理_検査証書_救命設備_削除Async(logiuser, kyumei);
        }
        
        public bool Alarm処理_検査証書_荷役安全設備_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_登録(logiuser, niyaku);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_登録Async(logiuser, niyaku);
        }
        
        public bool Alarm処理_検査証書_荷役安全設備_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_更新(logiuser, niyaku);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_更新Async(logiuser, niyaku);
        }
        
        public bool Alarm処理_検査証書_荷役安全設備_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_停止(logiuser, niyaku);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_停止Async(logiuser, niyaku);
        }
        
        public bool Alarm処理_検査証書_荷役安全設備_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_削除(logiuser, niyaku);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_荷役安全設備_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsNiyaku niyaku) {
            return base.Channel.Alarm処理_検査証書_荷役安全設備_削除Async(logiuser, niyaku);
        }
        
        public bool Alarm処理_検査証書_検船_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_登録(logiuser, kensen);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_登録Async(logiuser, kensen);
        }
        
        public bool Alarm処理_検査証書_検船_更新(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_更新(logiuser, kensen);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_更新Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_更新Async(logiuser, kensen);
        }
        
        public bool Alarm処理_検査証書_検船_停止(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_停止(logiuser, kensen);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_停止Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_停止Async(logiuser, kensen);
        }
        
        public bool Alarm処理_検査証書_検船_削除(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_削除(logiuser, kensen);
        }
        
        public System.Threading.Tasks.Task<bool> Alarm処理_検査証書_検船_削除Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.KsKensen kensen) {
            return base.Channel.Alarm処理_検査証書_検船_削除Async(logiuser, kensen);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.UserListItems> BLC_GetUserListSetting(NBaseData.DAC.MsUser loginUser, int kind, string userId) {
            return base.Channel.BLC_GetUserListSetting(loginUser, kind, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.UserListItems>> BLC_GetUserListSettingAsync(NBaseData.DAC.MsUser loginUser, int kind, string userId) {
            return base.Channel.BLC_GetUserListSettingAsync(loginUser, kind, userId);
        }
        
        public bool BLC_RegistUserListSetting(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.UserListItems> userListItemsList) {
            return base.Channel.BLC_RegistUserListSetting(loginUser, userListItemsList);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_RegistUserListSettingAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.UserListItems> userListItemsList) {
            return base.Channel.BLC_RegistUserListSettingAsync(loginUser, userListItemsList);
        }
        
        public byte[] BLC_Excel_手当一覧出力(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName) {
            return base.Channel.BLC_Excel_手当一覧出力(loginUser, from, to, vesselId, allowanceName);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_手当一覧出力Async(NBaseData.DAC.MsUser loginUser, string from, string to, int vesselId, string allowanceName) {
            return base.Channel.BLC_Excel_手当一覧出力Async(loginUser, from, to, vesselId, allowanceName);
        }
        
        public byte[] BLC_Excel_手当支給依頼書出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details) {
            return base.Channel.BLC_Excel_手当支給依頼書出力(loginUser, allowance, details);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_手当支給依頼書出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiAllowance allowance, System.Collections.Generic.List<NBaseData.DAC.SiAllowanceDetail> details) {
            return base.Channel.BLC_Excel_手当支給依頼書出力Async(loginUser, allowance, details);
        }
        
        public byte[] BLC_Excel_手当帳票出力(NBaseData.DAC.MsUser loginUser, System.DateTime ym) {
            return base.Channel.BLC_Excel_手当帳票出力(loginUser, ym);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_手当帳票出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime ym) {
            return base.Channel.BLC_Excel_手当帳票出力Async(loginUser, ym);
        }
        
        public System.Collections.Generic.List<WtmModelBase.Work> GetWorks(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId) {
            return base.Channel.GetWorks(connectionKey, date1, date2, seninId, vesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.Work>> GetWorksAsync(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId) {
            return base.Channel.GetWorksAsync(connectionKey, date1, date2, seninId, vesselId);
        }
        
        public WtmModelBase.Work GetBeInWork(string connectionKey, int seninId) {
            return base.Channel.GetBeInWork(connectionKey, seninId);
        }
        
        public System.Threading.Tasks.Task<WtmModelBase.Work> GetBeInWorkAsync(string connectionKey, int seninId) {
            return base.Channel.GetBeInWorkAsync(connectionKey, seninId);
        }
        
        public System.Collections.Generic.List<WtmModelBase.Work> GetBeInWorks(string connectionKey, int vesselId) {
            return base.Channel.GetBeInWorks(connectionKey, vesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.Work>> GetBeInWorksAsync(string connectionKey, int vesselId) {
            return base.Channel.GetBeInWorksAsync(connectionKey, vesselId);
        }
        
        public System.Collections.Generic.List<WtmModelBase.WorkSummary> GetWorkSummaries(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId) {
            return base.Channel.GetWorkSummaries(connectionKey, date1, date2, seninId, vesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.WorkSummary>> GetWorkSummariesAsync(string connectionKey, System.DateTime date1, System.DateTime date2, int seninId, int vesselId) {
            return base.Channel.GetWorkSummariesAsync(connectionKey, date1, date2, seninId, vesselId);
        }
        
        public bool StartWork(string connectionKey, int vesselId, int seninId, System.DateTime d) {
            return base.Channel.StartWork(connectionKey, vesselId, seninId, d);
        }
        
        public System.Threading.Tasks.Task<bool> StartWorkAsync(string connectionKey, int vesselId, int seninId, System.DateTime d) {
            return base.Channel.StartWorkAsync(connectionKey, vesselId, seninId, d);
        }
        
        public bool InsertWork(string connectionKey, WtmModelBase.Work w) {
            return base.Channel.InsertWork(connectionKey, w);
        }
        
        public System.Threading.Tasks.Task<bool> InsertWorkAsync(string connectionKey, WtmModelBase.Work w) {
            return base.Channel.InsertWorkAsync(connectionKey, w);
        }
        
        public bool FinshWork(string connectionKey, WtmModelBase.Work w) {
            return base.Channel.FinshWork(connectionKey, w);
        }
        
        public System.Threading.Tasks.Task<bool> FinshWorkAsync(string connectionKey, WtmModelBase.Work w) {
            return base.Channel.FinshWorkAsync(connectionKey, w);
        }
        
        public bool DeleteWork(string connectionKey, WtmModelBase.Work w) {
            return base.Channel.DeleteWork(connectionKey, w);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWorkAsync(string connectionKey, WtmModelBase.Work w) {
            return base.Channel.DeleteWorkAsync(connectionKey, w);
        }
        
        public bool EditWork(string connectionKey, WtmModelBase.Work delWork, WtmModelBase.Work editWork1) {
            return base.Channel.EditWork(connectionKey, delWork, editWork1);
        }
        
        public System.Threading.Tasks.Task<bool> EditWorkAsync(string connectionKey, WtmModelBase.Work delWork, WtmModelBase.Work editWork) {
            return base.Channel.EditWorkAsync(connectionKey, delWork, editWork);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReferences.NBaseService.CanCopyWorkResponse ServiceReferences.NBaseService.IService.CanCopyWork(ServiceReferences.NBaseService.CanCopyWorkRequest request) {
            return base.Channel.CanCopyWork(request);
        }
        
        public bool CanCopyWork(string connectionKey, WtmModelBase.Work w, System.Collections.Generic.List<int> seninIds, System.DateTime fromDay, System.DateTime toDay, out System.Collections.Generic.List<int> errorSeninIds) {
            ServiceReferences.NBaseService.CanCopyWorkRequest inValue = new ServiceReferences.NBaseService.CanCopyWorkRequest();
            inValue.connectionKey = connectionKey;
            inValue.w = w;
            inValue.seninIds = seninIds;
            inValue.fromDay = fromDay;
            inValue.toDay = toDay;
            ServiceReferences.NBaseService.CanCopyWorkResponse retVal = ((ServiceReferences.NBaseService.IService)(this)).CanCopyWork(inValue);
            errorSeninIds = retVal.errorSeninIds;
            return retVal.CanCopyWorkResult;
        }
        
        public System.Threading.Tasks.Task<ServiceReferences.NBaseService.CanCopyWorkResponse> CanCopyWorkAsync(ServiceReferences.NBaseService.CanCopyWorkRequest request) {
            return base.Channel.CanCopyWorkAsync(request);
        }
        
        public bool CopyWork(string connectionKey, WtmModelBase.Work w, System.Collections.Generic.List<int> seninIds, System.DateTime fromDay, System.DateTime toDay) {
            return base.Channel.CopyWork(connectionKey, w, seninIds, fromDay, toDay);
        }
        
        public System.Threading.Tasks.Task<bool> CopyWorkAsync(string connectionKey, WtmModelBase.Work w, System.Collections.Generic.List<int> seninIds, System.DateTime fromDay, System.DateTime toDay) {
            return base.Channel.CopyWorkAsync(connectionKey, w, seninIds, fromDay, toDay);
        }
        
        public WtmModelBase.Setting GetSetting(string connectionKey) {
            return base.Channel.GetSetting(connectionKey);
        }
        
        public System.Threading.Tasks.Task<WtmModelBase.Setting> GetSettingAsync(string connectionKey) {
            return base.Channel.GetSettingAsync(connectionKey);
        }
        
        public System.Collections.Generic.List<WtmModelBase.WorkContent> GetWorkContents(string connectionKey) {
            return base.Channel.GetWorkContents(connectionKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.WorkContent>> GetWorkContentsAsync(string connectionKey) {
            return base.Channel.GetWorkContentsAsync(connectionKey);
        }
        
        public System.Collections.Generic.List<WtmModelBase.RankCategory> GetRankCategories(string connectionKey) {
            return base.Channel.GetRankCategories(connectionKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.RankCategory>> GetRankCategoriesAsync(string connectionKey) {
            return base.Channel.GetRankCategoriesAsync(connectionKey);
        }
        
        public System.Collections.Generic.List<WtmModelBase.Role> GetRoles(string connectionKey) {
            return base.Channel.GetRoles(connectionKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.Role>> GetRolesAsync(string connectionKey) {
            return base.Channel.GetRolesAsync(connectionKey);
        }
        
        public System.Collections.Generic.List<WtmModelBase.VesselMovement> GetVesselMovementDispRecord(string connectionKey, System.DateTime date1, System.DateTime date2, int vesselid) {
            return base.Channel.GetVesselMovementDispRecord(connectionKey, date1, date2, vesselid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.VesselMovement>> GetVesselMovementDispRecordAsync(string connectionKey, System.DateTime date1, System.DateTime date2, int vesselid) {
            return base.Channel.GetVesselMovementDispRecordAsync(connectionKey, date1, date2, vesselid);
        }
        
        public bool InsertUpdateVesselMovement(string connectionKey, WtmModelBase.VesselMovement vm) {
            return base.Channel.InsertUpdateVesselMovement(connectionKey, vm);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUpdateVesselMovementAsync(string connectionKey, WtmModelBase.VesselMovement vm) {
            return base.Channel.InsertUpdateVesselMovementAsync(connectionKey, vm);
        }
        
        public WtmModelBase.VesselApprovalMonth GetVesselApprovalMonth(string connectionKey, int vesselId, System.DateTime approvalMonth) {
            return base.Channel.GetVesselApprovalMonth(connectionKey, vesselId, approvalMonth);
        }
        
        public System.Threading.Tasks.Task<WtmModelBase.VesselApprovalMonth> GetVesselApprovalMonthAsync(string connectionKey, int vesselId, System.DateTime approvalMonth) {
            return base.Channel.GetVesselApprovalMonthAsync(connectionKey, vesselId, approvalMonth);
        }
        
        public bool InsertOrUpdateApprovalMonth(string connectionKey, int vesselId, int crewId, System.DateTime approvalMonth) {
            return base.Channel.InsertOrUpdateApprovalMonth(connectionKey, vesselId, crewId, approvalMonth);
        }
        
        public System.Threading.Tasks.Task<bool> InsertOrUpdateApprovalMonthAsync(string connectionKey, int vesselId, int crewId, System.DateTime approvalMonth) {
            return base.Channel.InsertOrUpdateApprovalMonthAsync(connectionKey, vesselId, crewId, approvalMonth);
        }
        
        public System.Collections.Generic.List<WtmModelBase.VesselApprovalDay> GetVesselApprovalDay(string connectionKey, int vesselId, System.DateTime approvalDay) {
            return base.Channel.GetVesselApprovalDay(connectionKey, vesselId, approvalDay);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.VesselApprovalDay>> GetVesselApprovalDayAsync(string connectionKey, int vesselId, System.DateTime approvalDay) {
            return base.Channel.GetVesselApprovalDayAsync(connectionKey, vesselId, approvalDay);
        }
        
        public int InsertOrUpdateApprovalDay(string connectionKey, int vesselId, System.DateTime approvalDay, int crewId, System.Collections.Generic.List<int> approvedCrewIds) {
            return base.Channel.InsertOrUpdateApprovalDay(connectionKey, vesselId, approvalDay, crewId, approvedCrewIds);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateApprovalDayAsync(string connectionKey, int vesselId, System.DateTime approvalDay, int crewId, System.Collections.Generic.List<int> approvedCrewIds) {
            return base.Channel.InsertOrUpdateApprovalDayAsync(connectionKey, vesselId, approvalDay, crewId, approvedCrewIds);
        }
        
        public bool DeleteApprovalDay(string connectionKey, int vesselId, System.DateTime approvalDay, int removeCrewId) {
            return base.Channel.DeleteApprovalDay(connectionKey, vesselId, approvalDay, removeCrewId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteApprovalDayAsync(string connectionKey, int vesselId, System.DateTime approvalDay, int removeCrewId) {
            return base.Channel.DeleteApprovalDayAsync(connectionKey, vesselId, approvalDay, removeCrewId);
        }
        
        public System.Collections.Generic.List<WtmModelBase.SummaryTimes> GetSummaryTimes(string connectionKey, int vesselId, System.DateTime summaryDate) {
            return base.Channel.GetSummaryTimes(connectionKey, vesselId, summaryDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WtmModelBase.SummaryTimes>> GetSummaryTimesAsync(string connectionKey, int vesselId, System.DateTime summaryDate) {
            return base.Channel.GetSummaryTimesAsync(connectionKey, vesselId, summaryDate);
        }
        
        public bool InsertOrUpdateSummaryTimes(string connectionKey, int crewId, int vesselId, System.DateTime summaryDate, string allowanceTime) {
            return base.Channel.InsertOrUpdateSummaryTimes(connectionKey, crewId, vesselId, summaryDate, allowanceTime);
        }
        
        public System.Threading.Tasks.Task<bool> InsertOrUpdateSummaryTimesAsync(string connectionKey, int crewId, int vesselId, System.DateTime summaryDate, string allowanceTime) {
            return base.Channel.InsertOrUpdateSummaryTimesAsync(connectionKey, crewId, vesselId, summaryDate, allowanceTime);
        }
        
        public byte[] BLC_Excel_個人予定一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> personalScheduleList) {
            return base.Channel.BLC_Excel_個人予定一覧表出力(loginUser, personalScheduleList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_個人予定一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiPersonalSchedule> personalScheduleList) {
            return base.Channel.BLC_Excel_個人予定一覧表出力Async(loginUser, personalScheduleList);
        }
        
        public byte[] BLC_Excel_乗り合わせ一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> fellowPassengersList) {
            return base.Channel.BLC_Excel_乗り合わせ一覧表出力(loginUser, fellowPassengersList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_乗り合わせ一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.SiFellowPassengers> fellowPassengersList) {
            return base.Channel.BLC_Excel_乗り合わせ一覧表出力Async(loginUser, fellowPassengersList);
        }
        
        public byte[] BLC_Excel_顧客管理一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsCustomer> customerList) {
            return base.Channel.BLC_Excel_顧客管理一覧表出力(loginUser, customerList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_顧客管理一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsCustomer> customerList) {
            return base.Channel.BLC_Excel_顧客管理一覧表出力Async(loginUser, customerList);
        }
        
        public byte[] BLC_Excel_報告書管理一覧表出力(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> houkokushoList) {
            return base.Channel.BLC_Excel_報告書管理一覧表出力(loginUser, houkokushoList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_報告書管理一覧表出力Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.MsDmHoukokusho> houkokushoList) {
            return base.Channel.BLC_Excel_報告書管理一覧表出力Async(loginUser, houkokushoList);
        }
        
        public byte[] BLC_動静帳票_動静報告一覧_取得(NBaseData.DAC.MsUser loginUser, System.DateTime date, System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku> houkokuList) {
            return base.Channel.BLC_動静帳票_動静報告一覧_取得(loginUser, date, houkokuList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_動静帳票_動静報告一覧_取得Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, System.Collections.Generic.List<NBaseData.DAC.DjDouseiHoukoku> houkokuList) {
            return base.Channel.BLC_動静帳票_動静報告一覧_取得Async(loginUser, date, houkokuList);
        }
        
        public bool BLC_勤怠管理_InsertOrUpdate(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiLaborManagementRecordBook recordBook, System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays> requireds, System.Collections.Generic.List<NBaseData.DAC.SiNightSetting> settings) {
            return base.Channel.BLC_勤怠管理_InsertOrUpdate(loginUser, recordBook, requireds, settings);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_勤怠管理_InsertOrUpdateAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiLaborManagementRecordBook recordBook, System.Collections.Generic.List<NBaseData.DAC.SiRequiredNumberOfDays> requireds, System.Collections.Generic.List<NBaseData.DAC.SiNightSetting> settings) {
            return base.Channel.BLC_勤怠管理_InsertOrUpdateAsync(loginUser, recordBook, requireds, settings);
        }
        
        public byte[] BLC_Excel_労務管理記録簿出力(string connectionKey, NBaseData.DAC.MsUser loginUser, int vesselId, int msSeninID, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.BLC_Excel_労務管理記録簿出力(connectionKey, loginUser, vesselId, msSeninID, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_労務管理記録簿出力Async(string connectionKey, NBaseData.DAC.MsUser loginUser, int vesselId, int msSeninID, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.BLC_Excel_労務管理記録簿出力Async(connectionKey, loginUser, vesselId, msSeninID, fromDate, toDate);
        }
        
        public NBaseData.DAC.MsSiSalary BLC_基本給取得(NBaseData.DAC.MsUser loginUser, int msSiSalaryId) {
            return base.Channel.BLC_基本給取得(loginUser, msSiSalaryId);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSiSalary> BLC_基本給取得Async(NBaseData.DAC.MsUser loginUser, int msSiSalaryId) {
            return base.Channel.BLC_基本給取得Async(loginUser, msSiSalaryId);
        }
        
        public int BLC_基本給登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary salary) {
            return base.Channel.BLC_基本給登録(loginUser, salary);
        }
        
        public System.Threading.Tasks.Task<int> BLC_基本給登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary salary) {
            return base.Channel.BLC_基本給登録Async(loginUser, salary);
        }
        
        public NBaseData.DAC.MsSiSalary BLC_基本給検索(NBaseData.DAC.MsUser loginUser, int kubun, System.DateTime start, System.DateTime end) {
            return base.Channel.BLC_基本給検索(loginUser, kubun, start, end);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.MsSiSalary> BLC_基本給検索Async(NBaseData.DAC.MsUser loginUser, int kubun, System.DateTime start, System.DateTime end) {
            return base.Channel.BLC_基本給検索Async(loginUser, kubun, start, end);
        }
        
        public bool BLC_基本給複製(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary prevSalary, NBaseData.DAC.MsSiSalary newSalary) {
            return base.Channel.BLC_基本給複製(loginUser, prevSalary, newSalary);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_基本給複製Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSiSalary prevSalary, NBaseData.DAC.MsSiSalary newSalary) {
            return base.Channel.BLC_基本給複製Async(loginUser, prevSalary, newSalary);
        }
        
        public bool BLC_潤滑油登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel) {
            return base.Channel.BLC_潤滑油登録(loginUser, msLoVessel);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_潤滑油登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsLoVessel msLoVessel) {
            return base.Channel.BLC_潤滑油登録Async(loginUser, msLoVessel);
        }
        
        public bool BLC_KK船_種別変更(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi odThi) {
            return base.Channel.BLC_KK船_種別変更(loginUser, odThi);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_KK船_種別変更Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdThi odThi) {
            return base.Channel.BLC_KK船_種別変更Async(loginUser, odThi);
        }
        
        public byte[] BLC_業者別支払実績帳票_取得(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件) {
            return base.Channel.BLC_業者別支払実績帳票_取得(loginUser, 検索条件);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_業者別支払実績帳票_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件) {
            return base.Channel.BLC_業者別支払実績帳票_取得Async(loginUser, 検索条件);
        }
        
        public bool BLC_区分_仕様型式編集(NBaseData.DAC.MsUser loginUser, string thiIraiNo, string msItemSbtId, int categoryNo) {
            return base.Channel.BLC_区分_仕様型式編集(loginUser, thiIraiNo, msItemSbtId, categoryNo);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_区分_仕様型式編集Async(NBaseData.DAC.MsUser loginUser, string thiIraiNo, string msItemSbtId, int categoryNo) {
            return base.Channel.BLC_区分_仕様型式編集Async(loginUser, thiIraiNo, msItemSbtId, categoryNo);
        }
        
        public byte[] BLC_KK発注帳票_取得(NBaseData.DAC.MsUser loginUser, NBaseCommon.Hachu.Excel.発注帳票Common.kubun発注帳票 kubun, string Id) {
            return base.Channel.BLC_KK発注帳票_取得(loginUser, kubun, Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_KK発注帳票_取得Async(NBaseData.DAC.MsUser loginUser, NBaseCommon.Hachu.Excel.発注帳票Common.kubun発注帳票 kubun, string Id) {
            return base.Channel.BLC_KK発注帳票_取得Async(loginUser, kubun, Id);
        }
        
        public bool BLC_船用品登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.BLC_船用品登録(loginUser, msVesselItemVessel);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_船用品登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVesselItemVessel msVesselItemVessel) {
            return base.Channel.BLC_船用品登録Async(loginUser, msVesselItemVessel);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai> BLC_Get特定船用品在庫(NBaseData.DAC.MsUser loginUser, int msVesselId) {
            return base.Channel.BLC_Get特定船用品在庫(loginUser, msVesselId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.OdChozoShousai>> BLC_Get特定船用品在庫Async(NBaseData.DAC.MsUser loginUser, int msVesselId) {
            return base.Channel.BLC_Get特定船用品在庫Async(loginUser, msVesselId);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.貯蔵品編集RowData> BLC_Get貯蔵品(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Get貯蔵品(loginUser, msVessel, kind, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.貯蔵品編集RowData>> BLC_Get貯蔵品Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Get貯蔵品Async(loginUser, msVessel, kind, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public byte[] BLC_Excel貯蔵品管理表_出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excel貯蔵品管理表_出力(loginUser, msVessel, kind, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel貯蔵品管理表_出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int FromYear, int FromMonth, int ToYear, int ToMonth) {
            return base.Channel.BLC_Excel貯蔵品管理表_出力Async(loginUser, msVessel, kind, FromYear, FromMonth, ToYear, ToMonth);
        }
        
        public byte[] BLC_Excel貯蔵品年間管理表_出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int year) {
            return base.Channel.BLC_Excel貯蔵品年間管理表_出力(loginUser, msVessel, kind, year);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel貯蔵品年間管理表_出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel msVessel, NBaseData.BLC.貯蔵品リスト.対象Enum kind, int year) {
            return base.Channel.BLC_Excel貯蔵品年間管理表_出力Async(loginUser, msVessel, kind, year);
        }
        
        public byte[] BLC_Excel未提出確認一覧_取得(NBaseData.DAC.MsUser loginUser, int businessYear) {
            return base.Channel.BLC_Excel未提出確認一覧_取得(loginUser, businessYear);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel未提出確認一覧_取得Async(NBaseData.DAC.MsUser loginUser, int businessYear) {
            return base.Channel.BLC_Excel未提出確認一覧_取得Async(loginUser, businessYear);
        }
        
        public bool BLC回覧終了処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo kanryoInfo) {
            return base.Channel.BLC回覧終了処理_登録(loginUser, kanryoInfo);
        }
        
        public System.Threading.Tasks.Task<bool> BLC回覧終了処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanryoInfo kanryoInfo) {
            return base.Channel.BLC回覧終了処理_登録Async(loginUser, kanryoInfo);
        }
        
        public bool BLC_コメント登録処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment docComment, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile) {
            return base.Channel.BLC_コメント登録処理_登録(loginUser, docComment, kanriKirokuFile, koubunshoKisokuFile);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_コメント登録処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmDocComment docComment, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile) {
            return base.Channel.BLC_コメント登録処理_登録Async(loginUser, docComment, kanriKirokuFile, koubunshoKisokuFile);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row> BLC_状況確認一覧Row_SearchRecords(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<string> bunruiIds, System.Collections.Generic.List<string> shoubunruiIds, System.Collections.Generic.List<int> vesselIds, string bunshoNo, string bunshoName, string bikou, System.DateTime issueFrom, System.DateTime issueTo, int vesselId, int role, string bumonId, int status, bool isKanryo, string keywords) {
            return base.Channel.BLC_状況確認一覧Row_SearchRecords(loginUser, bunruiIds, shoubunruiIds, vesselIds, bunshoNo, bunshoName, bikou, issueFrom, issueTo, vesselId, role, bumonId, status, isKanryo, keywords);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row>> BLC_状況確認一覧Row_SearchRecordsAsync(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<string> bunruiIds, System.Collections.Generic.List<string> shoubunruiIds, System.Collections.Generic.List<int> vesselIds, string bunshoNo, string bunshoName, string bikou, System.DateTime issueFrom, System.DateTime issueTo, int vesselId, int role, string bumonId, int status, bool isKanryo, string keywords) {
            return base.Channel.BLC_状況確認一覧Row_SearchRecordsAsync(loginUser, bunruiIds, shoubunruiIds, vesselIds, bunshoNo, bunshoName, bikou, issueFrom, issueTo, vesselId, role, bumonId, status, isKanryo, keywords);
        }
        
        public byte[] BLC_Excel確認状況一覧_取得(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row> 状況確認一覧Rows) {
            return base.Channel.BLC_Excel確認状況一覧_取得(loginUser, 状況確認一覧Rows);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel確認状況一覧_取得Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.BLC.状況確認一覧Row> 状況確認一覧Rows) {
            return base.Channel.BLC_Excel確認状況一覧_取得Async(loginUser, 状況確認一覧Rows);
        }
        
        public bool BLC_管理記録処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers) {
            return base.Channel.BLC_管理記録処理_登録(loginUser, kanriKiroku, kanriKirokuFile, publishers);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_管理記録処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers) {
            return base.Channel.BLC_管理記録処理_登録Async(loginUser, kanriKiroku, kanriKirokuFile, publishers);
        }
        
        public bool BLC_管理記録処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile) {
            return base.Channel.BLC_管理記録処理_更新(loginUser, kanriKiroku, kanriKirokuFile);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_管理記録処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKanriKiroku kanriKiroku, NBaseData.DAC.DmKanriKirokuFile kanriKirokuFile) {
            return base.Channel.BLC_管理記録処理_更新Async(loginUser, kanriKiroku, kanriKirokuFile);
        }
        
        public bool BLC_公文書規則処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku koubunshoKisoku, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_公文書規則処理_登録(loginUser, koubunshoKisoku, koubunshoKisokuFile, publishers, koukaiSakis);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_公文書規則処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DmKoubunshoKisoku koubunshoKisoku, NBaseData.DAC.DmKoubunshoKisokuFile koubunshoKisokuFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_公文書規則処理_登録Async(loginUser, koubunshoKisoku, koubunshoKisokuFile, publishers, koukaiSakis);
        }
        
        public bool BLC_公文書規則処理_公開先更新(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_公文書規則処理_公開先更新(loginUser, koubunshoKisokuId, koukaiSakis);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_公文書規則処理_公開先更新Async(NBaseData.DAC.MsUser loginUser, string koubunshoKisokuId, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_公文書規則処理_公開先更新Async(loginUser, koubunshoKisokuId, koukaiSakis);
        }
        
        public bool BLC_報告書処理_登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_報告書処理_登録(loginUser, houkokusyo, templateFile, publishers, koukaiSakis);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_報告書処理_登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_報告書処理_登録Async(loginUser, houkokusyo, templateFile, publishers, koukaiSakis);
        }
        
        public bool BLC_報告書処理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_報告書処理_更新(loginUser, houkokusyo, templateFile, publishers, koukaiSakis);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_報告書処理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo, NBaseData.DAC.MsDmTemplateFile templateFile, System.Collections.Generic.List<NBaseData.DAC.DmPublisher> publishers, System.Collections.Generic.List<NBaseData.DAC.DmKoukaiSaki> koukaiSakis) {
            return base.Channel.BLC_報告書処理_更新Async(loginUser, houkokusyo, templateFile, publishers, koukaiSakis);
        }
        
        public bool BLC_報告書処理_削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo) {
            return base.Channel.BLC_報告書処理_削除(loginUser, houkokusyo);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_報告書処理_削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsDmHoukokusho houkokusyo) {
            return base.Channel.BLC_報告書処理_削除Async(loginUser, houkokusyo);
        }
        
        public bool BLC_動静予定登録(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis) {
            return base.Channel.BLC_動静予定登録(loginUser, Douseis);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_動静予定登録Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis) {
            return base.Channel.BLC_動静予定登録Async(loginUser, Douseis);
        }
        
        public bool BLC_動静予定削除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo kanidousei) {
            return base.Channel.BLC_動静予定削除(loginUser, kanidousei);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_動静予定削除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.PtKanidouseiInfo kanidousei) {
            return base.Channel.BLC_動静予定削除Async(loginUser, kanidousei);
        }
        
        public bool BLC_動静実績登録(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis) {
            return base.Channel.BLC_動静実績登録(loginUser, Douseis);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_動静実績登録Async(NBaseData.DAC.MsUser loginUser, System.Collections.Generic.List<NBaseData.DAC.DjDousei> Douseis) {
            return base.Channel.BLC_動静実績登録Async(loginUser, Douseis);
        }
        
        public bool BLC_動静報告メール送信_同期用(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku) {
            return base.Channel.BLC_動静報告メール送信_同期用(loginUser, houkoku);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_動静報告メール送信_同期用Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.DjDouseiHoukoku houkoku) {
            return base.Channel.BLC_動静報告メール送信_同期用Async(loginUser, houkoku);
        }
        
        public System.Collections.Generic.List<NBaseData.DAC.SiMenjou> BLC_免許免状管理_検索(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter) {
            return base.Channel.BLC_免許免状管理_検索(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.DAC.SiMenjou>> BLC_免許免状管理_検索Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter) {
            return base.Channel.BLC_免許免状管理_検索Async(loginUser, filter);
        }
        
        public byte[] BLC_Excel_免許免状一覧出力(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjouList) {
            return base.Channel.BLC_Excel_免許免状一覧出力(loginUser, filter, menjouList);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_免許免状一覧出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DS.SiMenjouFilter filter, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjouList) {
            return base.Channel.BLC_Excel_免許免状一覧出力Async(loginUser, filter, menjouList);
        }
        
        public NBaseData.DAC.SiMenjou BLC_免許免状管理_更新(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou) {
            return base.Channel.BLC_免許免状管理_更新(loginUser, menjou);
        }
        
        public System.Threading.Tasks.Task<NBaseData.DAC.SiMenjou> BLC_免許免状管理_更新Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiMenjou menjou) {
            return base.Channel.BLC_免許免状管理_更新Async(loginUser, menjou);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReferences.NBaseService.BLC_見積回答メール送信Response ServiceReferences.NBaseService.IService.BLC_見積回答メール送信(ServiceReferences.NBaseService.BLC_見積回答メール送信Request request) {
            return base.Channel.BLC_見積回答メール送信(request);
        }
        
        public bool BLC_見積回答メール送信(NBaseData.DAC.MsUser loginUser, string odMkId, ref string errMessage) {
            ServiceReferences.NBaseService.BLC_見積回答メール送信Request inValue = new ServiceReferences.NBaseService.BLC_見積回答メール送信Request();
            inValue.loginUser = loginUser;
            inValue.odMkId = odMkId;
            inValue.errMessage = errMessage;
            ServiceReferences.NBaseService.BLC_見積回答メール送信Response retVal = ((ServiceReferences.NBaseService.IService)(this)).BLC_見積回答メール送信(inValue);
            errMessage = retVal.errMessage;
            return retVal.BLC_見積回答メール送信Result;
        }
        
        public System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_見積回答メール送信Response> BLC_見積回答メール送信Async(ServiceReferences.NBaseService.BLC_見積回答メール送信Request request) {
            return base.Channel.BLC_見積回答メール送信Async(request);
        }
        
        public bool BLC_船マスタ更新処理_追加処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList) {
            return base.Channel.BLC_船マスタ更新処理_追加処理(loginUser, vessel, vessellScheduleKindDetailEnableList);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_船マスタ更新処理_追加処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList) {
            return base.Channel.BLC_船マスタ更新処理_追加処理Async(loginUser, vessel, vessellScheduleKindDetailEnableList);
        }
        
        public bool BLC_船マスタ更新処理_更新処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList) {
            return base.Channel.BLC_船マスタ更新処理_更新処理(loginUser, vessel, vessellScheduleKindDetailEnableList);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_船マスタ更新処理_更新処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsVessel vessel, System.Collections.Generic.List<NBaseData.DAC.MsVesselScheduleKindDetailEnable> vessellScheduleKindDetailEnableList) {
            return base.Channel.BLC_船マスタ更新処理_更新処理Async(loginUser, vessel, vessellScheduleKindDetailEnableList);
        }
        
        public byte[] BLC_Excel予算対比表_取得(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead1, NBaseData.DAC.BgYosanHead yosanHead2, decimal unit) {
            return base.Channel.BLC_Excel予算対比表_取得(loginUser, yosanHead1, yosanHead2, unit);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel予算対比表_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead1, NBaseData.DAC.BgYosanHead yosanHead2, decimal unit) {
            return base.Channel.BLC_Excel予算対比表_取得Async(loginUser, yosanHead1, yosanHead2, unit);
        }
        
        public byte[] BLC_Excel予算表_取得(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, int years, decimal unit) {
            return base.Channel.BLC_Excel予算表_取得(loginUser, selectedYosanHead, years, unit);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel予算表_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead selectedYosanHead, int years, decimal unit) {
            return base.Channel.BLC_Excel予算表_取得Async(loginUser, selectedYosanHead, years, unit);
        }
        
        public byte[] BLC_Excel修繕費予算出力(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, int msVesselId) {
            return base.Channel.BLC_Excel修繕費予算出力(loginUser, yosanHead, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel修繕費予算出力Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.BgYosanHead yosanHead, int msVesselId) {
            return base.Channel.BLC_Excel修繕費予算出力Async(loginUser, yosanHead, msVesselId);
        }
        
        public NBaseData.BLC.ユーザパスワード.STATUS BLC_パスワード_パスワード変更(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser, string Password) {
            return base.Channel.BLC_パスワード_パスワード変更(loginUser, ChangeUser, Password);
        }
        
        public System.Threading.Tasks.Task<NBaseData.BLC.ユーザパスワード.STATUS> BLC_パスワード_パスワード変更Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsUser ChangeUser, string Password) {
            return base.Channel.BLC_パスワード_パスワード変更Async(loginUser, ChangeUser, Password);
        }
        
        public byte[] BLC_貯蔵品集計表_取得(NBaseData.DAC.MsUser loginUser, int year, System.Collections.Generic.List<bool> targets, NBaseData.BLC.貯蔵品集計表.Enum対象 outputKind) {
            return base.Channel.BLC_貯蔵品集計表_取得(loginUser, year, targets, outputKind);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_貯蔵品集計表_取得Async(NBaseData.DAC.MsUser loginUser, int year, System.Collections.Generic.List<bool> targets, NBaseData.BLC.貯蔵品集計表.Enum対象 outputKind) {
            return base.Channel.BLC_貯蔵品集計表_取得Async(loginUser, year, targets, outputKind);
        }
        
        public byte[] BLC_貯蔵品リスト_取得(NBaseData.DAC.MsUser loginUser, int year, int month, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind) {
            return base.Channel.BLC_貯蔵品リスト_取得(loginUser, year, month, outputKind);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_貯蔵品リスト_取得Async(NBaseData.DAC.MsUser loginUser, int year, int month, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind) {
            return base.Channel.BLC_貯蔵品リスト_取得Async(loginUser, year, month, outputKind);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.貯蔵品リスト> BLC_貯蔵品編集_取得(NBaseData.DAC.MsUser loginUser, int sy, int sm, int ey, int em, int msVesselId, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind) {
            return base.Channel.BLC_貯蔵品編集_取得(loginUser, sy, sm, ey, em, msVesselId, outputKind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.貯蔵品リスト>> BLC_貯蔵品編集_取得Async(NBaseData.DAC.MsUser loginUser, int sy, int sm, int ey, int em, int msVesselId, NBaseData.BLC.貯蔵品リスト.対象Enum outputKind) {
            return base.Channel.BLC_貯蔵品編集_取得Async(loginUser, sy, sm, ey, em, msVesselId, outputKind);
        }
        
        public bool BLC_添付ファイル作成(NBaseData.DAC.MsUser logiuser, string odMkId) {
            return base.Channel.BLC_添付ファイル作成(logiuser, odMkId);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_添付ファイル作成Async(NBaseData.DAC.MsUser logiuser, string odMkId) {
            return base.Channel.BLC_添付ファイル作成Async(logiuser, odMkId);
        }
        
        public byte[] BLC_Excel_船用品注文書_取得(NBaseData.DAC.MsUser loginUser, string odThiId) {
            return base.Channel.BLC_Excel_船用品注文書_取得(loginUser, odThiId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_船用品注文書_取得Async(NBaseData.DAC.MsUser loginUser, string odThiId) {
            return base.Channel.BLC_Excel_船用品注文書_取得Async(loginUser, odThiId);
        }
        
        public bool BLC_発注アラーム処理_見積回答アラーム停止(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.BLC_発注アラーム処理_見積回答アラーム停止(loginUser, odMkID);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_発注アラーム処理_見積回答アラーム停止Async(NBaseData.DAC.MsUser loginUser, string odMkID) {
            return base.Channel.BLC_発注アラーム処理_見積回答アラーム停止Async(loginUser, odMkID);
        }
        
        public System.Collections.Generic.List<NBaseData.BLC.合算対象の受領> BLC_合算対象の受領_GetRecordsByFilter(NBaseData.DAC.MsUser loginUser, NBaseData.DS.合算対象の受領Filter filter) {
            return base.Channel.BLC_合算対象の受領_GetRecordsByFilter(loginUser, filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NBaseData.BLC.合算対象の受領>> BLC_合算対象の受領_GetRecordsByFilterAsync(NBaseData.DAC.MsUser loginUser, NBaseData.DS.合算対象の受領Filter filter) {
            return base.Channel.BLC_合算対象の受領_GetRecordsByFilterAsync(loginUser, filter);
        }
        
        public bool BLC_支払合算処理(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.BLC.合算対象の受領> jrys) {
            return base.Channel.BLC_支払合算処理(loginUser, odShrGassanHead, jrys);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_支払合算処理Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.BLC.合算対象の受領> jrys) {
            return base.Channel.BLC_支払合算処理Async(loginUser, odShrGassanHead, jrys);
        }
        
        public bool BLC_支払合算解除(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead) {
            return base.Channel.BLC_支払合算解除(loginUser, odShrGassanHead);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_支払合算解除Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShrGassanHead odShrGassanHead) {
            return base.Channel.BLC_支払合算解除Async(loginUser, odShrGassanHead);
        }
        
        public bool BLC_支払合算_支払依頼作成(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr odShr, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem> odShrGassanItems) {
            return base.Channel.BLC_支払合算_支払依頼作成(loginUser, odShr, odShrGassanHead, odShrGassanItems);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_支払合算_支払依頼作成Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.OdShr odShr, NBaseData.DAC.OdShrGassanHead odShrGassanHead, System.Collections.Generic.List<NBaseData.DAC.OdShrGassanItem> odShrGassanItems) {
            return base.Channel.BLC_支払合算_支払依頼作成Async(loginUser, odShr, odShrGassanHead, odShrGassanItems);
        }
        
        public byte[] BLC_合見積比較表_取得(NBaseData.DAC.MsUser loginUser, string odMmId) {
            return base.Channel.BLC_合見積比較表_取得(loginUser, odMmId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_合見積比較表_取得Async(NBaseData.DAC.MsUser loginUser, string odMmId) {
            return base.Channel.BLC_合見積比較表_取得Async(loginUser, odMmId);
        }
        
        public byte[] BLC_審査帳票取得(int year, NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_審査帳票取得(year, loginUser);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_審査帳票取得Async(int year, NBaseData.DAC.MsUser loginUser) {
            return base.Channel.BLC_審査帳票取得Async(year, loginUser);
        }
        
        public bool 本船更新_船員_乗船_登録(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.SiCard siCard) {
            return base.Channel.本船更新_船員_乗船_登録(logiuser, siCard);
        }
        
        public System.Threading.Tasks.Task<bool> 本船更新_船員_乗船_登録Async(NBaseData.DAC.MsUser logiuser, NBaseData.DAC.SiCard siCard) {
            return base.Channel.本船更新_船員_乗船_登録Async(logiuser, siCard);
        }
        
        public byte[] BLC_発注RowDataヘッダー_取得(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件) {
            return base.Channel.BLC_発注RowDataヘッダー_取得(loginUser, 検索条件);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_発注RowDataヘッダー_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件) {
            return base.Channel.BLC_発注RowDataヘッダー_取得Async(loginUser, 検索条件);
        }
        
        public byte[] BLC_発注RowData詳細品目_取得(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件h) {
            return base.Channel.BLC_発注RowData詳細品目_取得(loginUser, 検索条件h);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_発注RowData詳細品目_取得Async(NBaseData.DAC.MsUser loginUser, NBaseData.BLC.発注RowData検索条件 検索条件h) {
            return base.Channel.BLC_発注RowData詳細品目_取得Async(loginUser, 検索条件h);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReferences.NBaseService.BLC_発注メール送信Response ServiceReferences.NBaseService.IService.BLC_発注メール送信(ServiceReferences.NBaseService.BLC_発注メール送信Request request) {
            return base.Channel.BLC_発注メール送信(request);
        }
        
        public bool BLC_発注メール送信(NBaseData.DAC.MsUser loginUser, string odMkId, string customerName, string tantousha, string mailAddress, string subject, string hachuNo, string msVesselName, string telNo, string faxNo, string bikou, ref string errMessage) {
            ServiceReferences.NBaseService.BLC_発注メール送信Request inValue = new ServiceReferences.NBaseService.BLC_発注メール送信Request();
            inValue.loginUser = loginUser;
            inValue.odMkId = odMkId;
            inValue.customerName = customerName;
            inValue.tantousha = tantousha;
            inValue.mailAddress = mailAddress;
            inValue.subject = subject;
            inValue.hachuNo = hachuNo;
            inValue.msVesselName = msVesselName;
            inValue.telNo = telNo;
            inValue.faxNo = faxNo;
            inValue.bikou = bikou;
            inValue.errMessage = errMessage;
            ServiceReferences.NBaseService.BLC_発注メール送信Response retVal = ((ServiceReferences.NBaseService.IService)(this)).BLC_発注メール送信(inValue);
            errMessage = retVal.errMessage;
            return retVal.BLC_発注メール送信Result;
        }
        
        public System.Threading.Tasks.Task<ServiceReferences.NBaseService.BLC_発注メール送信Response> BLC_発注メール送信Async(ServiceReferences.NBaseService.BLC_発注メール送信Request request) {
            return base.Channel.BLC_発注メール送信Async(request);
        }
        
        public int BLC_船員登録(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.MsSeninAddress seninAddress, System.Collections.Generic.List<NBaseData.DAC.SiCard> cards, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjous, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus, System.Collections.Generic.List<NBaseData.DAC.SiRireki> rirekis, System.Collections.Generic.List<NBaseData.DAC.SiShobyo> shobyos, System.Collections.Generic.List<NBaseData.DAC.SiKenshin> kenshins, System.Collections.Generic.List<NBaseData.DAC.SiShobatsu> shobatsus) {
            return base.Channel.BLC_船員登録(loginUser, senin, seninAddress, cards, menjous, kazokus, rirekis, shobyos, kenshins, shobatsus);
        }
        
        public System.Threading.Tasks.Task<int> BLC_船員登録Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.MsSenin senin, NBaseData.DAC.MsSeninAddress seninAddress, System.Collections.Generic.List<NBaseData.DAC.SiCard> cards, System.Collections.Generic.List<NBaseData.DAC.SiMenjou> menjous, System.Collections.Generic.List<NBaseData.DAC.SiKazoku> kazokus, System.Collections.Generic.List<NBaseData.DAC.SiRireki> rirekis, System.Collections.Generic.List<NBaseData.DAC.SiShobyo> shobyos, System.Collections.Generic.List<NBaseData.DAC.SiKenshin> kenshins, System.Collections.Generic.List<NBaseData.DAC.SiShobatsu> shobatsus) {
            return base.Channel.BLC_船員登録Async(loginUser, senin, seninAddress, cards, menjous, kazokus, rirekis, shobyos, kenshins, shobatsus);
        }
        
        public bool BLC_新規送金(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin soukin) {
            return base.Channel.BLC_新規送金(loginUser, soukin);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_新規送金Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiSoukin soukin) {
            return base.Channel.BLC_新規送金Async(loginUser, soukin);
        }
        
        public bool BLC_配乗表配信(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou) {
            return base.Channel.BLC_配乗表配信(loginUser, haijou);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_配乗表配信Async(NBaseData.DAC.MsUser loginUser, NBaseData.DAC.SiHaijou haijou) {
            return base.Channel.BLC_配乗表配信Async(loginUser, haijou);
        }
        
        public byte[] BLC_Excel_船用金送金表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_船用金送金表出力(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_船用金送金表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_船用金送金表出力Async(loginUser, date, msVesselId);
        }
        
        public byte[] BLC_Excel_船内収支報告書出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_船内収支報告書出力(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_船内収支報告書出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_船内収支報告書出力Async(loginUser, date, msVesselId);
        }
        
        public byte[] BLC_Excel_科目別集計表出力(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_科目別集計表出力(loginUser, date, msVesselId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_科目別集計表出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date, int msVesselId) {
            return base.Channel.BLC_Excel_科目別集計表出力Async(loginUser, date, msVesselId);
        }
        
        public byte[] BLC_Excel_送金通知出力(NBaseData.DAC.MsUser loginUser, string siSoukinId) {
            return base.Channel.BLC_Excel_送金通知出力(loginUser, siSoukinId);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_送金通知出力Async(NBaseData.DAC.MsUser loginUser, string siSoukinId) {
            return base.Channel.BLC_Excel_送金通知出力Async(loginUser, siSoukinId);
        }
        
        public bool BLC_月次計上確定(NBaseData.DAC.MsUser loginUser, string shimeNengetsu) {
            return base.Channel.BLC_月次計上確定(loginUser, shimeNengetsu);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_月次計上確定Async(NBaseData.DAC.MsUser loginUser, string shimeNengetsu) {
            return base.Channel.BLC_月次計上確定Async(loginUser, shimeNengetsu);
        }
        
        public bool BLC_次年度休暇確定(NBaseData.DAC.MsUser loginUser, string shimeNen) {
            return base.Channel.BLC_次年度休暇確定(loginUser, shimeNen);
        }
        
        public System.Threading.Tasks.Task<bool> BLC_次年度休暇確定Async(NBaseData.DAC.MsUser loginUser, string shimeNen) {
            return base.Channel.BLC_次年度休暇確定Async(loginUser, shimeNen);
        }
        
        public byte[] BLC_Excel_休日付与簿出力(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_休日付与簿出力(loginUser, date);
        }
        
        public System.Threading.Tasks.Task<byte[]> BLC_Excel_休日付与簿出力Async(NBaseData.DAC.MsUser loginUser, System.DateTime date) {
            return base.Channel.BLC_Excel_休日付与簿出力Async(loginUser, date);
        }
    }
}
