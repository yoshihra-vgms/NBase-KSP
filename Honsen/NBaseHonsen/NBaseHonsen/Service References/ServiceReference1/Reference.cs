//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NBaseHonsen.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        SyncClient.ServiceReference1.CompositeType GetDataUsingDataContract(SyncClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/データ同期", ReplyAction="http://tempuri.org/IService1/データ同期Response")]
        string データ同期(int vesselSchemaVersion, string xml, decimal maxDataNoOfVesselIdZero, decimal maxDataNo, int vesselId, string hostName, string modueVersion, string userId, System.DateTime vesselDate, int curNo, int maxNo, int counter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/文書データ同期_送信", ReplyAction="http://tempuri.org/IService1/文書データ同期_送信Response")]
        string 文書データ同期_送信(string xml, int vesselId, string hostName, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/文書データ同期_受信", ReplyAction="http://tempuri.org/IService1/文書データ同期_受信Response")]
        string 文書データ同期_受信(System.Collections.Generic.List<string> requestOdAttachFileIds, System.Collections.Generic.List<string> requestHoukokushoIds, System.Collections.Generic.List<string> requestKanriKirokuIds, System.Collections.Generic.List<string> requestKoubunshoKisokuIds, int vesselId, string hostName, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/添付ファイル同期_送信", ReplyAction="http://tempuri.org/IService1/添付ファイル同期_送信Response")]
        string 添付ファイル同期_送信(string xml, int vesselId, string hostName, string userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : NBaseHonsen.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<NBaseHonsen.ServiceReference1.IService1>, NBaseHonsen.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public SyncClient.ServiceReference1.CompositeType GetDataUsingDataContract(SyncClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public string データ同期(int vesselSchemaVersion, string xml, decimal maxDataNoOfVesselIdZero, decimal maxDataNo, int vesselId, string hostName, string modueVersion, string userId, System.DateTime vesselDate, int curNo, int maxNo, int counter) {
            return base.Channel.データ同期(vesselSchemaVersion, xml, maxDataNoOfVesselIdZero, maxDataNo, vesselId, hostName, modueVersion, userId, vesselDate, curNo, maxNo, counter);
        }
        
        public string 文書データ同期_送信(string xml, int vesselId, string hostName, string userId) {
            return base.Channel.文書データ同期_送信(xml, vesselId, hostName, userId);
        }
        
        public string 文書データ同期_受信(System.Collections.Generic.List<string> requestOdAttachFileIds, System.Collections.Generic.List<string> requestHoukokushoIds, System.Collections.Generic.List<string> requestKanriKirokuIds, System.Collections.Generic.List<string> requestKoubunshoKisokuIds, int vesselId, string hostName, string userId) {
            return base.Channel.文書データ同期_受信(requestOdAttachFileIds, requestHoukokushoIds, requestKanriKirokuIds, requestKoubunshoKisokuIds, vesselId, hostName, userId);
        }
        
        public string 添付ファイル同期_送信(string xml, int vesselId, string hostName, string userId) {
            return base.Channel.添付ファイル同期_送信(xml, vesselId, hostName, userId);
        }
    }
}
